<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>main.dox</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/doc/uptodate/</path>
    <filename>main_8dox</filename>
  </compound>
  <compound kind="file">
    <name>WsAbstractAuth.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Auth/</path>
    <filename>WsAbstractAuth_8cpp</filename>
    <includes id="WsAbstractAuth_8h" name="WsAbstractAuth.h" local="yes" imported="no">WsAbstractAuth.h</includes>
  </compound>
  <compound kind="file">
    <name>WsAbstractAuth.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Auth/</path>
    <filename>WsAbstractAuth_8h</filename>
    <class kind="class">WsAbstractAuth</class>
  </compound>
  <compound kind="file">
    <name>WsAuthenticator.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Auth/</path>
    <filename>WsAuthenticator_8cpp</filename>
    <includes id="WsAuthenticator_8h" name="WsAuthenticator.h" local="yes" imported="no">WsAuthenticator.h</includes>
    <includes id="WsGlobalConfig_8h" name="WsGlobalConfig.h" local="no" imported="no">Include/WsGlobalConfig.h</includes>
    <includes id="WsGlobalProperties_8h" name="WsGlobalProperties.h" local="no" imported="no">ConfigManager/WsGlobalProperties.h</includes>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
  </compound>
  <compound kind="file">
    <name>WsAuthenticator.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Auth/</path>
    <filename>WsAuthenticator_8h</filename>
    <includes id="WsAbstractAuth_8h" name="WsAbstractAuth.h" local="yes" imported="no">WsAbstractAuth.h</includes>
    <class kind="class">WsAuthenticator</class>
    <member kind="typedef">
      <type>WsAbstractAuth *(*</type>
      <name>pf_wsAuthMod</name>
      <anchorfile>WsAuthenticator_8h.html</anchorfile>
      <anchor>a25c4ca680560f3a2271889be2df6a0be</anchor>
      <arglist>)()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsCompressor.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Compression/</path>
    <filename>WsCompressor_8cpp</filename>
    <includes id="WsCompressor_8h" name="WsCompressor.h" local="yes" imported="no">WsCompressor.h</includes>
    <includes id="WsGlobalConfig_8h" name="WsGlobalConfig.h" local="no" imported="no">Include/WsGlobalConfig.h</includes>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
  </compound>
  <compound kind="file">
    <name>WsCompressor.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Compression/</path>
    <filename>WsCompressor_8h</filename>
    <class kind="class">WsCompressor</class>
  </compound>
  <compound kind="file">
    <name>WsDecompressor.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Compression/</path>
    <filename>WsDecompressor_8cpp</filename>
    <includes id="WsDecompressor_8h" name="WsDecompressor.h" local="yes" imported="no">WsDecompressor.h</includes>
    <includes id="WsGlobalConfig_8h" name="WsGlobalConfig.h" local="no" imported="no">Include/WsGlobalConfig.h</includes>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
  </compound>
  <compound kind="file">
    <name>WsDecompressor.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Compression/</path>
    <filename>WsDecompressor_8h</filename>
    <class kind="class">WsDecompressor</class>
  </compound>
  <compound kind="file">
    <name>WsAbstractProperties.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/ConfigManager/</path>
    <filename>WsAbstractProperties_8cpp</filename>
    <includes id="WsAbstractProperties_8h" name="WsAbstractProperties.h" local="yes" imported="no">WsAbstractProperties.h</includes>
    <includes id="WsGlobalConfig_8h" name="WsGlobalConfig.h" local="no" imported="no">Include/WsGlobalConfig.h</includes>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
  </compound>
  <compound kind="file">
    <name>WsAbstractProperties.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/ConfigManager/</path>
    <filename>WsAbstractProperties_8h</filename>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
    <class kind="class">WsAbstractProperties</class>
  </compound>
  <compound kind="file">
    <name>WsGlobalProperties.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/ConfigManager/</path>
    <filename>WsGlobalProperties_8cpp</filename>
    <includes id="WsGlobalProperties_8h" name="WsGlobalProperties.h" local="yes" imported="no">WsGlobalProperties.h</includes>
    <includes id="WsGlobalConfig_8h" name="WsGlobalConfig.h" local="no" imported="no">Include/WsGlobalConfig.h</includes>
  </compound>
  <compound kind="file">
    <name>WsGlobalProperties.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/ConfigManager/</path>
    <filename>WsGlobalProperties_8h</filename>
    <includes id="WsAbstractProperties_8h" name="WsAbstractProperties.h" local="yes" imported="no">WsAbstractProperties.h</includes>
    <class kind="class">WsGlobalProperties</class>
  </compound>
  <compound kind="file">
    <name>WsLayoutProperties.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/ConfigManager/</path>
    <filename>WsLayoutProperties_8cpp</filename>
    <includes id="WsLayoutProperties_8h" name="WsLayoutProperties.h" local="yes" imported="no">WsLayoutProperties.h</includes>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
    <includes id="WsGlobalConfig_8h" name="WsGlobalConfig.h" local="no" imported="no">Include/WsGlobalConfig.h</includes>
  </compound>
  <compound kind="file">
    <name>WsLayoutProperties.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/ConfigManager/</path>
    <filename>WsLayoutProperties_8h</filename>
    <includes id="WsAbstractProperties_8h" name="WsAbstractProperties.h" local="yes" imported="no">WsAbstractProperties.h</includes>
    <class kind="class">WsLayoutProperties</class>
  </compound>
  <compound kind="file">
    <name>WsNodeProperties.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/ConfigManager/</path>
    <filename>WsNodeProperties_8cpp</filename>
    <includes id="WsNodeProperties_8h" name="WsNodeProperties.h" local="yes" imported="no">WsNodeProperties.h</includes>
    <includes id="WsGlobalConfig_8h" name="WsGlobalConfig.h" local="no" imported="no">Include/WsGlobalConfig.h</includes>
    <includes id="WsGlobalProperties_8h" name="WsGlobalProperties.h" local="yes" imported="no">WsGlobalProperties.h</includes>
  </compound>
  <compound kind="file">
    <name>WsNodeProperties.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/ConfigManager/</path>
    <filename>WsNodeProperties_8h</filename>
    <includes id="WsAbstractProperties_8h" name="WsAbstractProperties.h" local="yes" imported="no">WsAbstractProperties.h</includes>
    <class kind="class">WsNodeProperties</class>
  </compound>
  <compound kind="file">
    <name>WsNodeResources.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/ConfigManager/</path>
    <filename>WsNodeResources_8cpp</filename>
    <includes id="WsNodeResources_8h" name="WsNodeResources.h" local="yes" imported="no">WsNodeResources.h</includes>
    <includes id="WsGlobalConfig_8h" name="WsGlobalConfig.h" local="no" imported="no">Include/WsGlobalConfig.h</includes>
    <includes id="WsGlobalProperties_8h" name="WsGlobalProperties.h" local="yes" imported="no">WsGlobalProperties.h</includes>
  </compound>
  <compound kind="file">
    <name>WsNodeResources.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/ConfigManager/</path>
    <filename>WsNodeResources_8h</filename>
    <includes id="WsAbstractProperties_8h" name="WsAbstractProperties.h" local="yes" imported="no">WsAbstractProperties.h</includes>
    <class kind="class">WsNodeResources</class>
  </compound>
  <compound kind="file">
    <name>WsDirectoryCrawler.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/DirCrawler/</path>
    <filename>WsDirectoryCrawler_8cpp</filename>
    <includes id="WsDirectoryCrawler_8h" name="WsDirectoryCrawler.h" local="yes" imported="no">WsDirectoryCrawler.h</includes>
    <includes id="WsGlobalConfig_8h" name="WsGlobalConfig.h" local="no" imported="no">Include/WsGlobalConfig.h</includes>
  </compound>
  <compound kind="file">
    <name>WsDirectoryCrawler.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/DirCrawler/</path>
    <filename>WsDirectoryCrawler_8h</filename>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
    <class kind="class">WsDirectoryCrawler</class>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_FILESYSTEM_NO_DEPRECATED</name>
      <anchorfile>WsDirectoryCrawler_8h.html</anchorfile>
      <anchor>a3f662379b0269b73ca7edd271a7a9bfc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>main.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/FhtmlEditor/src/</path>
    <filename>FhtmlEditor_2src_2main_8cpp</filename>
    <includes id="WsLayoutProperties_8h" name="WsLayoutProperties.h" local="no" imported="no">ConfigManager/WsLayoutProperties.h</includes>
    <member kind="function">
      <type>WApplication *</type>
      <name>createApplication</name>
      <anchorfile>FhtmlEditor_2src_2main_8cpp.html</anchorfile>
      <anchor>acb337c09cd35644b56da8b0e5bb17b9c</anchor>
      <arglist>(const WEnvironment &amp;env)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>FhtmlEditor_2src_2main_8cpp.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>main.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Main/</path>
    <filename>Main_2main_8cpp</filename>
    <includes id="WsUser_8h" name="WsUser.h" local="no" imported="no">User/WsUser.h</includes>
    <includes id="WsCrashLogger_8h" name="WsCrashLogger.h" local="no" imported="no">Logger/WsCrashLogger.h</includes>
    <includes id="WsApplication_8h" name="WsApplication.h" local="yes" imported="no">WsApplication.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_FILESYSTEM_NO_DEPRECATED</name>
      <anchorfile>Main_2main_8cpp.html</anchorfile>
      <anchor>a3f662379b0269b73ca7edd271a7a9bfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>WApplication *</type>
      <name>createApplication</name>
      <anchorfile>Main_2main_8cpp.html</anchorfile>
      <anchor>a04a3ef26201fb8ea69665efdfba784bb</anchor>
      <arglist>(void *pTree, const WEnvironment &amp;env)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>Main_2main_8cpp.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsAbstractNode.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/FileSystemTree/</path>
    <filename>WsAbstractNode_8cpp</filename>
    <includes id="WsAbstractNode_8h" name="WsAbstractNode.h" local="yes" imported="no">WsAbstractNode.h</includes>
  </compound>
  <compound kind="file">
    <name>WsAbstractNode.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/FileSystemTree/</path>
    <filename>WsAbstractNode_8h</filename>
    <includes id="WsNodeProperties_8h" name="WsNodeProperties.h" local="no" imported="no">ConfigManager/WsNodeProperties.h</includes>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
    <class kind="class">WsAbstractNode</class>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_FILESYSTEM_NO_DEPRECATED</name>
      <anchorfile>WsAbstractNode_8h.html</anchorfile>
      <anchor>a3f662379b0269b73ca7edd271a7a9bfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; WsAbstractNode &gt;</type>
      <name>NodePtr</name>
      <anchorfile>WsAbstractNode_8h.html</anchorfile>
      <anchor>a5e4206f5eb5efc6e55c310ecc1e0c52d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::weak_ptr&lt; WsAbstractNode &gt;</type>
      <name>WNodePtr</name>
      <anchorfile>WsAbstractNode_8h.html</anchorfile>
      <anchor>add56b917c0eae8d791d46d3d833f9374</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; WsNodeProperties &gt;</type>
      <name>NodePropertiesPtr</name>
      <anchorfile>WsAbstractNode_8h.html</anchorfile>
      <anchor>a9d055176331d75e5d8b09dee965740e3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsDirNode.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/FileSystemTree/</path>
    <filename>WsDirNode_8cpp</filename>
    <includes id="WsDirNode_8h" name="WsDirNode.h" local="yes" imported="no">WsDirNode.h</includes>
    <includes id="WsGlobalConfig_8h" name="WsGlobalConfig.h" local="no" imported="no">Include/WsGlobalConfig.h</includes>
  </compound>
  <compound kind="file">
    <name>WsDirNode.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/FileSystemTree/</path>
    <filename>WsDirNode_8h</filename>
    <includes id="WsNode_8h" name="WsNode.h" local="yes" imported="no">WsNode.h</includes>
    <includes id="WsGlobalProperties_8h" name="WsGlobalProperties.h" local="no" imported="no">ConfigManager/WsGlobalProperties.h</includes>
    <includes id="WsNodeResources_8h" name="WsNodeResources.h" local="no" imported="no">ConfigManager/WsNodeResources.h</includes>
    <class kind="class">WsDirNode</class>
  </compound>
  <compound kind="file">
    <name>WsFileNode.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/FileSystemTree/</path>
    <filename>WsFileNode_8cpp</filename>
    <includes id="WsFileNode_8h" name="WsFileNode.h" local="yes" imported="no">WsFileNode.h</includes>
  </compound>
  <compound kind="file">
    <name>WsFileNode.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/FileSystemTree/</path>
    <filename>WsFileNode_8h</filename>
    <includes id="WsNode_8h" name="WsNode.h" local="yes" imported="no">WsNode.h</includes>
    <includes id="WsDirNode_8h" name="WsDirNode.h" local="yes" imported="no">WsDirNode.h</includes>
    <includes id="WsNodeProperties_8h" name="WsNodeProperties.h" local="no" imported="no">ConfigManager/WsNodeProperties.h</includes>
    <class kind="class">WsFileNode</class>
  </compound>
  <compound kind="file">
    <name>WsFileSystemTree.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/FileSystemTree/</path>
    <filename>WsFileSystemTree_8cpp</filename>
    <includes id="WsFileSystemTree_8h" name="WsFileSystemTree.h" local="yes" imported="no">WsFileSystemTree.h</includes>
    <includes id="WsGlobalConfig_8h" name="WsGlobalConfig.h" local="no" imported="no">Include/WsGlobalConfig.h</includes>
    <includes id="WsNodeProperties_8h" name="WsNodeProperties.h" local="no" imported="no">ConfigManager/WsNodeProperties.h</includes>
  </compound>
  <compound kind="file">
    <name>WsFileSystemTree.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/FileSystemTree/</path>
    <filename>WsFileSystemTree_8h</filename>
    <includes id="WsAbstractNode_8h" name="WsAbstractNode.h" local="yes" imported="no">WsAbstractNode.h</includes>
    <includes id="WsNode_8h" name="WsNode.h" local="yes" imported="no">WsNode.h</includes>
    <includes id="WsDirNode_8h" name="WsDirNode.h" local="yes" imported="no">WsDirNode.h</includes>
    <includes id="WsFileNode_8h" name="WsFileNode.h" local="yes" imported="no">WsFileNode.h</includes>
    <includes id="WsDirectoryCrawler_8h" name="WsDirectoryCrawler.h" local="no" imported="no">DirCrawler/WsDirectoryCrawler.h</includes>
    <class kind="class">WsFileSystemTree</class>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_FILESYSTEM_NO_DEPRECATED</name>
      <anchorfile>WsFileSystemTree_8h.html</anchorfile>
      <anchor>a3f662379b0269b73ca7edd271a7a9bfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; WsFileSystemTree &gt;</type>
      <name>FileSystemTreePtr</name>
      <anchorfile>WsFileSystemTree_8h.html</anchorfile>
      <anchor>a39250d17897d9648438c656bc115cba4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsNode.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/FileSystemTree/</path>
    <filename>WsNode_8cpp</filename>
    <includes id="WsNode_8h" name="WsNode.h" local="yes" imported="no">WsNode.h</includes>
    <includes id="WsGlobalConfig_8h" name="WsGlobalConfig.h" local="no" imported="no">Include/WsGlobalConfig.h</includes>
  </compound>
  <compound kind="file">
    <name>WsNode.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/FileSystemTree/</path>
    <filename>WsNode_8h</filename>
    <includes id="WsNodeProperties_8h" name="WsNodeProperties.h" local="no" imported="no">ConfigManager/WsNodeProperties.h</includes>
    <includes id="WsGlobalConfig_8h" name="WsGlobalConfig.h" local="no" imported="no">Include/WsGlobalConfig.h</includes>
    <includes id="WsAbstractNode_8h" name="WsAbstractNode.h" local="yes" imported="no">WsAbstractNode.h</includes>
    <class kind="class">WsNode</class>
    <class kind="struct">WsNode::compareNodes</class>
  </compound>
  <compound kind="file">
    <name>WsAbstractFsClient.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/FsClient/</path>
    <filename>WsAbstractFsClient_8cpp</filename>
    <includes id="WsAbstractFsClient_8h" name="WsAbstractFsClient.h" local="yes" imported="no">WsAbstractFsClient.h</includes>
  </compound>
  <compound kind="file">
    <name>WsAbstractFsClient.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/FsClient/</path>
    <filename>WsAbstractFsClient_8h</filename>
    <includes id="WsNodeProperties_8h" name="WsNodeProperties.h" local="no" imported="no">ConfigManager/WsNodeProperties.h</includes>
    <includes id="WsAbstractNode_8h" name="WsAbstractNode.h" local="no" imported="no">FileSystemTree/WsAbstractNode.h</includes>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
    <includes id="WsResultItem_8h" name="WsResultItem.h" local="no" imported="no">Search/WsResultItem.h</includes>
    <class kind="class">WsAbstractFsClient</class>
  </compound>
  <compound kind="file">
    <name>WsFsDaemonClient.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/FsClient/</path>
    <filename>WsFsDaemonClient_8cpp</filename>
    <includes id="WsFsDaemonClient_8h" name="WsFsDaemonClient.h" local="yes" imported="no">WsFsDaemonClient.h</includes>
    <includes id="WsGlobalProperties_8h" name="WsGlobalProperties.h" local="no" imported="no">ConfigManager/WsGlobalProperties.h</includes>
    <includes id="WsTreeDeserializer_8h" name="WsTreeDeserializer.h" local="no" imported="no">Serializer/WsTreeDeserializer.h</includes>
    <includes id="WsArrayDeserializer_8h" name="WsArrayDeserializer.h" local="no" imported="no">Serializer/WsArrayDeserializer.h</includes>
    <includes id="WsGlobalConfig_8h" name="WsGlobalConfig.h" local="no" imported="no">Include/WsGlobalConfig.h</includes>
    <includes id="WsRequestType_8h" name="WsRequestType.h" local="no" imported="no">Include/WsRequestType.h</includes>
  </compound>
  <compound kind="file">
    <name>WsFsDaemonClient.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/FsClient/</path>
    <filename>WsFsDaemonClient_8h</filename>
    <includes id="WsAbstractFsClient_8h" name="WsAbstractFsClient.h" local="yes" imported="no">WsAbstractFsClient.h</includes>
    <includes id="WsCompressor_8h" name="WsCompressor.h" local="no" imported="no">Compression/WsCompressor.h</includes>
    <includes id="WsDecompressor_8h" name="WsDecompressor.h" local="no" imported="no">Compression/WsDecompressor.h</includes>
    <class kind="class">WsFsDaemonClient</class>
  </compound>
  <compound kind="file">
    <name>WsFsTreeClient.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/FsClient/</path>
    <filename>WsFsTreeClient_8cpp</filename>
    <includes id="WsFsTreeClient_8h" name="WsFsTreeClient.h" local="yes" imported="no">WsFsTreeClient.h</includes>
    <includes id="WsGlobalConfig_8h" name="WsGlobalConfig.h" local="no" imported="no">Include/WsGlobalConfig.h</includes>
    <includes id="WsNodeProperties_8h" name="WsNodeProperties.h" local="no" imported="no">ConfigManager/WsNodeProperties.h</includes>
  </compound>
  <compound kind="file">
    <name>WsFsTreeClient.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/FsClient/</path>
    <filename>WsFsTreeClient_8h</filename>
    <includes id="WsFsTreeUpdater_8h" name="WsFsTreeUpdater.h" local="no" imported="no">Updater/WsFsTreeUpdater.h</includes>
    <includes id="WsMenuTree_8h" name="WsMenuTree.h" local="no" imported="no">Tree/WsMenuTree.h</includes>
    <includes id="WsFsTreeOperations_8h" name="WsFsTreeOperations.h" local="no" imported="no">FsTreeOp/WsFsTreeOperations.h</includes>
    <includes id="WsAccessTree_8h" name="WsAccessTree.h" local="no" imported="no">Tree/WsAccessTree.h</includes>
    <includes id="WsAuthenticator_8h" name="WsAuthenticator.h" local="no" imported="no">Auth/WsAuthenticator.h</includes>
    <includes id="WsGlobalProperties_8h" name="WsGlobalProperties.h" local="no" imported="no">ConfigManager/WsGlobalProperties.h</includes>
    <includes id="WsSearch_8h" name="WsSearch.h" local="no" imported="no">Search/WsSearch.h</includes>
    <includes id="WsAbstractFsClient_8h" name="WsAbstractFsClient.h" local="yes" imported="no">WsAbstractFsClient.h</includes>
    <class kind="class">WsFsTreeClient</class>
  </compound>
  <compound kind="file">
    <name>WsFsDaemon.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/FsDaemon/</path>
    <filename>WsFsDaemon_8cpp</filename>
    <includes id="WsFsDaemon_8h" name="WsFsDaemon.h" local="yes" imported="no">WsFsDaemon.h</includes>
    <includes id="WsGlobalConfig_8h" name="WsGlobalConfig.h" local="no" imported="no">Include/WsGlobalConfig.h</includes>
    <includes id="WsMenuTree_8h" name="WsMenuTree.h" local="no" imported="no">Tree/WsMenuTree.h</includes>
    <includes id="WsAccessTree_8h" name="WsAccessTree.h" local="no" imported="no">Tree/WsAccessTree.h</includes>
    <includes id="WsArraySerializer_8h" name="WsArraySerializer.h" local="no" imported="no">Serializer/WsArraySerializer.h</includes>
    <includes id="WsTreeSerializer_8h" name="WsTreeSerializer.h" local="no" imported="no">Serializer/WsTreeSerializer.h</includes>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
    <includes id="WsSearch_8h" name="WsSearch.h" local="no" imported="no">Search/WsSearch.h</includes>
    <includes id="WsRequestType_8h" name="WsRequestType.h" local="no" imported="no">Include/WsRequestType.h</includes>
  </compound>
  <compound kind="file">
    <name>WsFsDaemon.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/FsDaemon/</path>
    <filename>WsFsDaemon_8h</filename>
    <includes id="WsFileSystemTree_8h" name="WsFileSystemTree.h" local="no" imported="no">FileSystemTree/WsFileSystemTree.h</includes>
    <includes id="WsFsTreeUpdater_8h" name="WsFsTreeUpdater.h" local="no" imported="no">Updater/WsFsTreeUpdater.h</includes>
    <includes id="WsGlobalProperties_8h" name="WsGlobalProperties.h" local="no" imported="no">ConfigManager/WsGlobalProperties.h</includes>
    <includes id="WsAuthenticator_8h" name="WsAuthenticator.h" local="no" imported="no">Auth/WsAuthenticator.h</includes>
    <includes id="WsCompressor_8h" name="WsCompressor.h" local="no" imported="no">Compression/WsCompressor.h</includes>
    <includes id="WsDecompressor_8h" name="WsDecompressor.h" local="no" imported="no">Compression/WsDecompressor.h</includes>
    <includes id="WsFsTreeOperations_8h" name="WsFsTreeOperations.h" local="no" imported="no">FsTreeOp/WsFsTreeOperations.h</includes>
    <includes id="WsUserSession_8h" name="WsUserSession.h" local="yes" imported="no">WsUserSession.h</includes>
    <class kind="class">WsFsDaemon</class>
  </compound>
  <compound kind="file">
    <name>WsFsDaemonLoader.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/FsDaemon/</path>
    <filename>WsFsDaemonLoader_8cpp</filename>
    <includes id="WsFsDaemonLoader_8h" name="WsFsDaemonLoader.h" local="yes" imported="no">WsFsDaemonLoader.h</includes>
    <includes id="WsCrashLogger_8h" name="WsCrashLogger.h" local="no" imported="no">Logger/WsCrashLogger.h</includes>
    <member kind="function">
      <type>void</type>
      <name>usage</name>
      <anchorfile>WsFsDaemonLoader_8cpp.html</anchorfile>
      <anchor>a2ef30c42cbc289d899a8be5d2d8f77d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handle_int</name>
      <anchorfile>WsFsDaemonLoader_8cpp.html</anchorfile>
      <anchor>a6a4c1169d4ccb32c22c9eed5072dae15</anchor>
      <arglist>(int sig)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>WsFsDaemonLoader_8cpp.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
    <member kind="variable">
      <type>WsFsDaemonLoader *</type>
      <name>serverLoader</name>
      <anchorfile>WsFsDaemonLoader_8cpp.html</anchorfile>
      <anchor>a8f6b397a1de8ae080a9b0e090d68894b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsFsDaemonLoader.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/FsDaemon/</path>
    <filename>WsFsDaemonLoader_8h</filename>
    <includes id="WsFsDaemon_8h" name="WsFsDaemon.h" local="yes" imported="no">WsFsDaemon.h</includes>
    <includes id="WsGlobalProperties_8h" name="WsGlobalProperties.h" local="no" imported="no">ConfigManager/WsGlobalProperties.h</includes>
    <class kind="class">WsFsDaemonLoader</class>
    <member kind="define">
      <type>#define</type>
      <name>WS_FSDAMEON_LOADER_H__</name>
      <anchorfile>WsFsDaemonLoader_8h.html</anchorfile>
      <anchor>a44bb8825b50c8a4fd4943f1212c173f4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsUserSession.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/FsDaemon/</path>
    <filename>WsUserSession_8cpp</filename>
    <includes id="WsUserSession_8h" name="WsUserSession.h" local="yes" imported="no">WsUserSession.h</includes>
  </compound>
  <compound kind="file">
    <name>WsUserSession.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/FsDaemon/</path>
    <filename>WsUserSession_8h</filename>
    <class kind="class">WsUserSession</class>
    <member kind="define">
      <type>#define</type>
      <name>WS_USER_SESSION__H__</name>
      <anchorfile>WsUserSession_8h.html</anchorfile>
      <anchor>ac0485d50a01bafa06234b05fe557c6bb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsFsTreeConsultation.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/FsTreeOp/</path>
    <filename>WsFsTreeConsultation_8cpp</filename>
    <includes id="WsFsTreeConsultation_8h" name="WsFsTreeConsultation.h" local="yes" imported="no">WsFsTreeConsultation.h</includes>
    <includes id="WsGlobalProperties_8h" name="WsGlobalProperties.h" local="no" imported="no">ConfigManager/WsGlobalProperties.h</includes>
    <includes id="WsSearch_8h" name="WsSearch.h" local="no" imported="no">Search/WsSearch.h</includes>
  </compound>
  <compound kind="file">
    <name>WsFsTreeConsultation.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/FsTreeOp/</path>
    <filename>WsFsTreeConsultation_8h</filename>
    <includes id="WsAccessTree_8h" name="WsAccessTree.h" local="no" imported="no">Tree/WsAccessTree.h</includes>
    <includes id="WsMenuTree_8h" name="WsMenuTree.h" local="no" imported="no">Tree/WsMenuTree.h</includes>
    <includes id="WsResultItem_8h" name="WsResultItem.h" local="no" imported="no">Search/WsResultItem.h</includes>
    <includes id="WsFsTreeUpdater_8h" name="WsFsTreeUpdater.h" local="no" imported="no">Updater/WsFsTreeUpdater.h</includes>
    <class kind="class">WsFsTreeConsultation</class>
  </compound>
  <compound kind="file">
    <name>WsFsTreeModification.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/FsTreeOp/</path>
    <filename>WsFsTreeModification_8cpp</filename>
    <includes id="WsFsTreeModification_8h" name="WsFsTreeModification.h" local="yes" imported="no">WsFsTreeModification.h</includes>
    <includes id="WsGlobalProperties_8h" name="WsGlobalProperties.h" local="no" imported="no">ConfigManager/WsGlobalProperties.h</includes>
    <includes id="WsSearch_8h" name="WsSearch.h" local="no" imported="no">Search/WsSearch.h</includes>
  </compound>
  <compound kind="file">
    <name>WsFsTreeModification.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/FsTreeOp/</path>
    <filename>WsFsTreeModification_8h</filename>
    <includes id="WsAccessTree_8h" name="WsAccessTree.h" local="no" imported="no">Tree/WsAccessTree.h</includes>
    <includes id="WsMenuTree_8h" name="WsMenuTree.h" local="no" imported="no">Tree/WsMenuTree.h</includes>
    <includes id="WsResultItem_8h" name="WsResultItem.h" local="no" imported="no">Search/WsResultItem.h</includes>
    <includes id="WsFsTreeUpdater_8h" name="WsFsTreeUpdater.h" local="no" imported="no">Updater/WsFsTreeUpdater.h</includes>
    <class kind="class">WsFsTreeModification</class>
  </compound>
  <compound kind="file">
    <name>WsFsTreeOperations.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/FsTreeOp/</path>
    <filename>WsFsTreeOperations_8cpp</filename>
    <includes id="WsFsTreeOperations_8h" name="WsFsTreeOperations.h" local="yes" imported="no">WsFsTreeOperations.h</includes>
  </compound>
  <compound kind="file">
    <name>WsFsTreeOperations.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/FsTreeOp/</path>
    <filename>WsFsTreeOperations_8h</filename>
    <includes id="WsAccessTree_8h" name="WsAccessTree.h" local="no" imported="no">Tree/WsAccessTree.h</includes>
    <includes id="WsMenuTree_8h" name="WsMenuTree.h" local="no" imported="no">Tree/WsMenuTree.h</includes>
    <includes id="WsResultItem_8h" name="WsResultItem.h" local="no" imported="no">Search/WsResultItem.h</includes>
    <includes id="WsFsTreeConsultation_8h" name="WsFsTreeConsultation.h" local="yes" imported="no">WsFsTreeConsultation.h</includes>
    <includes id="WsFsTreeModification_8h" name="WsFsTreeModification.h" local="yes" imported="no">WsFsTreeModification.h</includes>
    <class kind="class">WsFsTreeOperations</class>
  </compound>
  <compound kind="file">
    <name>WsGlobalConfig.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Include/</path>
    <filename>WsGlobalConfig_8h</filename>
    <namespace>GlobalConfig</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SUCCESS</name>
      <anchorfile>WsGlobalConfig_8h.html</anchorfile>
      <anchor>aa90cac659d18e8ef6294c7ae337f6b58</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FAILURE</name>
      <anchorfile>WsGlobalConfig_8h.html</anchorfile>
      <anchor>a6d58f9ac447476b4e084d7ca383f5183</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>Read</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>ad0334f42b9da85806722f60ed2193504</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ReadWrite</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>a7d9c2d79cab9231d3198996f0c9f7ce9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>NotAvail</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>a78272c8708d2bf38760ceafc20ea038b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>NotFound</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>a30ad0ae0c9f9f20ad0e9d27089578f02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>NoAccess</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>a5174d03fbc8d6b5a0fa7c38649fc1be4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>NotLogged</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>a89e47c27f0fbbaa60bbb6d6494ef06b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>On</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>a50ff3a907f583b0f1a03f9c37429f2ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>Off</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>ae0d1426ab77211aa29cc02f4547c11bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>Delay</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>aa2762044086d8e1dfe61f0a73ac8af81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>StdOut</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>a9d566a3d40bd230feabb8f04dded50a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>StdErr</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>acfec0aa50a3ec5d2814d27c9cbac3e6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>GlobalPropertiesPath</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>a047094c41ccc0da7974b6538b0de3eea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>LayoutPropertiesPath</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>ade511ba4601469ed45973b045437bd86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>PluginsPropertiesPath</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>abbb8a23252e85c38c2833f165cee3967</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>CrashLogPath</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>ac7649cfebb3630cc6e17424350aca1e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>PathToLockFile</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>aa55d6671e3be073fd2b687849e7cfd7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>PathToConfig</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>a2b3fccaa38bb6bd2fc6f648af097b2dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>PathToNodeProperties</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>a90651fd6716206d88cae710653ae1f88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>PathToDirProperties</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>a58b5971229720815e347f643289bfd7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>PathToImages</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>afe9f4739ba1e9c004d1263fc2c6a0515</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>PathToTemplates</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>ac87179bfd9c32d45093b561df41c4bb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>PathToIcones</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>a5afd0c8e3678386849980c2ac0819487</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>ConfExt</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>abd4379c6dcb682c8501558b3c3d4c854</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>NbItems</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>a0331d64b3cff91765cecc477d2bd731b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>SubFolders</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>a467a18efdd8e47450b80d910d4796ecb</anchor>
      <arglist>[NbItems]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsRequestType.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Include/</path>
    <filename>WsRequestType_8h</filename>
    <namespace>RequestField</namespace>
    <member kind="enumeration">
      <type></type>
      <name>RequestType</name>
      <anchorfile>WsRequestType_8h.html</anchorfile>
      <anchor>ae10b07f2d0feb103db7fe4cfd192e5af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Auth</name>
      <anchorfile>WsRequestType_8h.html</anchorfile>
      <anchor>ae10b07f2d0feb103db7fe4cfd192e5afab89e8213cc79779a698875f1ac89445c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Perm</name>
      <anchorfile>WsRequestType_8h.html</anchorfile>
      <anchor>ae10b07f2d0feb103db7fe4cfd192e5afa26ba5a4cd6dbbe498101df0a272d9dbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>AllGroups</name>
      <anchorfile>WsRequestType_8h.html</anchorfile>
      <anchor>ae10b07f2d0feb103db7fe4cfd192e5afab0051f1de45115a1ffbf9699d9700afb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Properties</name>
      <anchorfile>WsRequestType_8h.html</anchorfile>
      <anchor>ae10b07f2d0feb103db7fe4cfd192e5afab0404ffef733441150fb5ee322fec245</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Property</name>
      <anchorfile>WsRequestType_8h.html</anchorfile>
      <anchor>ae10b07f2d0feb103db7fe4cfd192e5afa6b59cf161fe69fad3478f2aa7b98bf7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Search</name>
      <anchorfile>WsRequestType_8h.html</anchorfile>
      <anchor>ae10b07f2d0feb103db7fe4cfd192e5afaf42dd3bc2be56354d2fbf529a3141416</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>ClearCache</name>
      <anchorfile>WsRequestType_8h.html</anchorfile>
      <anchor>ae10b07f2d0feb103db7fe4cfd192e5afae06522eb89ac3398b2fe46c3304017dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MenuItems</name>
      <anchorfile>WsRequestType_8h.html</anchorfile>
      <anchor>ae10b07f2d0feb103db7fe4cfd192e5afa7a898a23c9e297bdb98925b335517f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MenuItemsEx</name>
      <anchorfile>WsRequestType_8h.html</anchorfile>
      <anchor>ae10b07f2d0feb103db7fe4cfd192e5afa7ce0aaea699d8ee9b1f10df51a98c6dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>AccessItems</name>
      <anchorfile>WsRequestType_8h.html</anchorfile>
      <anchor>ae10b07f2d0feb103db7fe4cfd192e5afa443f0d995509c894dbd7a9f7b631245d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>IsEditor</name>
      <anchorfile>WsRequestType_8h.html</anchorfile>
      <anchor>ae10b07f2d0feb103db7fe4cfd192e5afa6d8e999bafbe4b5bed23a90f205d0a86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>IsAdmin</name>
      <anchorfile>WsRequestType_8h.html</anchorfile>
      <anchor>ae10b07f2d0feb103db7fe4cfd192e5afa3a1d282dfe3b3c2371a5dca532d2318b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>RootPath</name>
      <anchorfile>WsRequestType_8h.html</anchorfile>
      <anchor>ae10b07f2d0feb103db7fe4cfd192e5afa6fbba0662432b00b8261f62959ad27c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>TreeVersion</name>
      <anchorfile>WsRequestType_8h.html</anchorfile>
      <anchor>ae10b07f2d0feb103db7fe4cfd192e5afadb42f64c072ccfd2cd0bbc13755a2937</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SaveProps</name>
      <anchorfile>WsRequestType_8h.html</anchorfile>
      <anchor>ae10b07f2d0feb103db7fe4cfd192e5afae9870516d2fb437112e0bdce51eb5ca6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SaveProp</name>
      <anchorfile>WsRequestType_8h.html</anchorfile>
      <anchor>ae10b07f2d0feb103db7fe4cfd192e5afa55e8e6e6e8e9bb0550934075ee2679cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CreateNode</name>
      <anchorfile>WsRequestType_8h.html</anchorfile>
      <anchor>ae10b07f2d0feb103db7fe4cfd192e5afac26e5e5d100fa1ff47abe6a00038c1fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DeleteNode</name>
      <anchorfile>WsRequestType_8h.html</anchorfile>
      <anchor>ae10b07f2d0feb103db7fe4cfd192e5afa0ec819fe1e5331a285201a065d1f54df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>RenameNode</name>
      <anchorfile>WsRequestType_8h.html</anchorfile>
      <anchor>ae10b07f2d0feb103db7fe4cfd192e5afa789c36d1722fa35fa48dfe62ccd62b79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>Type</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a8930f5674a8509c86600ed9ca54347c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>Uid</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a6b3ac60003ddbc738816e271d52a12c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>Ip</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a0baea78bfd6fd3093103f62ea5dbc17f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>Pass</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a7d6bd089dd52b717c430f8dbc7c5f9c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>Name</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a20464a96ef8f80579ced0313a554dd0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>Surname</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a2a4d0ead112436210f7f4c6d1442481f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>Email</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a5255a13d2cc2b611128c141c7e0d047b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>ExclNames</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a6c7d9fb0eb379ac0e7ba33b1bbadef74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>ExclExt</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a6a7d250be13f7c64cad0ff7db0b3530b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>Path</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a10a822957a8ee52c26d357308a08d8ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>Section</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>acb204751e1a0b287efdc289b443760f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>Property</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a1e917138cd1abb3602387fef6e358b40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>NewPath</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a48390b677eb6de8e6bf8de049e61ea04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>Success</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a5deafe05b289714ecd75a98844196aac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>Failure</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a0cdea02a49390c7967404daf0716f750</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>Terms</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a0511633c97bd79c4f9f8fa7840202e90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>Body</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a2667f456e4f646bdd52f8b8ef5bacce1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>Size</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a40dd96206debae4205c85371caf42967</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>ModifyDate</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>ab22966b83b567e4d05b6304082db30a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>Key</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>afe032d68e9fb2b0771e1af2ad35437f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>Value</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a4ed7e6971871084424b93bc1eea297f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>NodeType</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a05a49fd15a931c22fecfff34bf161561</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsCrashLogger.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Logger/</path>
    <filename>WsCrashLogger_8cpp</filename>
    <includes id="WsCrashLogger_8h" name="WsCrashLogger.h" local="yes" imported="no">WsCrashLogger.h</includes>
    <includes id="WsGlobalConfig_8h" name="WsGlobalConfig.h" local="no" imported="no">Include/WsGlobalConfig.h</includes>
  </compound>
  <compound kind="file">
    <name>WsCrashLogger.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Logger/</path>
    <filename>WsCrashLogger_8h</filename>
    <class kind="class">WsCrashLogger</class>
  </compound>
  <compound kind="file">
    <name>WsLogger.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Logger/</path>
    <filename>WsLogger_8cpp</filename>
    <includes id="WsLogger_8h" name="WsLogger.h" local="yes" imported="no">WsLogger.h</includes>
  </compound>
  <compound kind="file">
    <name>WsLogger.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Logger/</path>
    <filename>WsLogger_8h</filename>
    <includes id="WsLogWriter_8h" name="WsLogWriter.h" local="yes" imported="no">WsLogWriter.h</includes>
    <class kind="class">WsLogger</class>
    <member kind="define">
      <type>#define</type>
      <name>LOG</name>
      <anchorfile>WsLogger_8h.html</anchorfile>
      <anchor>a159ca84d25a5487d8e81e4438725df19</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG</name>
      <anchorfile>WsLogger_8h.html</anchorfile>
      <anchor>ad72dbcf6d0153db1b8d8a58001feed83</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INFO</name>
      <anchorfile>WsLogger_8h.html</anchorfile>
      <anchor>ae1103fea1e1b3c41ca3322d5389f7162</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WARN</name>
      <anchorfile>WsLogger_8h.html</anchorfile>
      <anchor>a271d8f7f52be750e5c744a394ec71344</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ERROR</name>
      <anchorfile>WsLogger_8h.html</anchorfile>
      <anchor>a8fe83ac76edc595f6b98cd4a4127aed5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsLogWriter.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Logger/</path>
    <filename>WsLogWriter_8cpp</filename>
    <includes id="WsLogWriter_8h" name="WsLogWriter.h" local="yes" imported="no">WsLogWriter.h</includes>
    <includes id="WsGlobalConfig_8h" name="WsGlobalConfig.h" local="no" imported="no">Include/WsGlobalConfig.h</includes>
    <includes id="WsGlobalProperties_8h" name="WsGlobalProperties.h" local="no" imported="no">ConfigManager/WsGlobalProperties.h</includes>
  </compound>
  <compound kind="file">
    <name>WsLogWriter.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Logger/</path>
    <filename>WsLogWriter_8h</filename>
    <class kind="class">WsLogWriter</class>
  </compound>
  <compound kind="file">
    <name>WsApplication.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Main/</path>
    <filename>WsApplication_8cpp</filename>
    <includes id="WsApplication_8h" name="WsApplication.h" local="yes" imported="no">WsApplication.h</includes>
    <includes id="WsFunctionnalities_8h" name="WsFunctionnalities.h" local="yes" imported="no">Main/WsFunctionnalities.h</includes>
    <includes id="WsTemplate_8h" name="WsTemplate.h" local="yes" imported="no">Main/WsTemplate.h</includes>
    <includes id="WsTopBanner_8h" name="WsTopBanner.h" local="yes" imported="no">Main/WsTopBanner.h</includes>
    <includes id="WsBottomBanner_8h" name="WsBottomBanner.h" local="yes" imported="no">Main/WsBottomBanner.h</includes>
    <includes id="WsLayoutProperties_8h" name="WsLayoutProperties.h" local="no" imported="no">ConfigManager/WsLayoutProperties.h</includes>
  </compound>
  <compound kind="file">
    <name>WsApplication.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Main/</path>
    <filename>WsApplication_8h</filename>
    <includes id="WsUser_8h" name="WsUser.h" local="no" imported="no">User/WsUser.h</includes>
    <includes id="WsModulesLoader_8h" name="WsModulesLoader.h" local="yes" imported="no">Main/WsModulesLoader.h</includes>
    <includes id="WsContentButtonsBar_8h" name="WsContentButtonsBar.h" local="yes" imported="no">Main/WsContentButtonsBar.h</includes>
    <includes id="WsContent_8h" name="WsContent.h" local="yes" imported="no">Main/WsContent.h</includes>
    <includes id="WsGlobalConfig_8h" name="WsGlobalConfig.h" local="no" imported="no">Include/WsGlobalConfig.h</includes>
    <class kind="class">WsApplication</class>
    <member kind="define">
      <type>#define</type>
      <name>WsApp</name>
      <anchorfile>WsApplication_8h.html</anchorfile>
      <anchor>ad2a285d381c009fd90cfcba1a7b816cd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsBottomBanner.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Main/</path>
    <filename>WsBottomBanner_8cpp</filename>
    <includes id="WsApplication_8h" name="WsApplication.h" local="yes" imported="no">WsApplication.h</includes>
    <includes id="WsBottomBanner_8h" name="WsBottomBanner.h" local="yes" imported="no">WsBottomBanner.h</includes>
  </compound>
  <compound kind="file">
    <name>WsBottomBanner.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Main/</path>
    <filename>WsBottomBanner_8h</filename>
    <includes id="WsLayoutProperties_8h" name="WsLayoutProperties.h" local="no" imported="no">ConfigManager/WsLayoutProperties.h</includes>
    <class kind="class">WsBottomBanner</class>
  </compound>
  <compound kind="file">
    <name>WsContent.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Main/</path>
    <filename>WsContent_8cpp</filename>
    <includes id="WsUser_8h" name="WsUser.h" local="no" imported="no">User/WsUser.h</includes>
    <includes id="WsFileResource_8h" name="WsFileResource.h" local="yes" imported="no">WsFileResource.h</includes>
    <includes id="WsApplication_8h" name="WsApplication.h" local="yes" imported="no">WsApplication.h</includes>
    <includes id="WsContent_8h" name="WsContent.h" local="yes" imported="no">WsContent.h</includes>
    <includes id="WsSearchView_8h" name="WsSearchView.h" local="yes" imported="no">WsSearchView.h</includes>
    <includes id="WsTemplate_8h" name="WsTemplate.h" local="yes" imported="no">WsTemplate.h</includes>
    <includes id="WsFormConfig_8h" name="WsFormConfig.h" local="yes" imported="no">WsFormConfig.h</includes>
  </compound>
  <compound kind="file">
    <name>WsContent.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Main/</path>
    <filename>WsContent_8h</filename>
    <includes id="WsSiteMapView_8h" name="WsSiteMapView.h" local="yes" imported="no">WsSiteMapView.h</includes>
    <includes id="WsLayoutProperties_8h" name="WsLayoutProperties.h" local="no" imported="no">ConfigManager/WsLayoutProperties.h</includes>
    <class kind="class">WsContent</class>
    <member kind="define">
      <type>#define</type>
      <name>WS_CONTENT_H__</name>
      <anchorfile>WsContent_8h.html</anchorfile>
      <anchor>a404963e557b25dd0e9418aac59f0861c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_WsContent_H_</name>
      <anchorfile>WsContent_8h.html</anchorfile>
      <anchor>ac72dd3caa3e98d900f38fba1dd739f34</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsContentButtonsBar.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Main/</path>
    <filename>WsContentButtonsBar_8cpp</filename>
    <includes id="WsApplication_8h" name="WsApplication.h" local="yes" imported="no">WsApplication.h</includes>
    <includes id="WsContentButtonsBar_8h" name="WsContentButtonsBar.h" local="yes" imported="no">WsContentButtonsBar.h</includes>
    <includes id="WsLayoutProperties_8h" name="WsLayoutProperties.h" local="no" imported="no">ConfigManager/WsLayoutProperties.h</includes>
  </compound>
  <compound kind="file">
    <name>WsContentButtonsBar.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Main/</path>
    <filename>WsContentButtonsBar_8h</filename>
    <class kind="class">WsContentButtonsBar</class>
  </compound>
  <compound kind="file">
    <name>WsFileResource.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Main/</path>
    <filename>WsFileResource_8cpp</filename>
    <includes id="WsFileResource_8h" name="WsFileResource.h" local="yes" imported="no">WsFileResource.h</includes>
  </compound>
  <compound kind="file">
    <name>WsFileResource.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Main/</path>
    <filename>WsFileResource_8h</filename>
    <class kind="class">WsFileResource</class>
  </compound>
  <compound kind="file">
    <name>WsFormConfig.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Main/</path>
    <filename>WsFormConfig_8cpp</filename>
    <includes id="WsApplication_8h" name="WsApplication.h" local="yes" imported="no">WsApplication.h</includes>
    <includes id="WsFormConfig_8h" name="WsFormConfig.h" local="yes" imported="no">WsFormConfig.h</includes>
  </compound>
  <compound kind="file">
    <name>WsFormConfig.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Main/</path>
    <filename>WsFormConfig_8h</filename>
    <includes id="WsUser_8h" name="WsUser.h" local="no" imported="no">User/WsUser.h</includes>
    <includes id="WsLayoutProperties_8h" name="WsLayoutProperties.h" local="no" imported="no">ConfigManager/WsLayoutProperties.h</includes>
    <includes id="WsModulesLoader_8h" name="WsModulesLoader.h" local="yes" imported="no">WsModulesLoader.h</includes>
    <class kind="class">WsFormConfig</class>
  </compound>
  <compound kind="file">
    <name>WsFunctionnalities.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Main/</path>
    <filename>WsFunctionnalities_8cpp</filename>
    <includes id="WsApplication_8h" name="WsApplication.h" local="no" imported="no">Main/WsApplication.h</includes>
    <includes id="WsContentButtonsBar_8h" name="WsContentButtonsBar.h" local="yes" imported="no">Main/WsContentButtonsBar.h</includes>
    <includes id="WsFunctionnalities_8h" name="WsFunctionnalities.h" local="yes" imported="no">Main/WsFunctionnalities.h</includes>
  </compound>
  <compound kind="file">
    <name>WsFunctionnalities.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Main/</path>
    <filename>WsFunctionnalities_8h</filename>
    <class kind="class">WsFunctionnalities</class>
  </compound>
  <compound kind="file">
    <name>WsLogo.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Main/</path>
    <filename>WsLogo_8cpp</filename>
    <includes id="WsLayoutProperties_8h" name="WsLayoutProperties.h" local="no" imported="no">ConfigManager/WsLayoutProperties.h</includes>
    <includes id="WsLogo_8h" name="WsLogo.h" local="yes" imported="no">WsLogo.h</includes>
  </compound>
  <compound kind="file">
    <name>WsLogo.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Main/</path>
    <filename>WsLogo_8h</filename>
    <class kind="class">WsLogo</class>
  </compound>
  <compound kind="file">
    <name>WsModulesLoader.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Main/</path>
    <filename>WsModulesLoader_8cpp</filename>
    <includes id="WsGlobalConfig_8h" name="WsGlobalConfig.h" local="no" imported="no">Include/WsGlobalConfig.h</includes>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
    <includes id="WsLayoutProperties_8h" name="WsLayoutProperties.h" local="no" imported="no">ConfigManager/WsLayoutProperties.h</includes>
    <includes id="WsModulesLoader_8h" name="WsModulesLoader.h" local="yes" imported="no">WsModulesLoader.h</includes>
  </compound>
  <compound kind="file">
    <name>WsModulesLoader.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Main/</path>
    <filename>WsModulesLoader_8h</filename>
    <includes id="WsModule_8h" name="WsModule.h" local="yes" imported="no">../WsModule/src/WsModule.h</includes>
    <class kind="class">WsModuleLoader</class>
    <class kind="class">WsModulesLoader</class>
  </compound>
  <compound kind="file">
    <name>WsSearchObject.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Main/</path>
    <filename>WsSearchObject_8cpp</filename>
    <includes id="WsLogo_8h" name="WsLogo.h" local="yes" imported="no">WsLogo.h</includes>
    <includes id="WsSiteMap_8h" name="WsSiteMap.h" local="yes" imported="no">WsSiteMap.h</includes>
    <includes id="WsSearchObject_8h" name="WsSearchObject.h" local="yes" imported="no">WsSearchObject.h</includes>
    <includes id="WsLayoutProperties_8h" name="WsLayoutProperties.h" local="no" imported="no">ConfigManager/WsLayoutProperties.h</includes>
    <includes id="WsGlobalConfig_8h" name="WsGlobalConfig.h" local="no" imported="no">Include/WsGlobalConfig.h</includes>
  </compound>
  <compound kind="file">
    <name>WsSearchObject.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Main/</path>
    <filename>WsSearchObject_8h</filename>
    <class kind="class">WsSearchObject</class>
  </compound>
  <compound kind="file">
    <name>WsSearchView.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Main/</path>
    <filename>WsSearchView_8cpp</filename>
    <includes id="WsSearch_8h" name="WsSearch.h" local="no" imported="no">Search/WsSearch.h</includes>
    <includes id="WsSearchView_8h" name="WsSearchView.h" local="yes" imported="no">WsSearchView.h</includes>
    <includes id="WsApplication_8h" name="WsApplication.h" local="yes" imported="no">WsApplication.h</includes>
  </compound>
  <compound kind="file">
    <name>WsSearchView.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Main/</path>
    <filename>WsSearchView_8h</filename>
    <includes id="WsUser_8h" name="WsUser.h" local="no" imported="no">User/WsUser.h</includes>
    <class kind="class">WsSearchItem</class>
    <class kind="class">WsSearchView</class>
  </compound>
  <compound kind="file">
    <name>WsSiteMap.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Main/</path>
    <filename>WsSiteMap_8cpp</filename>
    <includes id="WsSiteMap_8h" name="WsSiteMap.h" local="yes" imported="no">WsSiteMap.h</includes>
    <includes id="WsLayoutProperties_8h" name="WsLayoutProperties.h" local="no" imported="no">ConfigManager/WsLayoutProperties.h</includes>
    <includes id="WsGlobalConfig_8h" name="WsGlobalConfig.h" local="no" imported="no">Include/WsGlobalConfig.h</includes>
  </compound>
  <compound kind="file">
    <name>WsSiteMap.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Main/</path>
    <filename>WsSiteMap_8h</filename>
    <class kind="class">WsSiteMap</class>
  </compound>
  <compound kind="file">
    <name>WsSiteMapView.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Main/</path>
    <filename>WsSiteMapView_8cpp</filename>
    <includes id="WsSiteMapView_8h" name="WsSiteMapView.h" local="yes" imported="no">WsSiteMapView.h</includes>
    <includes id="WsApplication_8h" name="WsApplication.h" local="yes" imported="no">WsApplication.h</includes>
  </compound>
  <compound kind="file">
    <name>WsSiteMapView.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Main/</path>
    <filename>WsSiteMapView_8h</filename>
    <includes id="WsUser_8h" name="WsUser.h" local="no" imported="no">User/WsUser.h</includes>
    <class kind="class">WsSiteMapItem</class>
    <class kind="class">WsTreeView</class>
    <class kind="class">WsSiteMapView</class>
  </compound>
  <compound kind="file">
    <name>WsTemplate.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Main/</path>
    <filename>WsTemplate_8cpp</filename>
    <includes id="WsLayoutProperties_8h" name="WsLayoutProperties.h" local="no" imported="no">ConfigManager/WsLayoutProperties.h</includes>
    <includes id="WsUser_8h" name="WsUser.h" local="no" imported="no">User/WsUser.h</includes>
    <includes id="WsLogo_8h" name="WsLogo.h" local="yes" imported="no">Main/WsLogo.h</includes>
    <includes id="WsSiteMap_8h" name="WsSiteMap.h" local="yes" imported="no">Main/WsSiteMap.h</includes>
    <includes id="WsSearchObject_8h" name="WsSearchObject.h" local="yes" imported="no">Main/WsSearchObject.h</includes>
    <includes id="WsTopBanner_8h" name="WsTopBanner.h" local="yes" imported="no">Main/WsTopBanner.h</includes>
    <includes id="WsBottomBanner_8h" name="WsBottomBanner.h" local="yes" imported="no">Main/WsBottomBanner.h</includes>
    <includes id="WsContentButtonsBar_8h" name="WsContentButtonsBar.h" local="yes" imported="no">Main/WsContentButtonsBar.h</includes>
    <includes id="WsFunctionnalities_8h" name="WsFunctionnalities.h" local="yes" imported="no">Main/WsFunctionnalities.h</includes>
    <includes id="WsContent_8h" name="WsContent.h" local="yes" imported="no">Main/WsContent.h</includes>
    <includes id="WsTemplate_8h" name="WsTemplate.h" local="yes" imported="no">WsTemplate.h</includes>
  </compound>
  <compound kind="file">
    <name>WsTemplate.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Main/</path>
    <filename>WsTemplate_8h</filename>
    <includes id="WsUser_8h" name="WsUser.h" local="no" imported="no">User/WsUser.h</includes>
    <includes id="WsApplication_8h" name="WsApplication.h" local="yes" imported="no">Main/WsApplication.h</includes>
    <class kind="class">WsTemplate</class>
  </compound>
  <compound kind="file">
    <name>WsTopBanner.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Main/</path>
    <filename>WsTopBanner_8cpp</filename>
    <includes id="WsLogo_8h" name="WsLogo.h" local="yes" imported="no">WsLogo.h</includes>
    <includes id="WsSiteMap_8h" name="WsSiteMap.h" local="yes" imported="no">WsSiteMap.h</includes>
    <includes id="WsSearchObject_8h" name="WsSearchObject.h" local="yes" imported="no">WsSearchObject.h</includes>
    <includes id="WsTopBanner_8h" name="WsTopBanner.h" local="yes" imported="no">WsTopBanner.h</includes>
    <includes id="WsLayoutProperties_8h" name="WsLayoutProperties.h" local="no" imported="no">ConfigManager/WsLayoutProperties.h</includes>
    <includes id="WsGlobalConfig_8h" name="WsGlobalConfig.h" local="no" imported="no">Include/WsGlobalConfig.h</includes>
  </compound>
  <compound kind="file">
    <name>WsTopBanner.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Main/</path>
    <filename>WsTopBanner_8h</filename>
    <class kind="class">WsTopBanner</class>
  </compound>
  <compound kind="file">
    <name>WsAbstractSearch.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Search/</path>
    <filename>WsAbstractSearch_8cpp</filename>
    <includes id="WsAbstractSearch_8h" name="WsAbstractSearch.h" local="yes" imported="no">WsAbstractSearch.h</includes>
  </compound>
  <compound kind="file">
    <name>WsAbstractSearch.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Search/</path>
    <filename>WsAbstractSearch_8h</filename>
    <includes id="WsResultItem_8h" name="WsResultItem.h" local="yes" imported="no">WsResultItem.h</includes>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
    <includes id="WsFileSystemTree_8h" name="WsFileSystemTree.h" local="no" imported="no">FileSystemTree/WsFileSystemTree.h</includes>
    <class kind="class">WsAbstractSearch</class>
  </compound>
  <compound kind="file">
    <name>WsResultItem.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Search/</path>
    <filename>WsResultItem_8cpp</filename>
    <includes id="WsResultItem_8h" name="WsResultItem.h" local="yes" imported="no">WsResultItem.h</includes>
  </compound>
  <compound kind="file">
    <name>WsResultItem.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Search/</path>
    <filename>WsResultItem_8h</filename>
    <includes id="WsFileNode_8h" name="WsFileNode.h" local="no" imported="no">FileSystemTree/WsFileNode.h</includes>
    <class kind="class">WsResultItem</class>
  </compound>
  <compound kind="file">
    <name>WsSearch.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Search/</path>
    <filename>WsSearch_8cpp</filename>
    <includes id="WsSearch_8h" name="WsSearch.h" local="yes" imported="no">WsSearch.h</includes>
  </compound>
  <compound kind="file">
    <name>WsSearch.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Search/</path>
    <filename>WsSearch_8h</filename>
    <includes id="WsResultItem_8h" name="WsResultItem.h" local="yes" imported="no">WsResultItem.h</includes>
    <includes id="WsAbstractSearch_8h" name="WsAbstractSearch.h" local="yes" imported="no">WsAbstractSearch.h</includes>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
    <includes id="WsFileSystemTree_8h" name="WsFileSystemTree.h" local="no" imported="no">FileSystemTree/WsFileSystemTree.h</includes>
    <class kind="class">WsSearch</class>
    <member kind="typedef">
      <type>WsAbstractSearch *(*</type>
      <name>pf_wsSearchMod</name>
      <anchorfile>WsSearch_8h.html</anchorfile>
      <anchor>adb6097f09738b475f46b9957f0960a1e</anchor>
      <arglist>)()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsArrayDeserializer.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Serializer/</path>
    <filename>WsArrayDeserializer_8cpp</filename>
    <includes id="WsArrayDeserializer_8h" name="WsArrayDeserializer.h" local="yes" imported="no">WsArrayDeserializer.h</includes>
  </compound>
  <compound kind="file">
    <name>WsArrayDeserializer.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Serializer/</path>
    <filename>WsArrayDeserializer_8h</filename>
    <includes id="WsDirNode_8h" name="WsDirNode.h" local="no" imported="no">FileSystemTree/WsDirNode.h</includes>
    <includes id="WsFileNode_8h" name="WsFileNode.h" local="no" imported="no">FileSystemTree/WsFileNode.h</includes>
    <class kind="class">WsArrayDeserializer</class>
  </compound>
  <compound kind="file">
    <name>WsArraySerializer.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Serializer/</path>
    <filename>WsArraySerializer_8cpp</filename>
    <includes id="WsArraySerializer_8h" name="WsArraySerializer.h" local="yes" imported="no">WsArraySerializer.h</includes>
  </compound>
  <compound kind="file">
    <name>WsArraySerializer.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Serializer/</path>
    <filename>WsArraySerializer_8h</filename>
    <includes id="WsFileSystemTree_8h" name="WsFileSystemTree.h" local="no" imported="no">FileSystemTree/WsFileSystemTree.h</includes>
    <class kind="class">WsArraySerializer</class>
  </compound>
  <compound kind="file">
    <name>WsTreeDeserializer.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Serializer/</path>
    <filename>WsTreeDeserializer_8cpp</filename>
    <includes id="WsTreeDeserializer_8h" name="WsTreeDeserializer.h" local="yes" imported="no">WsTreeDeserializer.h</includes>
  </compound>
  <compound kind="file">
    <name>WsTreeDeserializer.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Serializer/</path>
    <filename>WsTreeDeserializer_8h</filename>
    <includes id="WsMenuTree_8h" name="WsMenuTree.h" local="no" imported="no">Tree/WsMenuTree.h</includes>
    <class kind="class">WsTreeDeserializer</class>
  </compound>
  <compound kind="file">
    <name>WsTreeSerializer.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Serializer/</path>
    <filename>WsTreeSerializer_8cpp</filename>
    <includes id="WsTreeSerializer_8h" name="WsTreeSerializer.h" local="yes" imported="no">WsTreeSerializer.h</includes>
  </compound>
  <compound kind="file">
    <name>WsTreeSerializer.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Serializer/</path>
    <filename>WsTreeSerializer_8h</filename>
    <includes id="WsTreeTraversal_8h" name="WsTreeTraversal.h" local="no" imported="no">TreeTraversal/WsTreeTraversal.h</includes>
    <includes id="WsMenuTree_8h" name="WsMenuTree.h" local="no" imported="no">Tree/WsMenuTree.h</includes>
    <includes id="WsAccessTree_8h" name="WsAccessTree.h" local="no" imported="no">Tree/WsAccessTree.h</includes>
    <class kind="class">WsTreeSerializer</class>
  </compound>
  <compound kind="file">
    <name>WsAbstractTree.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Tree/</path>
    <filename>WsAbstractTree_8cpp</filename>
    <includes id="WsAbstractTree_8h" name="WsAbstractTree.h" local="yes" imported="no">WsAbstractTree.h</includes>
    <includes id="WsGlobalConfig_8h" name="WsGlobalConfig.h" local="no" imported="no">Include/WsGlobalConfig.h</includes>
  </compound>
  <compound kind="file">
    <name>WsAbstractTree.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Tree/</path>
    <filename>WsAbstractTree_8h</filename>
    <includes id="WsTreeTraversal_8h" name="WsTreeTraversal.h" local="no" imported="no">TreeTraversal/WsTreeTraversal.h</includes>
    <includes id="WsFileSystemTree_8h" name="WsFileSystemTree.h" local="no" imported="no">FileSystemTree/WsFileSystemTree.h</includes>
    <class kind="class">WsAbstractTree</class>
  </compound>
  <compound kind="file">
    <name>WsAccessTree.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Tree/</path>
    <filename>WsAccessTree_8cpp</filename>
    <includes id="WsAccessTree_8h" name="WsAccessTree.h" local="yes" imported="no">WsAccessTree.h</includes>
    <includes id="WsGlobalConfig_8h" name="WsGlobalConfig.h" local="no" imported="no">Include/WsGlobalConfig.h</includes>
  </compound>
  <compound kind="file">
    <name>WsAccessTree.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Tree/</path>
    <filename>WsAccessTree_8h</filename>
    <includes id="WsAbstractTree_8h" name="WsAbstractTree.h" local="yes" imported="no">WsAbstractTree.h</includes>
    <class kind="class">WsAccessTree</class>
  </compound>
  <compound kind="file">
    <name>WsMenuTree.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Tree/</path>
    <filename>WsMenuTree_8cpp</filename>
    <includes id="WsMenuTree_8h" name="WsMenuTree.h" local="yes" imported="no">WsMenuTree.h</includes>
  </compound>
  <compound kind="file">
    <name>WsMenuTree.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Tree/</path>
    <filename>WsMenuTree_8h</filename>
    <includes id="WsAbstractTree_8h" name="WsAbstractTree.h" local="yes" imported="no">WsAbstractTree.h</includes>
    <class kind="class">WsMenuTree</class>
  </compound>
  <compound kind="file">
    <name>WsTreeTraversal.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/TreeTraversal/</path>
    <filename>WsTreeTraversal_8cpp</filename>
    <includes id="WsTreeTraversal_8h" name="WsTreeTraversal.h" local="yes" imported="no">WsTreeTraversal.h</includes>
  </compound>
  <compound kind="file">
    <name>WsTreeTraversal.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/TreeTraversal/</path>
    <filename>WsTreeTraversal_8h</filename>
    <includes id="WsAbstractNode_8h" name="WsAbstractNode.h" local="no" imported="no">FileSystemTree/WsAbstractNode.h</includes>
    <includes id="WsNode_8h" name="WsNode.h" local="no" imported="no">FileSystemTree/WsNode.h</includes>
    <includes id="WsFileNode_8h" name="WsFileNode.h" local="no" imported="no">FileSystemTree/WsFileNode.h</includes>
    <includes id="WsDirNode_8h" name="WsDirNode.h" local="no" imported="no">FileSystemTree/WsDirNode.h</includes>
    <class kind="class">WsTreeTraversal</class>
  </compound>
  <compound kind="file">
    <name>WsAbstractMonitor.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Updater/</path>
    <filename>WsAbstractMonitor_8cpp</filename>
    <includes id="WsAbstractMonitor_8h" name="WsAbstractMonitor.h" local="yes" imported="no">WsAbstractMonitor.h</includes>
  </compound>
  <compound kind="file">
    <name>WsAbstractMonitor.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Updater/</path>
    <filename>WsAbstractMonitor_8h</filename>
    <class kind="class">WsAbstractMonitor</class>
  </compound>
  <compound kind="file">
    <name>WsFsTreeUpdater.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Updater/</path>
    <filename>WsFsTreeUpdater_8cpp</filename>
    <includes id="WsFsTreeUpdater_8h" name="WsFsTreeUpdater.h" local="yes" imported="no">WsFsTreeUpdater.h</includes>
    <includes id="WsMonitor_8h" name="WsMonitor.h" local="yes" imported="no">WsMonitor.h</includes>
    <includes id="WsGlobalConfig_8h" name="WsGlobalConfig.h" local="no" imported="no">Include/WsGlobalConfig.h</includes>
  </compound>
  <compound kind="file">
    <name>WsFsTreeUpdater.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Updater/</path>
    <filename>WsFsTreeUpdater_8h</filename>
    <includes id="WsFileSystemTree_8h" name="WsFileSystemTree.h" local="no" imported="no">FileSystemTree/WsFileSystemTree.h</includes>
    <includes id="WsAbstractMonitor_8h" name="WsAbstractMonitor.h" local="yes" imported="no">WsAbstractMonitor.h</includes>
    <class kind="class">WsFsTreeUpdater</class>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_NO_DEPRECATED</name>
      <anchorfile>WsFsTreeUpdater_8h.html</anchorfile>
      <anchor>ac59a248298a1145d25a51a465c446f11</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsMonitor.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Updater/</path>
    <filename>WsMonitor_8cpp</filename>
    <includes id="WsFsTreeUpdater_8h" name="WsFsTreeUpdater.h" local="yes" imported="no">WsFsTreeUpdater.h</includes>
    <includes id="WsMonitor_8h" name="WsMonitor.h" local="yes" imported="no">WsMonitor.h</includes>
    <includes id="WsGlobalConfig_8h" name="WsGlobalConfig.h" local="no" imported="no">Include/WsGlobalConfig.h</includes>
  </compound>
  <compound kind="file">
    <name>WsMonitor.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Updater/</path>
    <filename>WsMonitor_8h</filename>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
    <includes id="WsAbstractMonitor_8h" name="WsAbstractMonitor.h" local="yes" imported="no">WsAbstractMonitor.h</includes>
    <class kind="class">WsMonitor</class>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_NO_DEPRECATED</name>
      <anchorfile>WsMonitor_8h.html</anchorfile>
      <anchor>ac59a248298a1145d25a51a465c446f11</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsUser.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/User/</path>
    <filename>WsUser_8cpp</filename>
    <includes id="WsUser_8h" name="WsUser.h" local="yes" imported="no">WsUser.h</includes>
    <includes id="WsGlobalConfig_8h" name="WsGlobalConfig.h" local="no" imported="no">Include/WsGlobalConfig.h</includes>
  </compound>
  <compound kind="file">
    <name>WsUser.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/User/</path>
    <filename>WsUser_8h</filename>
    <includes id="WsAbstractFsClient_8h" name="WsAbstractFsClient.h" local="no" imported="no">FsClient/WsAbstractFsClient.h</includes>
    <includes id="WsFsTreeClient_8h" name="WsFsTreeClient.h" local="no" imported="no">FsClient/WsFsTreeClient.h</includes>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
    <class kind="class">WsUser</class>
  </compound>
  <compound kind="file">
    <name>WsBasicAuth.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsAuthModules/BasicAuth/src/</path>
    <filename>WsBasicAuth_8cpp</filename>
    <includes id="WsBasicAuth_8h" name="WsBasicAuth.h" local="yes" imported="no">WsBasicAuth.h</includes>
    <includes id="WsGlobalConfig_8h" name="WsGlobalConfig.h" local="no" imported="no">Include/WsGlobalConfig.h</includes>
    <member kind="function">
      <type>void</type>
      <name>WsBasicAuthInit</name>
      <anchorfile>WsBasicAuth_8cpp.html</anchorfile>
      <anchor>a0f69bddfc65ed8733c8306cf78d7fc71</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsBasicAuth.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsAuthModules/BasicAuth/src/</path>
    <filename>WsBasicAuth_8h</filename>
    <includes id="WsGlobalProperties_8h" name="WsGlobalProperties.h" local="no" imported="no">ConfigManager/WsGlobalProperties.h</includes>
    <includes id="WsAbstractAuth_8h" name="WsAbstractAuth.h" local="no" imported="no">Auth/WsAbstractAuth.h</includes>
    <class kind="class">WsBasicAuth</class>
    <member kind="function">
      <type>void</type>
      <name>WsBasicAuthInit</name>
      <anchorfile>WsBasicAuth_8h.html</anchorfile>
      <anchor>a1997e6da0cd26efa665e705d717d094f</anchor>
      <arglist>(void) __attribute__((constructor))</arglist>
    </member>
    <member kind="function">
      <type>WsBasicAuth *</type>
      <name>buildModule</name>
      <anchorfile>WsBasicAuth_8h.html</anchorfile>
      <anchor>a09932dd1be11342a4fdf7efe214c8472</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsLdapAuth.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsAuthModules/Ldap/src/</path>
    <filename>WsLdapAuth_8cpp</filename>
    <includes id="WsLdapAuth_8h" name="WsLdapAuth.h" local="yes" imported="no">WsLdapAuth.h</includes>
    <includes id="WsGlobalConfig_8h" name="WsGlobalConfig.h" local="no" imported="no">Include/WsGlobalConfig.h</includes>
    <member kind="function">
      <type>void</type>
      <name>WsLdapAuthInit</name>
      <anchorfile>WsLdapAuth_8cpp.html</anchorfile>
      <anchor>a3406c62344289a82836fd770a0c4f186</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsLdapAuth.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsAuthModules/Ldap/src/</path>
    <filename>WsLdapAuth_8h</filename>
    <includes id="WsGlobalProperties_8h" name="WsGlobalProperties.h" local="no" imported="no">ConfigManager/WsGlobalProperties.h</includes>
    <includes id="WsAbstractAuth_8h" name="WsAbstractAuth.h" local="no" imported="no">Auth/WsAbstractAuth.h</includes>
    <class kind="class">WsLdapAuth</class>
    <member kind="function">
      <type>void</type>
      <name>WsLdapAuthInit</name>
      <anchorfile>WsLdapAuth_8h.html</anchorfile>
      <anchor>a62be5ad1ed56f7a94f6f8c55d24ea63c</anchor>
      <arglist>(void) __attribute__((constructor))</arglist>
    </member>
    <member kind="function">
      <type>WsLdapAuth *</type>
      <name>buildModule</name>
      <anchorfile>WsLdapAuth_8h.html</anchorfile>
      <anchor>abbaa997cd219d8eeba5232dbf4e7e610</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsModule.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModule/src/</path>
    <filename>WsModule_8cpp</filename>
    <includes id="WsApplication_8h" name="WsApplication.h" local="no" imported="no">Main/WsApplication.h</includes>
    <includes id="WsModule_8h" name="WsModule.h" local="yes" imported="no">WsModule.h</includes>
  </compound>
  <compound kind="file">
    <name>WsModule.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModule/src/</path>
    <filename>WsModule_8h</filename>
    <class kind="class">WsOption</class>
    <class kind="class">WsEditorWidget</class>
    <class kind="class">WsOptions</class>
    <class kind="class">WsModule</class>
    <member kind="typedef">
      <type>WsModule *(*</type>
      <name>pf_wsModule</name>
      <anchorfile>WsModule_8h.html</anchorfile>
      <anchor>a052e7aa863b92189f4a7956e8935a28e</anchor>
      <arglist>)()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsAnchor.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModAnchor/src/</path>
    <filename>WsAnchor_8cpp</filename>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
    <includes id="WsApplication_8h" name="WsApplication.h" local="no" imported="no">Main/WsApplication.h</includes>
    <includes id="WsAnchor_8h" name="WsAnchor.h" local="yes" imported="no">WsAnchor.h</includes>
  </compound>
  <compound kind="file">
    <name>WsAnchor.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModAnchor/src/</path>
    <filename>WsAnchor_8h</filename>
    <class kind="class">WsAnchor</class>
  </compound>
  <compound kind="file">
    <name>WsModAnchor.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModAnchor/src/</path>
    <filename>WsModAnchor_8cpp</filename>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
    <includes id="WsApplication_8h" name="WsApplication.h" local="no" imported="no">Main/WsApplication.h</includes>
    <includes id="WsModAnchor_8h" name="WsModAnchor.h" local="yes" imported="no">WsModAnchor.h</includes>
    <includes id="WsAnchor_8h" name="WsAnchor.h" local="yes" imported="no">WsAnchor.h</includes>
    <member kind="function">
      <type>void</type>
      <name>WsModAnchorInit</name>
      <anchorfile>WsModAnchor_8cpp.html</anchorfile>
      <anchor>a55cd520948a1ececc5dc84efdcfc3eda</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsModAnchor.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModAnchor/src/</path>
    <filename>WsModAnchor_8h</filename>
    <class kind="class">WsModAnchor</class>
    <member kind="function">
      <type>void</type>
      <name>WsModAnchorInit</name>
      <anchorfile>WsModAnchor_8h.html</anchorfile>
      <anchor>a66bb8d63f9057788ab2e9decf425776e</anchor>
      <arglist>(void) __attribute__((constructor))</arglist>
    </member>
    <member kind="function">
      <type>WsModAnchor *</type>
      <name>buildModule</name>
      <anchorfile>WsModAnchor_8h.html</anchorfile>
      <anchor>a37a1b65ca7fb5a01ce22fbe39d5e3067</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsBanners.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModBanners/src/</path>
    <filename>WsBanners_8cpp</filename>
    <includes id="WsGlobalConfig_8h" name="WsGlobalConfig.h" local="no" imported="no">Include/WsGlobalConfig.h</includes>
    <includes id="WsApplication_8h" name="WsApplication.h" local="no" imported="no">Main/WsApplication.h</includes>
    <includes id="WsImages2_8h" name="WsImages2.h" local="yes" imported="no">WsModules/WsModImages2/src/WsImages2.h</includes>
    <includes id="WsBanners_8h" name="WsBanners.h" local="yes" imported="no">WsBanners.h</includes>
  </compound>
  <compound kind="file">
    <name>WsBanners.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModBanners/src/</path>
    <filename>WsBanners_8h</filename>
    <class kind="class">WsBanners</class>
  </compound>
  <compound kind="file">
    <name>WsModBanners.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModBanners/src/</path>
    <filename>WsModBanners_8cpp</filename>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
    <includes id="WsApplication_8h" name="WsApplication.h" local="no" imported="no">Main/WsApplication.h</includes>
    <includes id="WsModBanners_8h" name="WsModBanners.h" local="yes" imported="no">WsModBanners.h</includes>
    <includes id="WsBanners_8h" name="WsBanners.h" local="yes" imported="no">WsBanners.h</includes>
    <member kind="function">
      <type>void</type>
      <name>WsModBannersInit</name>
      <anchorfile>WsModBanners_8cpp.html</anchorfile>
      <anchor>aa642fa22bb70c0c73f9ecad41fdbd7fe</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsModBanners.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModBanners/src/</path>
    <filename>WsModBanners_8h</filename>
    <class kind="class">WsModBanners</class>
    <member kind="function">
      <type>void</type>
      <name>WsModBannersInit</name>
      <anchorfile>WsModBanners_8h.html</anchorfile>
      <anchor>a62e0da49b6e98b133afd319733f5a346</anchor>
      <arglist>(void) __attribute__((constructor))</arglist>
    </member>
    <member kind="function">
      <type>WsModBanners *</type>
      <name>buildModule</name>
      <anchorfile>WsModBanners_8h.html</anchorfile>
      <anchor>a2d9ac1f40be6892fe00b9c6b8a25467a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsBreadCrumb.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModBreadCrumb/src/</path>
    <filename>WsBreadCrumb_8cpp</filename>
    <includes id="WsApplication_8h" name="WsApplication.h" local="no" imported="no">Main/WsApplication.h</includes>
    <includes id="WsBreadCrumb_8h" name="WsBreadCrumb.h" local="yes" imported="no">WsBreadCrumb.h</includes>
  </compound>
  <compound kind="file">
    <name>WsBreadCrumb.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModBreadCrumb/src/</path>
    <filename>WsBreadCrumb_8h</filename>
    <class kind="class">WsBreadCrumb</class>
    <class kind="class">WsBreadCrumb::breadCrump</class>
  </compound>
  <compound kind="file">
    <name>WsModBreadCrumb.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModBreadCrumb/src/</path>
    <filename>WsModBreadCrumb_8cpp</filename>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
    <includes id="WsApplication_8h" name="WsApplication.h" local="no" imported="no">Main/WsApplication.h</includes>
    <includes id="WsModBreadCrumb_8h" name="WsModBreadCrumb.h" local="yes" imported="no">WsModBreadCrumb.h</includes>
    <includes id="WsBreadCrumb_8h" name="WsBreadCrumb.h" local="yes" imported="no">WsBreadCrumb.h</includes>
    <member kind="function">
      <type>void</type>
      <name>WsModBreadCrumbInit</name>
      <anchorfile>WsModBreadCrumb_8cpp.html</anchorfile>
      <anchor>ae0dafca6f1d12667f937c534fd5b2d37</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsModBreadCrumb.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModBreadCrumb/src/</path>
    <filename>WsModBreadCrumb_8h</filename>
    <class kind="class">WsModBreadCrumb</class>
    <member kind="function">
      <type>void</type>
      <name>WsModBreadCrumbInit</name>
      <anchorfile>WsModBreadCrumb_8h.html</anchorfile>
      <anchor>a034dad2f0c999865f3630e85fbff09f3</anchor>
      <arglist>(void) __attribute__((constructor))</arglist>
    </member>
    <member kind="function">
      <type>WsModBreadCrumb *</type>
      <name>buildModule</name>
      <anchorfile>WsModBreadCrumb_8h.html</anchorfile>
      <anchor>ac975626a10f44b81d4d2a6ce58e6bd73</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsModDirectoryView2.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModDirectoryView2/src/</path>
    <filename>WsModDirectoryView2_8cpp</filename>
    <includes id="WsAbstractNode_8h" name="WsAbstractNode.h" local="no" imported="no">FileSystemTree/WsAbstractNode.h</includes>
    <includes id="WsUser_8h" name="WsUser.h" local="no" imported="no">User/WsUser.h</includes>
    <includes id="WsGlobalProperties_8h" name="WsGlobalProperties.h" local="no" imported="no">ConfigManager/WsGlobalProperties.h</includes>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
    <includes id="WsModDirectoryView2_8h" name="WsModDirectoryView2.h" local="yes" imported="no">WsModDirectoryView2.h</includes>
    <member kind="function">
      <type>void</type>
      <name>WsModDirectoryView2Init</name>
      <anchorfile>WsModDirectoryView2_8cpp.html</anchorfile>
      <anchor>ae6dd45fee9517481850d30329a9eb981</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsModDirectoryView2.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModDirectoryView2/src/</path>
    <filename>WsModDirectoryView2_8h</filename>
    <includes id="WsApplication_8h" name="WsApplication.h" local="no" imported="no">Main/WsApplication.h</includes>
    <class kind="class">WsDirectoryItem</class>
    <class kind="class">WsDirectoryView2</class>
    <class kind="class">WsModDirectoryView2</class>
    <member kind="function">
      <type>void</type>
      <name>WsModDirectoryView2Init</name>
      <anchorfile>WsModDirectoryView2_8h.html</anchorfile>
      <anchor>aad9ed1b396da87642ba907bb47c6c7d9</anchor>
      <arglist>(void) __attribute__((constructor))</arglist>
    </member>
    <member kind="function">
      <type>WsModDirectoryView2 *</type>
      <name>buildModule</name>
      <anchorfile>WsModDirectoryView2_8h.html</anchorfile>
      <anchor>a9108934cf83c77b0a4149fc1645ff5e4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsModEditor.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModEditor/src/</path>
    <filename>WsModEditor_8cpp</filename>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
    <includes id="WsModEditor_8h" name="WsModEditor.h" local="yes" imported="no">WsModEditor.h</includes>
    <member kind="function">
      <type>void</type>
      <name>WsModEditorInit</name>
      <anchorfile>WsModEditor_8cpp.html</anchorfile>
      <anchor>a7e2ac4418584558b10c6d4f819e309cf</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsModEditor.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModEditor/src/</path>
    <filename>WsModEditor_8h</filename>
    <class kind="class">WsModEditor</class>
    <member kind="function">
      <type>void</type>
      <name>WsModEditorInit</name>
      <anchorfile>WsModEditor_8h.html</anchorfile>
      <anchor>ae68b1cd597484a55dadad180f7304bfd</anchor>
      <arglist>(void) __attribute__((constructor))</arglist>
    </member>
    <member kind="function">
      <type>WsModEditor *</type>
      <name>buildModule</name>
      <anchorfile>WsModEditor_8h.html</anchorfile>
      <anchor>adf3e2d8a499bb79274a81fee8c87f344</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsModFileUpload.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModFileUpload/src/</path>
    <filename>WsModFileUpload_8cpp</filename>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
    <includes id="WsApplication_8h" name="WsApplication.h" local="no" imported="no">Main/WsApplication.h</includes>
    <includes id="WsModFileUpload_8h" name="WsModFileUpload.h" local="yes" imported="no">WsModFileUpload.h</includes>
    <member kind="function">
      <type>void</type>
      <name>WsModFileUploadInit</name>
      <anchorfile>WsModFileUpload_8cpp.html</anchorfile>
      <anchor>af496b93c28a107827ea67db39cb02591</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsModFileUpload.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModFileUpload/src/</path>
    <filename>WsModFileUpload_8h</filename>
    <class kind="class">WsFileUpload</class>
    <class kind="class">WsModFileUpload</class>
    <member kind="function">
      <type>void</type>
      <name>WsModFileUploadInit</name>
      <anchorfile>WsModFileUpload_8h.html</anchorfile>
      <anchor>a73fef05af7263b0372b1ca32c6468334</anchor>
      <arglist>(void) __attribute__((constructor))</arglist>
    </member>
    <member kind="function">
      <type>WsModFileUpload *</type>
      <name>buildModule</name>
      <anchorfile>WsModFileUpload_8h.html</anchorfile>
      <anchor>ae864a99891882963ad1f91fa00998fcc</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsModFollowUs.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModFollowUs/src/</path>
    <filename>WsModFollowUs_8cpp</filename>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
    <includes id="WsUser_8h" name="WsUser.h" local="no" imported="no">User/WsUser.h</includes>
    <includes id="WsApplication_8h" name="WsApplication.h" local="no" imported="no">Main/WsApplication.h</includes>
    <includes id="WsAnchor_8h" name="WsAnchor.h" local="yes" imported="no">WsModules/WsModAnchor/src/WsAnchor.h</includes>
    <includes id="WsModFollowUs_8h" name="WsModFollowUs.h" local="yes" imported="no">WsModFollowUs.h</includes>
    <member kind="function">
      <type>void</type>
      <name>WsModFollowUsInit</name>
      <anchorfile>WsModFollowUs_8cpp.html</anchorfile>
      <anchor>ad7569a05b25cbf4f9f60903f66276deb</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsModFollowUs.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModFollowUs/src/</path>
    <filename>WsModFollowUs_8h</filename>
    <class kind="class">WsFollowUs</class>
    <class kind="class">WsModFollowUs</class>
    <member kind="function">
      <type>void</type>
      <name>WsModFollowUsInit</name>
      <anchorfile>WsModFollowUs_8h.html</anchorfile>
      <anchor>a5aaa6ce0c17f5f4adef95db193f03913</anchor>
      <arglist>(void) __attribute__((constructor))</arglist>
    </member>
    <member kind="function">
      <type>WsModFollowUs *</type>
      <name>buildModule</name>
      <anchorfile>WsModFollowUs_8h.html</anchorfile>
      <anchor>aa8b947bbb36d6bdd8a7e523798118b48</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsModGalleria.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModGalleria/src/</path>
    <filename>WsModGalleria_8cpp</filename>
    <includes id="WsApplication_8h" name="WsApplication.h" local="no" imported="no">Main/WsApplication.h</includes>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
    <includes id="WsModGalleria_8h" name="WsModGalleria.h" local="yes" imported="no">WsModGalleria.h</includes>
    <member kind="function">
      <type>void</type>
      <name>WsModGalleriaInit</name>
      <anchorfile>WsModGalleria_8cpp.html</anchorfile>
      <anchor>a450e9e97a758b4ed1152c99623762856</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsModGalleria.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModGalleria/src/</path>
    <filename>WsModGalleria_8h</filename>
    <class kind="class">WsGalleria</class>
    <class kind="class">WsModGalleria</class>
    <member kind="function">
      <type>void</type>
      <name>WsModGalleriaInit</name>
      <anchorfile>WsModGalleria_8h.html</anchorfile>
      <anchor>a37874eeb764c310f01b8282ebf230afa</anchor>
      <arglist>(void) __attribute__((constructor))</arglist>
    </member>
    <member kind="function">
      <type>WsModGalleria *</type>
      <name>buildModule</name>
      <anchorfile>WsModGalleria_8h.html</anchorfile>
      <anchor>a92329e9da9d567f45fbd03164aff1adf</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsImages2.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModImages2/src/</path>
    <filename>WsImages2_8cpp</filename>
    <includes id="WsApplication_8h" name="WsApplication.h" local="no" imported="no">Main/WsApplication.h</includes>
    <includes id="WsUser_8h" name="WsUser.h" local="no" imported="no">User/WsUser.h</includes>
    <includes id="WsImages2_8h" name="WsImages2.h" local="yes" imported="no">WsImages2.h</includes>
  </compound>
  <compound kind="file">
    <name>WsImages2.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModImages2/src/</path>
    <filename>WsImages2_8h</filename>
    <class kind="class">wsi2Anchor</class>
    <class kind="class">WsImages2</class>
  </compound>
  <compound kind="file">
    <name>WsModImages2.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModImages2/src/</path>
    <filename>WsModImages2_8cpp</filename>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
    <includes id="WsApplication_8h" name="WsApplication.h" local="no" imported="no">Main/WsApplication.h</includes>
    <includes id="WsModImages2_8h" name="WsModImages2.h" local="yes" imported="no">WsModImages2.h</includes>
    <includes id="WsImages2_8h" name="WsImages2.h" local="yes" imported="no">WsImages2.h</includes>
    <member kind="function">
      <type>void</type>
      <name>WsModImages2Init</name>
      <anchorfile>WsModImages2_8cpp.html</anchorfile>
      <anchor>a77a6461f7a085e48ab5bb26c017cfee4</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsModImages2.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModImages2/src/</path>
    <filename>WsModImages2_8h</filename>
    <class kind="class">WsModImages2</class>
    <member kind="function">
      <type>void</type>
      <name>WsModImages2Init</name>
      <anchorfile>WsModImages2_8h.html</anchorfile>
      <anchor>a35019f12dfbfdb17565970de674fe5fb</anchor>
      <arglist>(void) __attribute__((constructor))</arglist>
    </member>
    <member kind="function">
      <type>WsModImages2 *</type>
      <name>buildModule</name>
      <anchorfile>WsModImages2_8h.html</anchorfile>
      <anchor>a5bb5d57451e3634f17af4640e4dc8ef1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsModImagesGallery.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModImagesGallery/src/</path>
    <filename>WsModImagesGallery_8cpp</filename>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
    <includes id="WsApplication_8h" name="WsApplication.h" local="no" imported="no">Main/WsApplication.h</includes>
    <includes id="WsModImagesGallery_8h" name="WsModImagesGallery.h" local="yes" imported="no">WsModImagesGallery.h</includes>
    <member kind="function">
      <type>void</type>
      <name>WsModImagesGalleryInit</name>
      <anchorfile>WsModImagesGallery_8cpp.html</anchorfile>
      <anchor>aae75d714b5c8cc414af4bf54cbaa64a1</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsModImagesGallery.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModImagesGallery/src/</path>
    <filename>WsModImagesGallery_8h</filename>
    <includes id="WsModule_8h" name="WsModule.h" local="no" imported="no">WsModule/src/WsModule.h</includes>
    <includes id="WsImages2_8h" name="WsImages2.h" local="yes" imported="no">WsModules/WsModImages2/src/WsImages2.h</includes>
    <class kind="class">WsImagesGallery</class>
    <class kind="class">WsModImagesGallery</class>
    <member kind="function">
      <type>void</type>
      <name>WsModImagesGalleryInit</name>
      <anchorfile>WsModImagesGallery_8h.html</anchorfile>
      <anchor>aef796497839cc253227f525cf90dcbd5</anchor>
      <arglist>(void) __attribute__((constructor))</arglist>
    </member>
    <member kind="function">
      <type>WsModImagesGallery *</type>
      <name>buildModule</name>
      <anchorfile>WsModImagesGallery_8h.html</anchorfile>
      <anchor>a24c477ecea0a821fa74827292b31fd35</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsLatestNews.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModLatestNews2/src/</path>
    <filename>WsLatestNews_8cpp</filename>
    <includes id="WsLatestNews_8h" name="WsLatestNews.h" local="yes" imported="no">WsLatestNews.h</includes>
  </compound>
  <compound kind="file">
    <name>WsLatestNews.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModLatestNews2/src/</path>
    <filename>WsLatestNews_8h</filename>
    <includes id="WsFileSystemTree_8h" name="WsFileSystemTree.h" local="no" imported="no">FileSystemTree/WsFileSystemTree.h</includes>
    <includes id="WsAccessTree_8h" name="WsAccessTree.h" local="no" imported="no">Tree/WsAccessTree.h</includes>
    <class kind="class">WsLatestNews</class>
  </compound>
  <compound kind="file">
    <name>WsLatestNews2.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModLatestNews2/src/</path>
    <filename>WsLatestNews2_8cpp</filename>
    <includes id="WsAbstractNode_8h" name="WsAbstractNode.h" local="no" imported="no">FileSystemTree/WsAbstractNode.h</includes>
    <includes id="WsUser_8h" name="WsUser.h" local="no" imported="no">User/WsUser.h</includes>
    <includes id="WsGlobalProperties_8h" name="WsGlobalProperties.h" local="no" imported="no">ConfigManager/WsGlobalProperties.h</includes>
    <includes id="WsLatestNews_8h" name="WsLatestNews.h" local="yes" imported="no">WsLatestNews.h</includes>
    <includes id="WsLatestNews2_8h" name="WsLatestNews2.h" local="yes" imported="no">WsLatestNews2.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>WSMODLATESTNEWS</name>
      <anchorfile>WsLatestNews2_8cpp.html</anchorfile>
      <anchor>a1aad50f898775a71c810fe42413d849d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NB_NEWS</name>
      <anchorfile>WsLatestNews2_8cpp.html</anchorfile>
      <anchor>aecd18da8668e970030234d98ad3bddbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROOT</name>
      <anchorfile>WsLatestNews2_8cpp.html</anchorfile>
      <anchor>a77988da40e9a35da51ea0e8943ebbd4a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsLatestNews2.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModLatestNews2/src/</path>
    <filename>WsLatestNews2_8h</filename>
    <includes id="WsApplication_8h" name="WsApplication.h" local="no" imported="no">Main/WsApplication.h</includes>
    <class kind="class">WsLatestNews2</class>
  </compound>
  <compound kind="file">
    <name>WsModLatestNews2.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModLatestNews2/src/</path>
    <filename>WsModLatestNews2_8cpp</filename>
    <includes id="WsAbstractNode_8h" name="WsAbstractNode.h" local="no" imported="no">FileSystemTree/WsAbstractNode.h</includes>
    <includes id="WsUser_8h" name="WsUser.h" local="no" imported="no">User/WsUser.h</includes>
    <includes id="WsGlobalProperties_8h" name="WsGlobalProperties.h" local="no" imported="no">ConfigManager/WsGlobalProperties.h</includes>
    <includes id="WsLatestNews_8h" name="WsLatestNews.h" local="yes" imported="no">WsLatestNews.h</includes>
    <includes id="WsLatestNews2_8h" name="WsLatestNews2.h" local="yes" imported="no">WsLatestNews2.h</includes>
    <includes id="WsModLatestNews2_8h" name="WsModLatestNews2.h" local="yes" imported="no">WsModLatestNews2.h</includes>
    <member kind="function">
      <type>void</type>
      <name>WsModLatestNews2Init</name>
      <anchorfile>WsModLatestNews2_8cpp.html</anchorfile>
      <anchor>abaa795cbf93c71993ffba484b250011b</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsModLatestNews2.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModLatestNews2/src/</path>
    <filename>WsModLatestNews2_8h</filename>
    <includes id="WsApplication_8h" name="WsApplication.h" local="no" imported="no">Main/WsApplication.h</includes>
    <class kind="class">WsModLatestNews2</class>
    <member kind="function">
      <type>void</type>
      <name>WsModLatestNews2Init</name>
      <anchorfile>WsModLatestNews2_8h.html</anchorfile>
      <anchor>a830ef990d9d572e0292056db08d2700d</anchor>
      <arglist>(void) __attribute__((constructor))</arglist>
    </member>
    <member kind="function">
      <type>WsModLatestNews2 *</type>
      <name>buildModule</name>
      <anchorfile>WsModLatestNews2_8h.html</anchorfile>
      <anchor>a7028d9e155f29b4bcf4be323b4a8a88c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsModLinksList.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModLinksList/src/</path>
    <filename>WsModLinksList_8cpp</filename>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
    <includes id="WsUser_8h" name="WsUser.h" local="no" imported="no">User/WsUser.h</includes>
    <includes id="WsApplication_8h" name="WsApplication.h" local="no" imported="no">Main/WsApplication.h</includes>
    <includes id="WsAnchor_8h" name="WsAnchor.h" local="yes" imported="no">WsModules/WsModAnchor/src/WsAnchor.h</includes>
    <includes id="WsModLinksList_8h" name="WsModLinksList.h" local="yes" imported="no">WsModLinksList.h</includes>
    <member kind="function">
      <type>void</type>
      <name>WsModLinksListInit</name>
      <anchorfile>WsModLinksList_8cpp.html</anchorfile>
      <anchor>a2a3a0dac01df8b99b524a137b31bb857</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsModLinksList.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModLinksList/src/</path>
    <filename>WsModLinksList_8h</filename>
    <class kind="class">WsLinksList</class>
    <class kind="class">WsModLinksList</class>
    <member kind="function">
      <type>void</type>
      <name>WsModLinksListInit</name>
      <anchorfile>WsModLinksList_8h.html</anchorfile>
      <anchor>a8a66ba5d1fed0c40f17a1a7103726d51</anchor>
      <arglist>(void) __attribute__((constructor))</arglist>
    </member>
    <member kind="function">
      <type>WsModLinksList *</type>
      <name>buildModule</name>
      <anchorfile>WsModLinksList_8h.html</anchorfile>
      <anchor>a605fafe11dd2945639f662d204605fa6</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsModMeetingView.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModMeetingView/src/</path>
    <filename>WsModMeetingView_8cpp</filename>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
    <includes id="WsModMeetingView_8h" name="WsModMeetingView.h" local="yes" imported="no">WsModMeetingView.h</includes>
    <member kind="function">
      <type>void</type>
      <name>WsModMeetingViewInit</name>
      <anchorfile>WsModMeetingView_8cpp.html</anchorfile>
      <anchor>a9bcade775a65d4913f4b348923f0faac</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsModMeetingView.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModMeetingView/src/</path>
    <filename>WsModMeetingView_8h</filename>
    <class kind="class">WsMeetingView</class>
    <class kind="class">WsModMeetingView</class>
    <member kind="function">
      <type>void</type>
      <name>WsModMeetingViewInit</name>
      <anchorfile>WsModMeetingView_8h.html</anchorfile>
      <anchor>ac92abaa5230a2ff7237d56e8476def34</anchor>
      <arglist>(void) __attribute__((constructor))</arglist>
    </member>
    <member kind="function">
      <type>WsModMeetingView *</type>
      <name>buildModule</name>
      <anchorfile>WsModMeetingView_8h.html</anchorfile>
      <anchor>a65a3e7da6978b451e04cda6966cf4d55</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsMenu.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModMenu/src/</path>
    <filename>WsMenu_8cpp</filename>
    <includes id="WsGlobalConfig_8h" name="WsGlobalConfig.h" local="no" imported="no">Include/WsGlobalConfig.h</includes>
    <includes id="WsApplication_8h" name="WsApplication.h" local="no" imported="no">Main/WsApplication.h</includes>
    <includes id="WsImages2_8h" name="WsImages2.h" local="yes" imported="no">WsModules/WsModImages2/src/WsImages2.h</includes>
    <includes id="WsMenu_8h" name="WsMenu.h" local="yes" imported="no">WsMenu.h</includes>
  </compound>
  <compound kind="file">
    <name>WsMenu.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModMenu/src/</path>
    <filename>WsMenu_8h</filename>
    <class kind="class">WsMenu</class>
  </compound>
  <compound kind="file">
    <name>WsModMenu.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModMenu/src/</path>
    <filename>WsModMenu_8cpp</filename>
    <includes id="WsApplication_8h" name="WsApplication.h" local="no" imported="no">Main/WsApplication.h</includes>
    <includes id="WsMenu_8h" name="WsMenu.h" local="yes" imported="no">WsMenu.h</includes>
    <includes id="WsModMenu_8h" name="WsModMenu.h" local="yes" imported="no">WsModMenu.h</includes>
    <member kind="function">
      <type>void</type>
      <name>WsModMenuInit</name>
      <anchorfile>WsModMenu_8cpp.html</anchorfile>
      <anchor>a9932d9b5f878fe9b417742a3f3cc7d40</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsModMenu.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModMenu/src/</path>
    <filename>WsModMenu_8h</filename>
    <class kind="class">WsModMenu</class>
    <member kind="function">
      <type>void</type>
      <name>WsModMenuInit</name>
      <anchorfile>WsModMenu_8h.html</anchorfile>
      <anchor>ad967995ddd59a4c2f6ea5cbfe4dbe1b2</anchor>
      <arglist>(void) __attribute__((constructor))</arglist>
    </member>
    <member kind="function">
      <type>WsModMenu *</type>
      <name>buildModule</name>
      <anchorfile>WsModMenu_8h.html</anchorfile>
      <anchor>a2050e47710328434f289e3dc97c0263a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsModMenuImages.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModMenuImages/src/</path>
    <filename>WsModMenuImages_8cpp</filename>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
    <includes id="WsApplication_8h" name="WsApplication.h" local="no" imported="no">Main/WsApplication.h</includes>
    <includes id="WsImages2_8h" name="WsImages2.h" local="yes" imported="no">WsModules/WsModImages2/src/WsImages2.h</includes>
    <includes id="WsModMenuImages_8h" name="WsModMenuImages.h" local="yes" imported="no">WsModMenuImages.h</includes>
    <member kind="function">
      <type>void</type>
      <name>WsModMenuImagesInit</name>
      <anchorfile>WsModMenuImages_8cpp.html</anchorfile>
      <anchor>adb645d186a6936b5334e77b757a13573</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsModMenuImages.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModMenuImages/src/</path>
    <filename>WsModMenuImages_8h</filename>
    <includes id="WsModule_8h" name="WsModule.h" local="no" imported="no">WsModule/src/WsModule.h</includes>
    <class kind="class">WsMenuImages</class>
    <class kind="class">WsModMenuImages</class>
    <member kind="function">
      <type>void</type>
      <name>WsModMenuImagesInit</name>
      <anchorfile>WsModMenuImages_8h.html</anchorfile>
      <anchor>a6c49ab230002435c8d87f7b2b289c46b</anchor>
      <arglist>(void) __attribute__((constructor))</arglist>
    </member>
    <member kind="function">
      <type>WsModMenuImages *</type>
      <name>buildModule</name>
      <anchorfile>WsModMenuImages_8h.html</anchorfile>
      <anchor>a72df9f7488743103b0c6b64c29ad0c69</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EmailToken.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModNewsLetter/src/</path>
    <filename>EmailToken_8h</filename>
    <class kind="class">EmailToken</class>
    <member kind="typedef">
      <type>Wt::Dbo::collection&lt; Wt::Dbo::ptr&lt; EmailToken &gt; &gt;</type>
      <name>EmailTokens</name>
      <anchorfile>EmailToken_8h.html</anchorfile>
      <anchor>ac06a91ff3673e49dca0a8f5d884a4146</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsConfirmEmail.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModNewsLetter/src/</path>
    <filename>WsConfirmEmail_8h</filename>
    <includes id="EmailToken_8h" name="EmailToken.h" local="yes" imported="no">EmailToken.h</includes>
    <class kind="class">WsConfimEmail</class>
    <member kind="define">
      <type>#define</type>
      <name>RECEIVE_H_</name>
      <anchorfile>WsConfirmEmail_8h.html</anchorfile>
      <anchor>a771dfd78d28926cc5948fedadc9492bf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsModNewsLetter.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModNewsLetter/src/</path>
    <filename>WsModNewsLetter_8cpp</filename>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
    <includes id="WsApplication_8h" name="WsApplication.h" local="no" imported="no">Main/WsApplication.h</includes>
    <includes id="WsModNewsLetter_8h" name="WsModNewsLetter.h" local="yes" imported="no">WsModNewsLetter.h</includes>
    <includes id="WsNewsLetter_8h" name="WsNewsLetter.h" local="yes" imported="no">WsNewsLetter.h</includes>
    <member kind="function">
      <type>void</type>
      <name>WsModNewsLetterInit</name>
      <anchorfile>WsModNewsLetter_8cpp.html</anchorfile>
      <anchor>aba5934a4f0c067161f79cd2eda3223bb</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsModNewsLetter.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModNewsLetter/src/</path>
    <filename>WsModNewsLetter_8h</filename>
    <class kind="class">WsModNewsLetter</class>
    <member kind="function">
      <type>void</type>
      <name>WsModNewsLetterInit</name>
      <anchorfile>WsModNewsLetter_8h.html</anchorfile>
      <anchor>a9da733a1bc098b4f10f1d828ee987322</anchor>
      <arglist>(void) __attribute__((constructor))</arglist>
    </member>
    <member kind="function">
      <type>WsModNewsLetter *</type>
      <name>buildModule</name>
      <anchorfile>WsModNewsLetter_8h.html</anchorfile>
      <anchor>a3d253cbc1c7d3e443aa900587f272868</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsNewsLetter.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModNewsLetter/src/</path>
    <filename>WsNewsLetter_8cpp</filename>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
    <includes id="WsLayoutProperties_8h" name="WsLayoutProperties.h" local="no" imported="no">ConfigManager/WsLayoutProperties.h</includes>
    <includes id="WsApplication_8h" name="WsApplication.h" local="no" imported="no">Main/WsApplication.h</includes>
    <includes id="EmailToken_8h" name="EmailToken.h" local="yes" imported="no">EmailToken.h</includes>
    <includes id="WsNewsLetter_8h" name="WsNewsLetter.h" local="yes" imported="no">WsNewsLetter.h</includes>
  </compound>
  <compound kind="file">
    <name>WsNewsLetter.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModNewsLetter/src/</path>
    <filename>WsNewsLetter_8h</filename>
    <includes id="EmailToken_8h" name="EmailToken.h" local="yes" imported="no">EmailToken.h</includes>
    <class kind="class">WsNewsLetter</class>
  </compound>
  <compound kind="file">
    <name>WsNewsLetterEm.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModNewsLetter/src/</path>
    <filename>WsNewsLetterEm_8h</filename>
    <includes id="EmailToken_8h" name="EmailToken.h" local="yes" imported="no">EmailToken.h</includes>
    <class kind="class">WsNewsLetter</class>
  </compound>
  <compound kind="file">
    <name>WsModOdf.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModOdf/src/</path>
    <filename>WsModOdf_8cpp</filename>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
    <includes id="WsModOdf_8h" name="WsModOdf.h" local="yes" imported="no">WsModOdf.h</includes>
    <member kind="function">
      <type>void</type>
      <name>WsModOdfInit</name>
      <anchorfile>WsModOdf_8cpp.html</anchorfile>
      <anchor>a1580aa9af519ed1818087b5a8752bdec</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsModOdf.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModOdf/src/</path>
    <filename>WsModOdf_8h</filename>
    <class kind="class">WsOdf</class>
    <class kind="class">WsModOdf</class>
    <member kind="function">
      <type>void</type>
      <name>WsModOdfInit</name>
      <anchorfile>WsModOdf_8h.html</anchorfile>
      <anchor>a61085d908e8e9049f5db440066758d89</anchor>
      <arglist>(void) __attribute__((constructor))</arglist>
    </member>
    <member kind="function">
      <type>WsModOdf *</type>
      <name>buildModule</name>
      <anchorfile>WsModOdf_8h.html</anchorfile>
      <anchor>a99d2066e0510b3d619b2d38c81d8e97a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsModPdf.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModPdf/src/</path>
    <filename>WsModPdf_8cpp</filename>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
    <includes id="WsModPdf_8h" name="WsModPdf.h" local="yes" imported="no">WsModPdf.h</includes>
    <member kind="function">
      <type>void</type>
      <name>WsModPdfInit</name>
      <anchorfile>WsModPdf_8cpp.html</anchorfile>
      <anchor>a8418cfeb9f02f2e2a118517e56e08608</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsModPdf.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModPdf/src/</path>
    <filename>WsModPdf_8h</filename>
    <includes id="WsModule_8h" name="WsModule.h" local="no" imported="no">WsModule/src/WsModule.h</includes>
    <class kind="class">WsPdf</class>
    <class kind="class">WsModPdf</class>
    <member kind="function">
      <type>void</type>
      <name>WsModPdfInit</name>
      <anchorfile>WsModPdf_8h.html</anchorfile>
      <anchor>a6c95decdbb704d3b072c42427c4233ef</anchor>
      <arglist>(void) __attribute__((constructor))</arglist>
    </member>
    <member kind="function">
      <type>WsModPdf *</type>
      <name>buildModule</name>
      <anchorfile>WsModPdf_8h.html</anchorfile>
      <anchor>af9d82e19e524c4acdb84b41252ff9657</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsModRSS.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModRSS/src/</path>
    <filename>WsModRSS_8cpp</filename>
    <includes id="WsAbstractNode_8h" name="WsAbstractNode.h" local="no" imported="no">FileSystemTree/WsAbstractNode.h</includes>
    <includes id="WsUser_8h" name="WsUser.h" local="no" imported="no">User/WsUser.h</includes>
    <includes id="WsGlobalProperties_8h" name="WsGlobalProperties.h" local="no" imported="no">ConfigManager/WsGlobalProperties.h</includes>
    <includes id="WsModRSS_8h" name="WsModRSS.h" local="yes" imported="no">WsModRSS.h</includes>
    <includes id="WsRSS_8h" name="WsRSS.h" local="yes" imported="no">WsRSS.h</includes>
    <member kind="function">
      <type>void</type>
      <name>WsModRSSInit</name>
      <anchorfile>WsModRSS_8cpp.html</anchorfile>
      <anchor>afbc47ffa3a1e1e679a39c68b41c2a0b7</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsModRSS.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModRSS/src/</path>
    <filename>WsModRSS_8h</filename>
    <includes id="WsApplication_8h" name="WsApplication.h" local="no" imported="no">Main/WsApplication.h</includes>
    <class kind="class">WsModRSS</class>
    <member kind="function">
      <type>void</type>
      <name>WsModRSSInit</name>
      <anchorfile>WsModRSS_8h.html</anchorfile>
      <anchor>a60f64c984e3de267143e69f429765ade</anchor>
      <arglist>(void) __attribute__((constructor))</arglist>
    </member>
    <member kind="function">
      <type>WsModRSS *</type>
      <name>buildModule</name>
      <anchorfile>WsModRSS_8h.html</anchorfile>
      <anchor>a4f3379b3bba43541cc62eeda49da0a58</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsRSS.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModRSS/src/</path>
    <filename>WsRSS_8cpp</filename>
    <includes id="WsAbstractNode_8h" name="WsAbstractNode.h" local="no" imported="no">FileSystemTree/WsAbstractNode.h</includes>
    <includes id="WsUser_8h" name="WsUser.h" local="no" imported="no">User/WsUser.h</includes>
    <includes id="WsGlobalProperties_8h" name="WsGlobalProperties.h" local="no" imported="no">ConfigManager/WsGlobalProperties.h</includes>
    <includes id="WsSearchRSS_8h" name="WsSearchRSS.h" local="yes" imported="no">WsSearchRSS.h</includes>
    <includes id="WsRSS_8h" name="WsRSS.h" local="yes" imported="no">WsRSS.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>WSMODLATESTNEWS</name>
      <anchorfile>WsRSS_8cpp.html</anchorfile>
      <anchor>a1aad50f898775a71c810fe42413d849d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NB_NEWS</name>
      <anchorfile>WsRSS_8cpp.html</anchorfile>
      <anchor>aecd18da8668e970030234d98ad3bddbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROOT</name>
      <anchorfile>WsRSS_8cpp.html</anchorfile>
      <anchor>a77988da40e9a35da51ea0e8943ebbd4a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsRSS.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModRSS/src/</path>
    <filename>WsRSS_8h</filename>
    <includes id="WsApplication_8h" name="WsApplication.h" local="no" imported="no">Main/WsApplication.h</includes>
    <class kind="class">WsRSS</class>
  </compound>
  <compound kind="file">
    <name>WsSearchRSS.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModRSS/src/</path>
    <filename>WsSearchRSS_8cpp</filename>
    <includes id="WsSearchRSS_8h" name="WsSearchRSS.h" local="yes" imported="no">WsSearchRSS.h</includes>
  </compound>
  <compound kind="file">
    <name>WsSearchRSS.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModRSS/src/</path>
    <filename>WsSearchRSS_8h</filename>
    <includes id="WsFileSystemTree_8h" name="WsFileSystemTree.h" local="no" imported="no">FileSystemTree/WsFileSystemTree.h</includes>
    <includes id="WsAccessTree_8h" name="WsAccessTree.h" local="no" imported="no">Tree/WsAccessTree.h</includes>
    <class kind="class">WsSearchRSS</class>
  </compound>
  <compound kind="file">
    <name>WsModTwitter.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModTwitter/src/</path>
    <filename>WsModTwitter_8cpp</filename>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
    <includes id="WsModTwitter_8h" name="WsModTwitter.h" local="yes" imported="no">WsModTwitter.h</includes>
    <member kind="function">
      <type>void</type>
      <name>WsModTwitterInit</name>
      <anchorfile>WsModTwitter_8cpp.html</anchorfile>
      <anchor>ad2b8ebad48fb07121f5ab8fde3926883</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsModTwitter.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModTwitter/src/</path>
    <filename>WsModTwitter_8h</filename>
    <includes id="WsApplication_8h" name="WsApplication.h" local="no" imported="no">Main/WsApplication.h</includes>
    <class kind="class">WsTwitterEditorWidget</class>
    <class kind="class">WsModTwitter</class>
    <member kind="function">
      <type>void</type>
      <name>WsModTwitterInit</name>
      <anchorfile>WsModTwitter_8h.html</anchorfile>
      <anchor>a38ffeadab6ba1c2c56a8c76a205a70ed</anchor>
      <arglist>(void) __attribute__((constructor))</arglist>
    </member>
    <member kind="function">
      <type>WsModTwitter *</type>
      <name>buildModule</name>
      <anchorfile>WsModTwitter_8h.html</anchorfile>
      <anchor>a57b8e3781d8a7037c31ac060a92ce812</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsModVideo.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModVideo/src/</path>
    <filename>WsModVideo_8cpp</filename>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
    <includes id="WsModVideo_8h" name="WsModVideo.h" local="yes" imported="no">WsModVideo.h</includes>
    <includes id="WsVideo_8h" name="WsVideo.h" local="yes" imported="no">WsVideo.h</includes>
    <member kind="function">
      <type>void</type>
      <name>WsModVideoInit</name>
      <anchorfile>WsModVideo_8cpp.html</anchorfile>
      <anchor>a86532fb331440256f09cb0443a71cbe2</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsModVideo.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModVideo/src/</path>
    <filename>WsModVideo_8h</filename>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
    <includes id="WsModule_8h" name="WsModule.h" local="no" imported="no">WsModule/src/WsModule.h</includes>
    <class kind="class">WsModVideo</class>
    <member kind="function">
      <type>void</type>
      <name>WsModVideoInit</name>
      <anchorfile>WsModVideo_8h.html</anchorfile>
      <anchor>ac6f244ecbf83e956153a0b91f7fa3569</anchor>
      <arglist>(void) __attribute__((constructor))</arglist>
    </member>
    <member kind="function">
      <type>WsModVideo *</type>
      <name>buildModule</name>
      <anchorfile>WsModVideo_8h.html</anchorfile>
      <anchor>a04bd551e3a871b28dc6db6549a9fc0dc</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsVideo.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModVideo/src/</path>
    <filename>WsVideo_8cpp</filename>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
    <includes id="WsUser_8h" name="WsUser.h" local="no" imported="no">User/WsUser.h</includes>
    <includes id="WsApplication_8h" name="WsApplication.h" local="no" imported="no">Main/WsApplication.h</includes>
    <includes id="WsVideo_8h" name="WsVideo.h" local="yes" imported="no">WsVideo.h</includes>
  </compound>
  <compound kind="file">
    <name>WsVideo.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModVideo/src/</path>
    <filename>WsVideo_8h</filename>
    <class kind="class">WsVideo</class>
  </compound>
  <compound kind="file">
    <name>WsModZip.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModZip/src/</path>
    <filename>WsModZip_8cpp</filename>
    <includes id="WsModZip_8h" name="WsModZip.h" local="yes" imported="no">WsModZip.h</includes>
    <includes id="WsFileResource_8h" name="WsFileResource.h" local="no" imported="no">Main/WsFileResource.h</includes>
    <includes id="WsLogger_8h" name="WsLogger.h" local="no" imported="no">Logger/WsLogger.h</includes>
    <member kind="function">
      <type>void</type>
      <name>WsModZipInit</name>
      <anchorfile>WsModZip_8cpp.html</anchorfile>
      <anchor>a674d13c30c01024f56f3d10118130f42</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsModZip.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModZip/src/</path>
    <filename>WsModZip_8h</filename>
    <includes id="WsAbstractNode_8h" name="WsAbstractNode.h" local="no" imported="no">FileSystemTree/WsAbstractNode.h</includes>
    <includes id="WsUser_8h" name="WsUser.h" local="no" imported="no">User/WsUser.h</includes>
    <includes id="WsApplication_8h" name="WsApplication.h" local="no" imported="no">Main/WsApplication.h</includes>
    <class kind="class">WsZipEditorWidget</class>
    <class kind="class">WsModZip</class>
    <member kind="define">
      <type>#define</type>
      <name>ZIP</name>
      <anchorfile>WsModZip_8h.html</anchorfile>
      <anchor>a87c3580a7f3a6b19870b36f6a0718196</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAR</name>
      <anchorfile>WsModZip_8h.html</anchorfile>
      <anchor>ae17fb33e88a98c96905bdbb3046c1b6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WSMODZIP</name>
      <anchorfile>WsModZip_8h.html</anchorfile>
      <anchor>a56ae52fdff4197864340f11ce5f196c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALLOW_ZIP</name>
      <anchorfile>WsModZip_8h.html</anchorfile>
      <anchor>ae04a0684aeca7c97c4114d9846be65de</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALLOW_ZIP_ALL</name>
      <anchorfile>WsModZip_8h.html</anchorfile>
      <anchor>add50659411e43e83963bec11cf0f9ba7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WsModZipInit</name>
      <anchorfile>WsModZip_8h.html</anchorfile>
      <anchor>aa461c83d152003266bb29a15405c61c1</anchor>
      <arglist>(void) __attribute__((constructor))</arglist>
    </member>
    <member kind="function">
      <type>WsModZip *</type>
      <name>buildModule</name>
      <anchorfile>WsModZip_8h.html</anchorfile>
      <anchor>a5c59c51717c09c0b3012a1f33c579a21</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsMnoGoSearch.cpp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsSearchModules/MnoGoSearch/src/</path>
    <filename>WsMnoGoSearch_8cpp</filename>
    <includes id="WsMnoGoSearch_8h" name="WsMnoGoSearch.h" local="yes" imported="no">WsMnoGoSearch.h</includes>
    <member kind="function">
      <type>void</type>
      <name>WsMnoGoSearchInit</name>
      <anchorfile>WsMnoGoSearch_8cpp.html</anchorfile>
      <anchor>a0f5949365fe1fe16b7b87282b00aefe9</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WsMnoGoSearch.h</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsSearchModules/MnoGoSearch/src/</path>
    <filename>WsMnoGoSearch_8h</filename>
    <includes id="WsAbstractSearch_8h" name="WsAbstractSearch.h" local="no" imported="no">Search/WsAbstractSearch.h</includes>
    <class kind="class">WsMnoGoSearch</class>
    <member kind="typedef">
      <type>UDM_ENV *(*</type>
      <name>pf_UdmEnvInit</name>
      <anchorfile>WsMnoGoSearch_8h.html</anchorfile>
      <anchor>adcbf5297f96a0e1c2f2ec3cdb764ad87</anchor>
      <arglist>)(UDM_ENV *Env)</arglist>
    </member>
    <member kind="typedef">
      <type>UDM_AGENT *(*</type>
      <name>pf_UdmAgentInit</name>
      <anchorfile>WsMnoGoSearch_8h.html</anchorfile>
      <anchor>a777c3b030a29a4ae06da8d62faacdd84</anchor>
      <arglist>)(UDM_AGENT *Agent, UDM_ENV *Env, int id)</arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>pf_UdmAgentAddLine</name>
      <anchorfile>WsMnoGoSearch_8h.html</anchorfile>
      <anchor>abe0c4fc9b0600c3d4a18c605c9591ffb</anchor>
      <arglist>)(UDM_AGENT *Agent, const char *line)</arglist>
    </member>
    <member kind="typedef">
      <type>UDM_RESULT *(*</type>
      <name>pf_UdmFind2</name>
      <anchorfile>WsMnoGoSearch_8h.html</anchorfile>
      <anchor>aed20613ca51d0c174e5da3f441fffc99</anchor>
      <arglist>)(UDM_AGENT *Agent, const char *query)</arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>pf_UdmVarListFindInt</name>
      <anchorfile>WsMnoGoSearch_8h.html</anchorfile>
      <anchor>a2eaa754954356f82387a8fec928e5b9d</anchor>
      <arglist>)(UDM_VARLIST *vars, const char *name, const int defval)</arglist>
    </member>
    <member kind="typedef">
      <type>const char *(*</type>
      <name>pf_UdmVarListFindStr</name>
      <anchorfile>WsMnoGoSearch_8h.html</anchorfile>
      <anchor>af8e82bb6fa9d22eea73f8c9555aebe54</anchor>
      <arglist>)(UDM_VARLIST *vars, const char *name, const char *defval)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>pf_UdmResultFree</name>
      <anchorfile>WsMnoGoSearch_8h.html</anchorfile>
      <anchor>a7a1c4d604bda4fd3799bd1ced5e71a02</anchor>
      <arglist>)(UDM_RESULT *Result)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>pf_UdmAgentFree</name>
      <anchorfile>WsMnoGoSearch_8h.html</anchorfile>
      <anchor>a36f143e2a773e2af1d92d8a11f8accbf</anchor>
      <arglist>)(UDM_AGENT *Agent)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>pf_UdmEnvFree</name>
      <anchorfile>WsMnoGoSearch_8h.html</anchorfile>
      <anchor>a60674c3a2e4c831eed546e9e82227e4d</anchor>
      <arglist>)(UDM_ENV *Env)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WsMnoGoSearchInit</name>
      <anchorfile>WsMnoGoSearch_8h.html</anchorfile>
      <anchor>ae6e7396d37172ccfa0cc4e70ceab12b9</anchor>
      <arglist>(void) __attribute__((constructor))</arglist>
    </member>
    <member kind="function">
      <type>WsMnoGoSearch *</type>
      <name>buildModule</name>
      <anchorfile>WsMnoGoSearch_8h.html</anchorfile>
      <anchor>a0e81f2e3c6fb25cb054792e5f72ab635</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="page">
    <name>filesystemtree</name>
    <title>The FileSystemTree, MenuTree and AccessTree</title>
    <filename>filesystemtree</filename>
  </compound>
  <compound kind="page">
    <name>nodes</name>
    <title>The Nodes</title>
    <filename>nodes</filename>
  </compound>
  <compound kind="page">
    <name>configuration</name>
    <title>The Configuration Files</title>
    <filename>configuration</filename>
  </compound>
  <compound kind="page">
    <name>gamin</name>
    <title>The update Mechanism</title>
    <filename>gamin</filename>
  </compound>
  <compound kind="page">
    <name>fsdaemon</name>
    <title>The FsDaemon</title>
    <filename>fsdaemon</filename>
  </compound>
  <compound kind="page">
    <name>modules</name>
    <title>Modules</title>
    <filename>modules</filename>
  </compound>
  <compound kind="page">
    <name>architecture</name>
    <title>The Architecture of the CMS</title>
    <filename>architecture</filename>
  </compound>
  <compound kind="page">
    <name>future</name>
    <title>The Future improvements</title>
    <filename>future</filename>
  </compound>
  <compound kind="page">
    <name>installation</name>
    <title>Installation</title>
    <filename>installation</filename>
  </compound>
  <compound kind="page">
    <name>config</name>
    <title>Configuration</title>
    <filename>config</filename>
  </compound>
  <compound kind="class">
    <name>EmailToken</name>
    <filename>classEmailToken.html</filename>
    <member kind="function">
      <type>void</type>
      <name>persist</name>
      <anchorfile>classEmailToken.html</anchorfile>
      <anchor>a1a3f5e7a963bcc8ce1373b947efd15b2</anchor>
      <arglist>(Action &amp;a)</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>email</name>
      <anchorfile>classEmailToken.html</anchorfile>
      <anchor>ad6b6b04471f7d57407fc5e60b93d0ddc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>token</name>
      <anchorfile>classEmailToken.html</anchorfile>
      <anchor>a32b9e6c52b46ea812bc1ab91b1bc4db8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Wt::WDate</type>
      <name>currentDate</name>
      <anchorfile>classEmailToken.html</anchorfile>
      <anchor>a1458c06b7bee6e6bd604afef274fd4a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>registered</name>
      <anchorfile>classEmailToken.html</anchorfile>
      <anchor>ad28cc0df2375f38c5c11b3a006457173</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsAbstractAuth</name>
    <filename>classWsAbstractAuth.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>authentify</name>
      <anchorfile>classWsAbstractAuth.html</anchorfile>
      <anchor>ad015cb4be20d2f8cb26455368bb8a023</anchor>
      <arglist>(const std::string &amp;uid, const std::string &amp;pass=&quot;&quot;, const std::string &amp;ip=&quot;&quot;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>getUid</name>
      <anchorfile>classWsAbstractAuth.html</anchorfile>
      <anchor>a374d3acb672f6dff47ebc7ef74780981</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getFirstName</name>
      <anchorfile>classWsAbstractAuth.html</anchorfile>
      <anchor>a49cc80181dfaaf8fbfe99fdcfd17b642</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getSurname</name>
      <anchorfile>classWsAbstractAuth.html</anchorfile>
      <anchor>a6d9e6640104a68359dc4f43dbad734dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getEmail</name>
      <anchorfile>classWsAbstractAuth.html</anchorfile>
      <anchor>a9bb7ee92e251378f509b25c2d4846689</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::set&lt; std::string &gt;</type>
      <name>getUserGroups</name>
      <anchorfile>classWsAbstractAuth.html</anchorfile>
      <anchor>adeeaa0800e6cb0cb0ab4dcf1e5198ff8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::set&lt; std::string &gt;</type>
      <name>getAllGroups</name>
      <anchorfile>classWsAbstractAuth.html</anchorfile>
      <anchor>a7eb0492798b93021da603b498fdfdddb</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsAbstractFsClient</name>
    <filename>classWsAbstractFsClient.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WsAbstractFsClient</name>
      <anchorfile>classWsAbstractFsClient.html</anchorfile>
      <anchor>af47416b845bde777905a68329e262144</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>load</name>
      <anchorfile>classWsAbstractFsClient.html</anchorfile>
      <anchor>a16a762b2668b8e1d7dcb4f4e2435af05</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getPermissions</name>
      <anchorfile>classWsAbstractFsClient.html</anchorfile>
      <anchor>a314f9ac7146877847fc73c7a57f2d8ff</anchor>
      <arglist>(const std::string &amp;p)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const WsNodeProperties *</type>
      <name>getProperties</name>
      <anchorfile>classWsAbstractFsClient.html</anchorfile>
      <anchor>a35140ff295ac3288c571f9304354115d</anchor>
      <arglist>(const std::string &amp;p)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>getProperty</name>
      <anchorfile>classWsAbstractFsClient.html</anchorfile>
      <anchor>a692bc60c435450da425d86c0bbe5abf6</anchor>
      <arglist>(const std::string &amp;section, const std::string &amp;p, const std::string &amp;prop)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>getSurname</name>
      <anchorfile>classWsAbstractFsClient.html</anchorfile>
      <anchor>a8ca0f15f18a85f583b248df10a79126d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>getFirstName</name>
      <anchorfile>classWsAbstractFsClient.html</anchorfile>
      <anchor>aebf836e866ef1798bdb2304ad4d8b5c3</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>getEmail</name>
      <anchorfile>classWsAbstractFsClient.html</anchorfile>
      <anchor>ae6a6b5624339d53de85b4a7ab9e00e39</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NodePtr</type>
      <name>getMenuRoot</name>
      <anchorfile>classWsAbstractFsClient.html</anchorfile>
      <anchor>ad5031b87000a793c89f9e04527a03f6a</anchor>
      <arglist>(const bool &amp;forceUpdate=false)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NodePtr</type>
      <name>getAccessRoot</name>
      <anchorfile>classWsAbstractFsClient.html</anchorfile>
      <anchor>a63fac061528dc4fbb950225fb5e1f404</anchor>
      <arglist>(const bool &amp;forceUpdate=false)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NodePtr</type>
      <name>getMenuRoot</name>
      <anchorfile>classWsAbstractFsClient.html</anchorfile>
      <anchor>a469d67604065c138143d90a7b36bd0ab</anchor>
      <arglist>(const std::set&lt; string &gt; &amp;exclNames, const std::set&lt; string &gt; &amp;exclExt)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::vector&lt; WsResultItem &gt;</type>
      <name>getSearchResults</name>
      <anchorfile>classWsAbstractFsClient.html</anchorfile>
      <anchor>a5103b87e12712ae9a3415c911852d5c8</anchor>
      <arglist>(const std::string &amp;terms)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::set&lt; string &gt;</type>
      <name>getAllGroups</name>
      <anchorfile>classWsAbstractFsClient.html</anchorfile>
      <anchor>afc36862aed55e2d93cc3d32ed20111b6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string</type>
      <name>getRootPath</name>
      <anchorfile>classWsAbstractFsClient.html</anchorfile>
      <anchor>a9bb1c696ffdfd530ee836feb5028483e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>saveProperties</name>
      <anchorfile>classWsAbstractFsClient.html</anchorfile>
      <anchor>a1bca081692299570498d87e00dd073e1</anchor>
      <arglist>(WsNodeProperties *props, const std::string &amp;path)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>saveProperty</name>
      <anchorfile>classWsAbstractFsClient.html</anchorfile>
      <anchor>a69d0d4f8e275dba3d3c78403396c31db</anchor>
      <arglist>(const std::string &amp;path, const std::string &amp;section, const std::string &amp;attr, const std::string &amp;val)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>createNode</name>
      <anchorfile>classWsAbstractFsClient.html</anchorfile>
      <anchor>a496cb809f9a75949ddfb9ce5c400dfdf</anchor>
      <arglist>(const string &amp;path, int type)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>deleteNode</name>
      <anchorfile>classWsAbstractFsClient.html</anchorfile>
      <anchor>ad29c005e58d7a1881cb4e77987ee4155</anchor>
      <arglist>(const string &amp;path)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>renameNode</name>
      <anchorfile>classWsAbstractFsClient.html</anchorfile>
      <anchor>ab9dd2c89eb4f57efe87a25b95d78bbfe</anchor>
      <arglist>(const string &amp;path, const string &amp;newPath)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isAdministrator</name>
      <anchorfile>classWsAbstractFsClient.html</anchorfile>
      <anchor>aa4699b93273ca4466afadc5b944cf27f</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isEditor</name>
      <anchorfile>classWsAbstractFsClient.html</anchorfile>
      <anchor>ada5a57e9059061f9fb055ae0534b9f7b</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::vector&lt; std::string &gt;</type>
      <name>getTemplatesList</name>
      <anchorfile>classWsAbstractFsClient.html</anchorfile>
      <anchor>a5944d30a78e9d424c8e22073296f7915</anchor>
      <arglist>(const std::string &amp;path)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsAbstractMonitor</name>
    <filename>classWsAbstractMonitor.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual</type>
      <name>~WsAbstractMonitor</name>
      <anchorfile>classWsAbstractMonitor.html</anchorfile>
      <anchor>a37d318ffe9fe6041e390b94b7718a26a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual boost::thread *</type>
      <name>start</name>
      <anchorfile>classWsAbstractMonitor.html</anchorfile>
      <anchor>abf0987d81929eeb7baade6ac9a60a1b4</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsAbstractNode</name>
    <filename>classWsAbstractNode.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>ResourceType</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>abf5e00f77c7bf13a6664b1871af25bfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Icones</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>abf5e00f77c7bf13a6664b1871af25bfaababd580539f936e9f37b58f46056800e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Images</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>abf5e00f77c7bf13a6664b1871af25bfaa059c96ccc45a99a550e67484b5b2d3d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Templates</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>abf5e00f77c7bf13a6664b1871af25bfaaf5b2f0d00da32f9a88a504749909546f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WsAbstractNode</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>a090ce028ba15ac07aff9df1b3b71e8fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const path &amp;</type>
      <name>getPath</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>a195b7a3ad7edfb0c5b343865f4297e2b</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const path &amp;</type>
      <name>getFullPath</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>a6e5eb9957e6858c37866d826fafed1ed</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual string</type>
      <name>getName</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>ae4ae4d099c700a5dc2ff2609bb5337e1</anchor>
      <arglist>(const bool noExt=false)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const string</type>
      <name>getDisplayName</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>a159a8933e97a65e38888d4db9491926c</anchor>
      <arglist>(const bool noExt=false)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>addChildDirectory</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>aef4b0bb3381be70dcc8b28635162e217</anchor>
      <arglist>(NodePtr f)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>addChildFile</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>a5ba7e9c09dc8e52e18bd1624683b1ca2</anchor>
      <arglist>(NodePtr f)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>addChildNode</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>ab7400daf37e99878a2f6976f06350009</anchor>
      <arglist>(NodePtr f)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setParent</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>ada8d480f01e4ee0e5fbdf15c2706d0fc</anchor>
      <arglist>(NodePtr n)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NodePtr</type>
      <name>getParent</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>a25e456c3ecb9e4bd276ba368fa848bd0</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const vector&lt; NodePtr &gt;</type>
      <name>getFiles</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>a67acc7e13a1dd7f462bdb49999627099</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const vector&lt; NodePtr &gt;</type>
      <name>getDirectories</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>aff83b943225f7bae57e07ed3e6dc0d9e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const vector&lt; NodePtr &gt;</type>
      <name>getAll</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>ab739543a9df9281008416a6874338d52</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NodePtr</type>
      <name>getNodeByName</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>a0c42e8014ac98819ff31fb42b180c3c6</anchor>
      <arglist>(const std::string &amp;name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>getDisplayInMenu</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>a2a85fc106c26e441354199e101b6f62f</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setProperties</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>a1e15df97b11bd40d56deef203e9cc1e1</anchor>
      <arglist>(NodePropertiesPtr properties)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NodePropertiesPtr</type>
      <name>getProperties</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>ae98bfc09ad803393db89d076293e4af5</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>getProperty</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>a23b224711f16a83643f0ba05456bc64b</anchor>
      <arglist>(const std::string &amp;section, const std::string &amp;id, const std::string &amp;def, bool recurse=false)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sort</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>a06684a9369659e7d5da56dc3d0e2fc32</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isAllowed</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>a5df537913321c4e189757a77223726af</anchor>
      <arglist>(const std::set&lt; string &gt; &amp;gids)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isDirectory</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>a5ab0d00fffbc8b8e7e1f8f0043f47441</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isRegularFile</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>a4c8cdad69fa78a139f615cf346e7ce27</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const time_t &amp;</type>
      <name>getModifyDate</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>a807e3fafc60bdbcf63ef86fa8413c41a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const time_t &amp;</type>
      <name>getCreateDate</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>adad5a25d2b087c9b2df31940ae7be3cd</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setCreateDate</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>a170529433adfb1ee27c57fa4f9e3adfe</anchor>
      <arglist>(const time_t &amp;t)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setModifyDate</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>afada32faa86d6dd5a2ae80a2de0da402</anchor>
      <arglist>(const time_t &amp;t)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setSize</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>ad687c6c2e8f2527a148e5bc0950f8a8e</anchor>
      <arglist>(const uintmax_t &amp;size)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const uintmax_t</type>
      <name>getSize</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>a7692cbe0e860e1b907f26aabb4ceb5b7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NodePtr</type>
      <name>eatPath</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>a94af144ae7dbc8305e845e5ff4295df5</anchor>
      <arglist>(const std::string &amp;path)=0</arglist>
    </member>
    <member kind="variable">
      <type>WNodePtr</type>
      <name>m_parent</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>a5756cdbf76c22fd068ee0b88ebd7ec4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector&lt; NodePtr &gt;</type>
      <name>m_fileVect</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>aa3a78281a322fa2cdb575401bdb36262</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector&lt; NodePtr &gt;</type>
      <name>m_dirVect</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>aef979667f54e79b524c6a4aa5af92277</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector&lt; NodePtr &gt;</type>
      <name>m_combinedVect</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>adb7b86a0913a84f88f4b03b785c22d7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>path</type>
      <name>m_fullPath</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>ae2ebce523f69dee452b029c2a7262dab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>path</type>
      <name>m_relPath</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>aac8f35be93178e47f70f817aef968c8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uintmax_t</type>
      <name>m_size</name>
      <anchorfile>classWsAbstractNode.html</anchorfile>
      <anchor>a2ff4ca377c12c41a321e4084c577ad8b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsAbstractProperties</name>
    <filename>classWsAbstractProperties.html</filename>
    <member kind="function">
      <type></type>
      <name>WsAbstractProperties</name>
      <anchorfile>classWsAbstractProperties.html</anchorfile>
      <anchor>ac44455f1ee8bee7d11c1b50ca331b5c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>get</name>
      <anchorfile>classWsAbstractProperties.html</anchorfile>
      <anchor>a171c774045cbf50ce87ff06c7825fc99</anchor>
      <arglist>(const std::string &amp;section, const std::string &amp;id, const std::string &amp;def)=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>parse</name>
      <anchorfile>classWsAbstractProperties.html</anchorfile>
      <anchor>a68c2819f1fb03f1c346b4b73836fd7ed</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Json::Value</type>
      <name>m_root</name>
      <anchorfile>classWsAbstractProperties.html</anchorfile>
      <anchor>a7451894b1266612bfb25f465e1e35cf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_parsed</name>
      <anchorfile>classWsAbstractProperties.html</anchorfile>
      <anchor>a59bf6e3a8eeb4ee96eb2737f312aa78c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsAbstractSearch</name>
    <filename>classWsAbstractSearch.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WsAbstractSearch</name>
      <anchorfile>classWsAbstractSearch.html</anchorfile>
      <anchor>a72c5e3412dd233267a8a6078bd9af6bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>load</name>
      <anchorfile>classWsAbstractSearch.html</anchorfile>
      <anchor>a2226d8a421da84de3bd18ede48bc5513</anchor>
      <arglist>(FileSystemTreePtr fs, std::string q)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getSize</name>
      <anchorfile>classWsAbstractSearch.html</anchorfile>
      <anchor>a8f80c40825c42e6a6752ba5953659e2b</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual vector&lt; WsResultItem &gt;</type>
      <name>getResults</name>
      <anchorfile>classWsAbstractSearch.html</anchorfile>
      <anchor>a54a17cce693332ddebfa953b6c09e089</anchor>
      <arglist>(const std::set&lt; std::string &gt; &amp;groups)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsAbstractTree</name>
    <filename>classWsAbstractTree.html</filename>
    <base>WsTreeTraversal</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>build</name>
      <anchorfile>classWsAbstractTree.html</anchorfile>
      <anchor>a71869ab0623353e4dc9c3fd022b8e797</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NodePtr</type>
      <name>getRoot</name>
      <anchorfile>classWsAbstractTree.html</anchorfile>
      <anchor>a32ee6181de33ac7dbf9b4e6e0350ab23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual path &amp;</type>
      <name>getRootPath</name>
      <anchorfile>classWsAbstractTree.html</anchorfile>
      <anchor>aef13db12f22a97fbec1cc05829f874cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>getStamp</name>
      <anchorfile>classWsAbstractTree.html</anchorfile>
      <anchor>a6655f0d32b0d547c0c6b78268897408e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>start</name>
      <anchorfile>classWsTreeTraversal.html</anchorfile>
      <anchor>a79570e0b3c46c6ce45c039c1fd18d42a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WsAbstractTree</name>
      <anchorfile>classWsAbstractTree.html</anchorfile>
      <anchor>a89167704c22b599a72d192badd885406</anchor>
      <arglist>(FileSystemTreePtr fs, const std::set&lt; std::string &gt; &amp;gid, const int &amp;md, const path &amp;rootPath, const std::string &amp;stamp)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WsAbstractTree</name>
      <anchorfile>classWsAbstractTree.html</anchorfile>
      <anchor>a1273a063b0b0f3b49d836fdbfaf09cc4</anchor>
      <arglist>(FileSystemTreePtr fs, const std::set&lt; std::string &gt; &amp;gid, const int &amp;md, const std::set&lt; std::string &gt; &amp;names, const std::set&lt; std::string &gt; &amp;ext, const path &amp;rootPath, const std::string &amp;stamp)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WsAbstractTree</name>
      <anchorfile>classWsAbstractTree.html</anchorfile>
      <anchor>ae6dc6a471e1e7a7d6ea4e774b34608aa</anchor>
      <arglist>(NodePtr n, const std::set&lt; std::string &gt; &amp;gid, const int &amp;md, const path &amp;rootPath, const std::string &amp;stamp)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WsAbstractTree</name>
      <anchorfile>classWsAbstractTree.html</anchorfile>
      <anchor>aef1d0d431230730e9b3ef90c614bee7b</anchor>
      <arglist>(NodePtr n, const std::set&lt; std::string &gt; &amp;gid, const int &amp;md, const std::set&lt; std::string &gt; &amp;names, const std::set&lt; std::string &gt; &amp;ext, const path &amp;rootPath, const std::string &amp;stamp)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~WsAbstractTree</name>
      <anchorfile>classWsAbstractTree.html</anchorfile>
      <anchor>ac2119fce31fbc66b488241d8600d38f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>beginTraverseDir</name>
      <anchorfile>classWsAbstractTree.html</anchorfile>
      <anchor>abdbf1a3fb31ae269faad707560503740</anchor>
      <arglist>(NodePtr n)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>endTraverseDir</name>
      <anchorfile>classWsAbstractTree.html</anchorfile>
      <anchor>a5d046f3b670c3f47467d17d3ee20ba06</anchor>
      <arglist>(NodePtr n)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>traverseFile</name>
      <anchorfile>classWsAbstractTree.html</anchorfile>
      <anchor>a55dd0368c14cb8c7170d8baf7b83fecb</anchor>
      <arglist>(NodePtr n)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NodePtr</type>
      <name>m_root</name>
      <anchorfile>classWsAbstractTree.html</anchorfile>
      <anchor>a2918dfed821a280389a1418bebb31711</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NodePtr</type>
      <name>m_current</name>
      <anchorfile>classWsAbstractTree.html</anchorfile>
      <anchor>a0353cf4e87661077ef56bfaeb18d6435</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; std::string &gt;</type>
      <name>m_gid</name>
      <anchorfile>classWsAbstractTree.html</anchorfile>
      <anchor>a2570eb972a91934c418564e762f457d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; std::string &gt;</type>
      <name>m_exclNames</name>
      <anchorfile>classWsAbstractTree.html</anchorfile>
      <anchor>a8c51efc5a63b804f52e3eeed9309241a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; std::string &gt;</type>
      <name>m_exclExt</name>
      <anchorfile>classWsAbstractTree.html</anchorfile>
      <anchor>ae76bc1a2a003eeebaf08882d6bca8469</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>path</type>
      <name>m_rootPath</name>
      <anchorfile>classWsAbstractTree.html</anchorfile>
      <anchor>ab92130132dcebac75a0f8df68d148c67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_currentDepth</name>
      <anchorfile>classWsAbstractTree.html</anchorfile>
      <anchor>a74af7a8cf2d402919303ff940a4fbdb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_maxDepth</name>
      <anchorfile>classWsAbstractTree.html</anchorfile>
      <anchor>a72eb95a0881bc30dae0e7a10058dbf20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>m_stamp</name>
      <anchorfile>classWsAbstractTree.html</anchorfile>
      <anchor>a17743a2a008d710836900d38288b9f9a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsAccessTree</name>
    <filename>classWsAccessTree.html</filename>
    <base>WsAbstractTree</base>
    <member kind="function">
      <type></type>
      <name>WsAccessTree</name>
      <anchorfile>classWsAccessTree.html</anchorfile>
      <anchor>a79afc2f2e41b8ecc5fbed01703452258</anchor>
      <arglist>(FileSystemTreePtr fs, const std::set&lt; std::string &gt; &amp;gid, const int &amp;md, const path &amp;rootPath, const std::string &amp;stamp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsAccessTree</name>
      <anchorfile>classWsAccessTree.html</anchorfile>
      <anchor>a4409dfb601d89a152306deb950935245</anchor>
      <arglist>(FileSystemTreePtr fs, const std::set&lt; std::string &gt; &amp;gid, const int &amp;md, const std::set&lt; std::string &gt; &amp;names, const std::set&lt; std::string &gt; &amp;ext, const path &amp;rootPath, const std::string &amp;stamp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsAccessTree</name>
      <anchorfile>classWsAccessTree.html</anchorfile>
      <anchor>a982bf6de5a9ac98452a7d6eb366de56c</anchor>
      <arglist>(NodePtr n, const std::set&lt; std::string &gt; &amp;gid, const int &amp;md, const path &amp;rootPath, const std::string &amp;stamp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsAccessTree</name>
      <anchorfile>classWsAccessTree.html</anchorfile>
      <anchor>a7c74b6ec1d5abaf196714dea6c07c3c6</anchor>
      <arglist>(NodePtr n, const std::set&lt; std::string &gt; &amp;gid, const int &amp;md, const std::set&lt; std::string &gt; &amp;names, const std::set&lt; std::string &gt; &amp;ext, const path &amp;rootPath, const std::string &amp;stamp)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsAnchor</name>
    <filename>classWsAnchor.html</filename>
    <base>WsOptions</base>
    <member kind="function">
      <type></type>
      <name>WsAnchor</name>
      <anchorfile>classWsAnchor.html</anchorfile>
      <anchor>a2c578df0fede50744791cdb75563b3e3</anchor>
      <arglist>(Wt::WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsAnchor</name>
      <anchorfile>classWsAnchor.html</anchorfile>
      <anchor>aa8b250f52f652294011bd4940894c8aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>load</name>
      <anchorfile>classWsAnchor.html</anchorfile>
      <anchor>a2eddb9ed5504730ff215725c4642e604</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOption</name>
      <anchorfile>classWsOptions.html</anchorfile>
      <anchor>a1d6f864ac2feb47570c535d1251c2b54</anchor>
      <arglist>(const std::string &amp;attribute, boost::any value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOptions</name>
      <anchorfile>classWsOptions.html</anchorfile>
      <anchor>a323a59ee0cd514354fb6fc049a3de0c6</anchor>
      <arglist>(const std::vector&lt; WsOption &gt; &amp;vOptions)</arglist>
    </member>
    <member kind="function">
      <type>const boost::any &amp;</type>
      <name>option</name>
      <anchorfile>classWsOptions.html</anchorfile>
      <anchor>a422a60389226ee00d7e631e33e187a1f</anchor>
      <arglist>(const std::string &amp;attribute) const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; WsOption &gt; &amp;</type>
      <name>options</name>
      <anchorfile>classWsOptions.html</anchorfile>
      <anchor>ab06d33752bb750f78a3c177a00b0df2c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>outOptions</name>
      <anchorfile>classWsOptions.html</anchorfile>
      <anchor>adc4c4fdf38c2d3e9675c1bb9713860e5</anchor>
      <arglist>(const std::string message)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsApplication</name>
    <filename>classWsApplication.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>doPathChanged</name>
      <anchorfile>classWsApplication.html</anchorfile>
      <anchor>a7711df944987d727e7bed0ce8e77d5b6</anchor>
      <arglist>(std::string newPath)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>doEndDialogLogon</name>
      <anchorfile>classWsApplication.html</anchorfile>
      <anchor>af7dc5a57f0d2c6c8665448eff58b1ec6</anchor>
      <arglist>(std::string sUid, std::string pPassword)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>googleAnalyticsLogger</name>
      <anchorfile>classWsApplication.html</anchorfile>
      <anchor>a2504fe4f61fba29422692c75f558ce12</anchor>
      <arglist>(std::string newPath)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsApplication</name>
      <anchorfile>classWsApplication.html</anchorfile>
      <anchor>a29ac18bb68852e810b83a2c4a07fc076</anchor>
      <arglist>(const Wt::WEnvironment &amp;env)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsApplication</name>
      <anchorfile>classWsApplication.html</anchorfile>
      <anchor>a0ba3aaaeb4240d3284193660b551c92a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hideImages</name>
      <anchorfile>classWsApplication.html</anchorfile>
      <anchor>a24ad15b01738c01946ef7013fc5484ab</anchor>
      <arglist>(bool bHide=true)</arglist>
    </member>
    <member kind="function">
      <type>WsUser *</type>
      <name>wsUser</name>
      <anchorfile>classWsApplication.html</anchorfile>
      <anchor>a475b1a622e0e1b0ff31a677621c4157f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WsModulesLoader &amp;</type>
      <name>WsModules</name>
      <anchorfile>classWsApplication.html</anchorfile>
      <anchor>aa751632837b55b08d1d9557eb15cb52a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTemplate</name>
      <anchorfile>classWsApplication.html</anchorfile>
      <anchor>a956434c65f71c50316accd225f8a6eba</anchor>
      <arglist>(const std::string &amp;sPage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContent</name>
      <anchorfile>classWsApplication.html</anchorfile>
      <anchor>acecaa3204ea409d31db3c76ac4377fd8</anchor>
      <arglist>(WsContent *pContent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContentButtonsBar</name>
      <anchorfile>classWsApplication.html</anchorfile>
      <anchor>a4a3001a594da57b15677b1fce823672f</anchor>
      <arglist>(WsContentButtonsBar *pButtonsBar)</arglist>
    </member>
    <member kind="function">
      <type>WsContentButtonsBar *</type>
      <name>contentButtonsBar</name>
      <anchorfile>classWsApplication.html</anchorfile>
      <anchor>a986654b8bffba63e49011ead31ccf738</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>homePage</name>
      <anchorfile>classWsApplication.html</anchorfile>
      <anchor>a07e8c0cc50cb37d84db8fe55dccc9ea5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WsApplication *</type>
      <name>wsInstance</name>
      <anchorfile>classWsApplication.html</anchorfile>
      <anchor>a285ae98ebb97586280ead2c75a09ed3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WsUser *</type>
      <name>m_pUser</name>
      <anchorfile>classWsApplication.html</anchorfile>
      <anchor>a10b3700f330614082ed2175f08c08192</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WsContentButtonsBar *</type>
      <name>m_pButtonsBar</name>
      <anchorfile>classWsApplication.html</anchorfile>
      <anchor>a8ff7f1d114365f211829c8e93a66be3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WsContent *</type>
      <name>m_pContent</name>
      <anchorfile>classWsApplication.html</anchorfile>
      <anchor>abb6bcbdf08b55cda2a70150e037abb71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WWidget *</type>
      <name>m_pImages</name>
      <anchorfile>classWsApplication.html</anchorfile>
      <anchor>aaaa6b1068d2653bb2ef5aaa0f6999fb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WsModulesLoader</type>
      <name>m_ml</name>
      <anchorfile>classWsApplication.html</anchorfile>
      <anchor>a14f359b879460c887667dfff50d21094</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_sHomePage</name>
      <anchorfile>classWsApplication.html</anchorfile>
      <anchor>a36b8ad42c71fc9fa2cb3c6db5090befc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_sTemplate</name>
      <anchorfile>classWsApplication.html</anchorfile>
      <anchor>afb751c1137187cf5c0538339d14ca4ad</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsArrayDeserializer</name>
    <filename>classWsArrayDeserializer.html</filename>
    <member kind="function">
      <type></type>
      <name>WsArrayDeserializer</name>
      <anchorfile>classWsArrayDeserializer.html</anchorfile>
      <anchor>a31b0adf6c7ed67006cbc8a494aa23605</anchor>
      <arglist>(const std::string &amp;json)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>deserialize</name>
      <anchorfile>classWsArrayDeserializer.html</anchorfile>
      <anchor>af240237903e750f0346f6dbb8a621772</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::set&lt; std::string &gt;</type>
      <name>getContents</name>
      <anchorfile>classWsArrayDeserializer.html</anchorfile>
      <anchor>a0414e453f89e621d9a1e7d3cbd273b83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>parse</name>
      <anchorfile>classWsArrayDeserializer.html</anchorfile>
      <anchor>ac28bc5444ada08159c8326f9a7735b47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_json</name>
      <anchorfile>classWsArrayDeserializer.html</anchorfile>
      <anchor>a672c0dd1a7b2399a2db013f536c91760</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Json::Reader</type>
      <name>m_reader</name>
      <anchorfile>classWsArrayDeserializer.html</anchorfile>
      <anchor>a3589322489f0d83d40728504f18cce99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Json::Value</type>
      <name>m_root</name>
      <anchorfile>classWsArrayDeserializer.html</anchorfile>
      <anchor>a4d7f434dae2eccfb58dc7dd26489697b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; std::string &gt;</type>
      <name>m_contents</name>
      <anchorfile>classWsArrayDeserializer.html</anchorfile>
      <anchor>a0798fef640695a34d0a60dbc4de9b147</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsArraySerializer</name>
    <filename>classWsArraySerializer.html</filename>
    <member kind="function">
      <type></type>
      <name>WsArraySerializer</name>
      <anchorfile>classWsArraySerializer.html</anchorfile>
      <anchor>aba92c7da95c4e4daf8d7c17bbd0d861d</anchor>
      <arglist>(std::set&lt; std::string &gt; &amp;vect)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>serialize</name>
      <anchorfile>classWsArraySerializer.html</anchorfile>
      <anchor>a9f2f03d99aec0c683de9ada828c76d2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>getSerializedForm</name>
      <anchorfile>classWsArraySerializer.html</anchorfile>
      <anchor>ac1ca46b920a6a7393a0dabba81647e24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; std::string &gt;</type>
      <name>m_array</name>
      <anchorfile>classWsArraySerializer.html</anchorfile>
      <anchor>a60586728b111b5f0fe2102c8419812b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Json::Value</type>
      <name>m_root</name>
      <anchorfile>classWsArraySerializer.html</anchorfile>
      <anchor>affe092d8fa0514cbf580e7180f6c9c01</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsAuthenticator</name>
    <filename>classWsAuthenticator.html</filename>
    <member kind="function">
      <type></type>
      <name>WsAuthenticator</name>
      <anchorfile>classWsAuthenticator.html</anchorfile>
      <anchor>abaf1f97c70e95f70cddaebb18649ffdc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsAuthenticator</name>
      <anchorfile>classWsAuthenticator.html</anchorfile>
      <anchor>ae4ae918958b753ce6230b515ee262f25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>authentify</name>
      <anchorfile>classWsAuthenticator.html</anchorfile>
      <anchor>a7ec1a8a40cece9633815c464abdfe125</anchor>
      <arglist>(const std::string &amp;uid, const std::string &amp;pass=&quot;&quot;, const std::string &amp;ip=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getUid</name>
      <anchorfile>classWsAuthenticator.html</anchorfile>
      <anchor>a664f538d9b56c3acab26751202d57770</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getFirstName</name>
      <anchorfile>classWsAuthenticator.html</anchorfile>
      <anchor>ae5fd81dfc6a89be3ffed07b320ebb67a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getSurname</name>
      <anchorfile>classWsAuthenticator.html</anchorfile>
      <anchor>a09985952ce54e40278c1b441c58812bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getEmail</name>
      <anchorfile>classWsAuthenticator.html</anchorfile>
      <anchor>a65ce0eca03619d85582582ef2ca6ab08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; std::string &gt;</type>
      <name>getUserGroups</name>
      <anchorfile>classWsAuthenticator.html</anchorfile>
      <anchor>a8885a806546abcefd8b1638c46ff4b65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; std::string &gt;</type>
      <name>getAllGroups</name>
      <anchorfile>classWsAuthenticator.html</anchorfile>
      <anchor>ad31b96f15500b160cb30f8e44abb68a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>loadModule</name>
      <anchorfile>classWsAuthenticator.html</anchorfile>
      <anchor>adbfcbfd83b40246411506678835d46bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WsAbstractAuth *</type>
      <name>m_auth</name>
      <anchorfile>classWsAuthenticator.html</anchorfile>
      <anchor>a3569c0d6b998de4a42c3259cd58b5b69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_uid</name>
      <anchorfile>classWsAuthenticator.html</anchorfile>
      <anchor>a501e2a70653b4a322ff7ca1aca5b7902</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_pass</name>
      <anchorfile>classWsAuthenticator.html</anchorfile>
      <anchor>a01ea128ac98ef640885e1e23d4553754</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_ip</name>
      <anchorfile>classWsAuthenticator.html</anchorfile>
      <anchor>a3d3003d6bdae268d753f4be11cb3c256</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsBanners</name>
    <filename>classWsBanners.html</filename>
    <base>WsOptions</base>
    <member kind="slot">
      <type>void</type>
      <name>doPathChanged</name>
      <anchorfile>classWsBanners.html</anchorfile>
      <anchor>a78660b1f68c212ab28696709a0b091f8</anchor>
      <arglist>(std::string newPath)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsBanners</name>
      <anchorfile>classWsBanners.html</anchorfile>
      <anchor>a3ed677ac352cb4be8f7bca881029fd32</anchor>
      <arglist>(Wt::WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classWsBanners.html</anchorfile>
      <anchor>a7266b37e6fffed081ac2c5da2b00a7fd</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsBasicAuth</name>
    <filename>classWsBasicAuth.html</filename>
    <base>WsAbstractAuth</base>
    <member kind="function">
      <type></type>
      <name>WsBasicAuth</name>
      <anchorfile>classWsBasicAuth.html</anchorfile>
      <anchor>a9982b5b271c3693ab5b6528f1317ddda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>authentify</name>
      <anchorfile>classWsBasicAuth.html</anchorfile>
      <anchor>a2c3b5b1f9ee46c2764c1b20cf77087db</anchor>
      <arglist>(const std::string &amp;uid, const std::string &amp;pass=&quot;&quot;, const std::string &amp;ip=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getUid</name>
      <anchorfile>classWsBasicAuth.html</anchorfile>
      <anchor>a00899891236071a6cfc0b7681c4b870a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getFirstName</name>
      <anchorfile>classWsBasicAuth.html</anchorfile>
      <anchor>a6d02b75cad049b8feddfe079958fd747</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getSurname</name>
      <anchorfile>classWsBasicAuth.html</anchorfile>
      <anchor>a7b52c1cb6ea03b1d0448bdc3a09a25b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getEmail</name>
      <anchorfile>classWsBasicAuth.html</anchorfile>
      <anchor>a86c931522dc7e27ce776bf7cbdf273f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; std::string &gt;</type>
      <name>getUserGroups</name>
      <anchorfile>classWsBasicAuth.html</anchorfile>
      <anchor>a4d0aefbe474a2f850ef9b8aa4951f4a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; std::string &gt;</type>
      <name>getAllGroups</name>
      <anchorfile>classWsBasicAuth.html</anchorfile>
      <anchor>aa8ee22dc69e4030018abc36e352bd5e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>ipValid</name>
      <anchorfile>classWsBasicAuth.html</anchorfile>
      <anchor>a21a36e5140a4642d94307aa647c01ff0</anchor>
      <arglist>(std::string ip)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_uid</name>
      <anchorfile>classWsBasicAuth.html</anchorfile>
      <anchor>a15bf8c2ece220850d371b43797cb8c47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_name</name>
      <anchorfile>classWsBasicAuth.html</anchorfile>
      <anchor>a71fc9f646ab35276fe5a2e441471a7a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_surname</name>
      <anchorfile>classWsBasicAuth.html</anchorfile>
      <anchor>a9120bb2a365382e706d2da2f05e96c14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_email</name>
      <anchorfile>classWsBasicAuth.html</anchorfile>
      <anchor>aa839878d91122cf2c7b552873db96896</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_dn</name>
      <anchorfile>classWsBasicAuth.html</anchorfile>
      <anchor>a063accf84680dbdfe01d4e0f2731f812</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_ip</name>
      <anchorfile>classWsBasicAuth.html</anchorfile>
      <anchor>a01d6f58434f5613a9e108a591153b7ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; std::string &gt;</type>
      <name>m_groups</name>
      <anchorfile>classWsBasicAuth.html</anchorfile>
      <anchor>ab24a383c518f63f1a7cdadc5bbb1fce1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; std::string &gt;</type>
      <name>m_allGroups</name>
      <anchorfile>classWsBasicAuth.html</anchorfile>
      <anchor>a63d971d478e02d26309f76a33569003a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WsGlobalProperties *</type>
      <name>m_properties</name>
      <anchorfile>classWsBasicAuth.html</anchorfile>
      <anchor>adb6e8e63e48bcf1fdcad70e046bf11f0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsBottomBanner</name>
    <filename>classWsBottomBanner.html</filename>
    <member kind="function">
      <type></type>
      <name>WsBottomBanner</name>
      <anchorfile>classWsBottomBanner.html</anchorfile>
      <anchor>a4f7a50f78d6d3831616665c310b64892</anchor>
      <arglist>(const std::string &amp;rText, Wt::WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsBottomBanner</name>
      <anchorfile>classWsBottomBanner.html</anchorfile>
      <anchor>a25b3804ac19e29f04b813d62e5823ce3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>text</name>
      <anchorfile>classWsBottomBanner.html</anchorfile>
      <anchor>abde5cbe5ac4400f9dca917c02b2d6480</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWsBottomBanner.html</anchorfile>
      <anchor>af85bee95ae9c95cde029c0b2c4d7e78a</anchor>
      <arglist>(const std::string &amp;rText)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WText *</type>
      <name>m_pWText</name>
      <anchorfile>classWsBottomBanner.html</anchorfile>
      <anchor>a28ee432edbd535e339619af1e00d4fa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_pString</name>
      <anchorfile>classWsBottomBanner.html</anchorfile>
      <anchor>aaa077015631f42602303112d43f9c0f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_bDebug</name>
      <anchorfile>classWsBottomBanner.html</anchorfile>
      <anchor>a26a2d8fb3740a5f26d3b84cb33566f9a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsBreadCrumb</name>
    <filename>classWsBreadCrumb.html</filename>
    <base>WsOptions</base>
    <class kind="class">WsBreadCrumb::breadCrump</class>
    <member kind="slot">
      <type>void</type>
      <name>doPathChanged</name>
      <anchorfile>classWsBreadCrumb.html</anchorfile>
      <anchor>a27179c829b5d016b6857c5ed334898c4</anchor>
      <arglist>(std::string newPath)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>onBreadCrumbSelected</name>
      <anchorfile>classWsBreadCrumb.html</anchorfile>
      <anchor>ab21f83f967debeebf6673e7fc53aa82e</anchor>
      <arglist>(Wt::WMenuItem *pMenuItem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsBreadCrumb</name>
      <anchorfile>classWsBreadCrumb.html</anchorfile>
      <anchor>ab1e8080dcd170f4f1ba3b319448a5697</anchor>
      <arglist>(Wt::WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsBreadCrumb</name>
      <anchorfile>classWsBreadCrumb.html</anchorfile>
      <anchor>a95731404623fdb03bbba423f38bdf366</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>load</name>
      <anchorfile>classWsBreadCrumb.html</anchorfile>
      <anchor>a10d96a8bc94bc5707c5d363975f66169</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDebugging</name>
      <anchorfile>classWsBreadCrumb.html</anchorfile>
      <anchor>a89397bef8f9d2ef949371eb8738cdcd6</anchor>
      <arglist>(bool bDebug)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; breadCrump &gt;</type>
      <name>m_vBreadCrumb</name>
      <anchorfile>classWsBreadCrumb.html</anchorfile>
      <anchor>a348cb89e710fd9ec228e2ed248404075</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WMenu *</type>
      <name>m_pMenu</name>
      <anchorfile>classWsBreadCrumb.html</anchorfile>
      <anchor>a61b8a2137273b5c33faf471ef9d17618</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_bDebug</name>
      <anchorfile>classWsBreadCrumb.html</anchorfile>
      <anchor>ab7dd1fcaa0b35111357ecf03ac00b288</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsBreadCrumb::breadCrump</name>
    <filename>classWsBreadCrumb_1_1breadCrump.html</filename>
    <member kind="function">
      <type></type>
      <name>breadCrump</name>
      <anchorfile>classWsBreadCrumb_1_1breadCrump.html</anchorfile>
      <anchor>afc97caa55f91552bdb092753e963b27b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~breadCrump</name>
      <anchorfile>classWsBreadCrumb_1_1breadCrump.html</anchorfile>
      <anchor>a3eb9f9c81f741d932ed5024e38fdd14d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>title</name>
      <anchorfile>classWsBreadCrumb_1_1breadCrump.html</anchorfile>
      <anchor>a79cf9958be1dd795f3d383ec446e50ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>path</name>
      <anchorfile>classWsBreadCrumb_1_1breadCrump.html</anchorfile>
      <anchor>aade1be43a097ca669507e25e7f2c8edd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NodePtr</type>
      <name>node</name>
      <anchorfile>classWsBreadCrumb_1_1breadCrump.html</anchorfile>
      <anchor>a37f1ad4c2f9ce0af837235b52255d35c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsCompressor</name>
    <filename>classWsCompressor.html</filename>
    <member kind="function">
      <type>long</type>
      <name>compress</name>
      <anchorfile>classWsCompressor.html</anchorfile>
      <anchor>a92eaa36679d39358fd25beaa23dcc2d2</anchor>
      <arglist>(const std::string &amp;data, char **compressedData)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsConfimEmail</name>
    <filename>classWsConfimEmail.html</filename>
    <member kind="function">
      <type></type>
      <name>WsConfimEmail</name>
      <anchorfile>classWsConfimEmail.html</anchorfile>
      <anchor>a9679fa7b9b234bd0712f39055de527cf</anchor>
      <arglist>(const std::string &amp;token, WContainerWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsConfimEmail</name>
      <anchorfile>classWsConfimEmail.html</anchorfile>
      <anchor>a30f02cee35f867fe0a76951e64a84b79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>dbo::Session</type>
      <name>session_</name>
      <anchorfile>classWsConfimEmail.html</anchorfile>
      <anchor>a9c07d85c7fdafc2ebc466f10a0658834</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>dbo::backend::Sqlite3 *</type>
      <name>sqlite3_</name>
      <anchorfile>classWsConfimEmail.html</anchorfile>
      <anchor>ab0ed06b29a78334ff9895b92bb1e4753</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsContent</name>
    <filename>classWsContent.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>doEditPage</name>
      <anchorfile>classWsContent.html</anchorfile>
      <anchor>a8d25739d437e26b889ecee21f2ca04ab</anchor>
      <arglist>(std::string path)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>doSearch</name>
      <anchorfile>classWsContent.html</anchorfile>
      <anchor>ac8409aaafe6fefd36a23919f1557486c</anchor>
      <arglist>(Wt::WString sSearch)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>selectWidget</name>
      <anchorfile>classWsContent.html</anchorfile>
      <anchor>a57e7eeccf6063920de166fec4bd779a0</anchor>
      <arglist>(std::string path)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>doSiteMapItemSelected</name>
      <anchorfile>classWsContent.html</anchorfile>
      <anchor>a34e1150d718cc684be95101547425f45</anchor>
      <arglist>(gdWFileView::signalType sigType, std::string selectedPath)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsContent</name>
      <anchorfile>classWsContent.html</anchorfile>
      <anchor>a675c10723c88749918d8f18b0486d1cc</anchor>
      <arglist>(Wt::WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsContent</name>
      <anchorfile>classWsContent.html</anchorfile>
      <anchor>a79baf5ce8c43a1098c1fff743b3d3c0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clear</name>
      <anchorfile>classWsContent.html</anchorfile>
      <anchor>a76963d6e8fdb93f841cd04bf48002db5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classWsContent.html</anchorfile>
      <anchor>adc2d3162219318d97e722c49790002cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildSiteMap</name>
      <anchorfile>classWsContent.html</anchorfile>
      <anchor>a51fdd1ccf00687481ce07b17a77c0566</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>siteMapChanged</name>
      <anchorfile>classWsContent.html</anchorfile>
      <anchor>a9b87a01e43a06e77fd5e8225b27d019e</anchor>
      <arglist>(std::string newPath)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildFileUpload</name>
      <anchorfile>classWsContent.html</anchorfile>
      <anchor>a343bc840d9771ff6275ddfe15b757118</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPath</name>
      <anchorfile>classWsContent.html</anchorfile>
      <anchor>a07dc0f8e3f6a2aca0afef16679183469</anchor>
      <arglist>(std::string newPath)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>viewDirectory</name>
      <anchorfile>classWsContent.html</anchorfile>
      <anchor>ac6b7e65584572e46daf473493bd690ef</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_searchPath</name>
      <anchorfile>classWsContent.html</anchorfile>
      <anchor>ae84452ed1d8d7c199fa7a1b3354e2ef5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_bLogContent</name>
      <anchorfile>classWsContent.html</anchorfile>
      <anchor>af38e157c5a7febf48186b74c4194dcd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_bAllowHtmlRendering</name>
      <anchorfile>classWsContent.html</anchorfile>
      <anchor>a5184b39e9749507658b61a7d6e54c14f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WsSiteMapView *</type>
      <name>m_pSiteMapView</name>
      <anchorfile>classWsContent.html</anchorfile>
      <anchor>a200104096c965cca8c570afb9500d6e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_sDocumentRoot</name>
      <anchorfile>classWsContent.html</anchorfile>
      <anchor>aab3890fe5c36e13dd1a8d4f5638bcecc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_httpDocumentRoot</name>
      <anchorfile>classWsContent.html</anchorfile>
      <anchor>afcef2e3896b51cecb31524241716e2f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_sRelativeDocumentRoot</name>
      <anchorfile>classWsContent.html</anchorfile>
      <anchor>aeaaf38280d8fa0805c5d6b4d135fc6cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>gdWForm *</type>
      <name>m_curWForm</name>
      <anchorfile>classWsContent.html</anchorfile>
      <anchor>a23da40f9496a7b4b79db5738ecc971c0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsContentButtonsBar</name>
    <filename>classWsContentButtonsBar.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>doMenuEditPage</name>
      <anchorfile>classWsContentButtonsBar.html</anchorfile>
      <anchor>a7e72ba71519afdd47d6518c8e10232dd</anchor>
      <arglist>(gdToolbarItem *pTbItem, Wt::WMouseEvent ev)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>doFolderNew</name>
      <anchorfile>classWsContentButtonsBar.html</anchorfile>
      <anchor>a688a3c524a325f6b3494fa98cd7ddf2f</anchor>
      <arglist>(gdToolbarItem *pTbItem, Wt::WMouseEvent ev)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>doFileNew</name>
      <anchorfile>classWsContentButtonsBar.html</anchorfile>
      <anchor>a3f7ef9610dc4d76fb5f19196cc5b8460</anchor>
      <arglist>(gdToolbarItem *pTbItem, Wt::WMouseEvent ev)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>doDeleteNode</name>
      <anchorfile>classWsContentButtonsBar.html</anchorfile>
      <anchor>abfa43219d3073aa69b88f442175621f6</anchor>
      <arglist>(gdToolbarItem *pTbItem, Wt::WMouseEvent ev)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>doMBoxRespons</name>
      <anchorfile>classWsContentButtonsBar.html</anchorfile>
      <anchor>affed801d5e16adbcfe9731caf537a912</anchor>
      <arglist>(Wt::WMessageBox *pBox)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>doFileUpload</name>
      <anchorfile>classWsContentButtonsBar.html</anchorfile>
      <anchor>a38a2c881a61e510f3ba797119dcba5bc</anchor>
      <arglist>(gdToolbarItem *pTbItem, Wt::WMouseEvent ev)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>doFolderNameChanged</name>
      <anchorfile>classWsContentButtonsBar.html</anchorfile>
      <anchor>a2962542a66963831bac16714aeb4efc3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>doFileNameChanged</name>
      <anchorfile>classWsContentButtonsBar.html</anchorfile>
      <anchor>ad18d5641969f7d6cde4fa1a5eed8930d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>doFolderEnterPressed</name>
      <anchorfile>classWsContentButtonsBar.html</anchorfile>
      <anchor>a72e107033d436c0bf20bbc5a9f265b4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>doFileEnterPressed</name>
      <anchorfile>classWsContentButtonsBar.html</anchorfile>
      <anchor>aa1295947b748d2fdd772e14137d469d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>doEndFolderNew</name>
      <anchorfile>classWsContentButtonsBar.html</anchorfile>
      <anchor>a450398f1e5bfd6d66e692c78e65d4967</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>doEndFileNew</name>
      <anchorfile>classWsContentButtonsBar.html</anchorfile>
      <anchor>abafde425ea9854f6d5261c23f726a9a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsContentButtonsBar</name>
      <anchorfile>classWsContentButtonsBar.html</anchorfile>
      <anchor>aefe1e0ae6a699cba3452772eb243414d</anchor>
      <arglist>(Wt::WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsContentButtonsBar</name>
      <anchorfile>classWsContentButtonsBar.html</anchorfile>
      <anchor>a7f9230fc489aa3c69368f5ffc4b8dbb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WDialog *</type>
      <name>m_pDialog</name>
      <anchorfile>classWsContentButtonsBar.html</anchorfile>
      <anchor>ab5842b39d35b2240fc32171b98e19024</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WLineEdit *</type>
      <name>m_pLE_Name</name>
      <anchorfile>classWsContentButtonsBar.html</anchorfile>
      <anchor>a41aad467f2e8acf4c5a0a28a0ebf4a11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WPushButton *</type>
      <name>m_pButOk</name>
      <anchorfile>classWsContentButtonsBar.html</anchorfile>
      <anchor>aeefb4a0b9e2462f58030281ac8452a77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_bDebug</name>
      <anchorfile>classWsContentButtonsBar.html</anchorfile>
      <anchor>a09e20005a30fcf08034339f7cf871d42</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsCrashLogger</name>
    <filename>classWsCrashLogger.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>handleSignal</name>
      <anchorfile>classWsCrashLogger.html</anchorfile>
      <anchor>a6a2202fbef01b5f048f8bf102d528685</anchor>
      <arglist>(int signum)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>printStackTrace</name>
      <anchorfile>classWsCrashLogger.html</anchorfile>
      <anchor>ad4a588b50af2af9e14facefeb6a940c9</anchor>
      <arglist>(FILE *out=stderr, unsigned int maxFrames=63)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsDecompressor</name>
    <filename>classWsDecompressor.html</filename>
    <member kind="function">
      <type>long</type>
      <name>decompress</name>
      <anchorfile>classWsDecompressor.html</anchorfile>
      <anchor>a9e416710113e7f86207ebb894fef628c</anchor>
      <arglist>(const char *data, size_t size, std::string &amp;uncompressedData)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsDirectoryCrawler</name>
    <filename>classWsDirectoryCrawler.html</filename>
    <member kind="function">
      <type></type>
      <name>WsDirectoryCrawler</name>
      <anchorfile>classWsDirectoryCrawler.html</anchorfile>
      <anchor>a35ebeb9a0f570261573431e1bc86bdc0</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual</type>
      <name>~WsDirectoryCrawler</name>
      <anchorfile>classWsDirectoryCrawler.html</anchorfile>
      <anchor>a49701e8fda54a3fcf4b17a87c8a3f4c2</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>start</name>
      <anchorfile>classWsDirectoryCrawler.html</anchorfile>
      <anchor>ad01923bf17c2e8b4e5aaebfa9d159436</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual int</type>
      <name>applyFile</name>
      <anchorfile>classWsDirectoryCrawler.html</anchorfile>
      <anchor>a4f9f0884c2aed4abb4c2c9287a6f3c64</anchor>
      <arglist>(const boost::filesystem::path &amp;p)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual int</type>
      <name>applyDirectory</name>
      <anchorfile>classWsDirectoryCrawler.html</anchorfile>
      <anchor>a8affd4a4f930e25d4472f5bc40fa1575</anchor>
      <arglist>(const boost::filesystem::path &amp;p)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>beginChild</name>
      <anchorfile>classWsDirectoryCrawler.html</anchorfile>
      <anchor>afea0e27c93ea4f11f13b9b75c78aa0df</anchor>
      <arglist>(const boost::filesystem::path &amp;p)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>endChild</name>
      <anchorfile>classWsDirectoryCrawler.html</anchorfile>
      <anchor>ad0701c64a63095413d4afe3b261e14d0</anchor>
      <arglist>(const boost::filesystem::path &amp;p)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>m_p</name>
      <anchorfile>classWsDirectoryCrawler.html</anchorfile>
      <anchor>a51c3689928608fb7a10a7c2a04510127</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_isLoaded</name>
      <anchorfile>classWsDirectoryCrawler.html</anchorfile>
      <anchor>a9256660667c96fe8fef28781a7d09129</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>browse</name>
      <anchorfile>classWsDirectoryCrawler.html</anchorfile>
      <anchor>a6af71994b2645d374d654882c0fec63c</anchor>
      <arglist>(const boost::filesystem::path &amp;p)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsDirectoryItem</name>
    <filename>classWsDirectoryItem.html</filename>
    <member kind="function">
      <type></type>
      <name>WsDirectoryItem</name>
      <anchorfile>classWsDirectoryItem.html</anchorfile>
      <anchor>a4deaff64c10d4fdb31cf1d13dd38dbe7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsDirectoryItem</name>
      <anchorfile>classWsDirectoryItem.html</anchorfile>
      <anchor>a1bb2c19701299fcbacd8c3e887c9de1a</anchor>
      <arglist>(const Wt::WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNode</name>
      <anchorfile>classWsDirectoryItem.html</anchorfile>
      <anchor>adce1cbac8483beb3b44281a1c3fa471e</anchor>
      <arglist>(NodePtr pNode)</arglist>
    </member>
    <member kind="function">
      <type>NodePtr</type>
      <name>node</name>
      <anchorfile>classWsDirectoryItem.html</anchorfile>
      <anchor>a8e13ad8ec9d6d6646b12ee6d5ec32e67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>NodePtr</type>
      <name>m_node</name>
      <anchorfile>classWsDirectoryItem.html</anchorfile>
      <anchor>a11e5cdf37a59662b99e8239331f0db3b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsDirectoryView2</name>
    <filename>classWsDirectoryView2.html</filename>
    <base>WsOptions</base>
    <member kind="slot">
      <type>void</type>
      <name>onViewSelectionChanged</name>
      <anchorfile>classWsDirectoryView2.html</anchorfile>
      <anchor>a436dee28e0ef9c8ac2ee06b14d833c18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsDirectoryView2</name>
      <anchorfile>classWsDirectoryView2.html</anchorfile>
      <anchor>a49063d0310372ba508314a3572bfbb51</anchor>
      <arglist>(Wt::WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsDirectoryView2</name>
      <anchorfile>classWsDirectoryView2.html</anchorfile>
      <anchor>aa2e4669fe6c1d37c8bbebba75b6489f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>load</name>
      <anchorfile>classWsDirectoryView2.html</anchorfile>
      <anchor>a91f34cfd73842c53672d8cfecd17c938</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsDirNode</name>
    <filename>classWsDirNode.html</filename>
    <base>WsNode</base>
    <member kind="function">
      <type></type>
      <name>WsDirNode</name>
      <anchorfile>classWsDirNode.html</anchorfile>
      <anchor>ac5f0953c88ac13713c03d6e0a688c3b8</anchor>
      <arglist>(const path &amp;fullPath, const path &amp;rootPath)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsDirNode</name>
      <anchorfile>classWsDirNode.html</anchorfile>
      <anchor>a85c8cece20d0f2fdbfc78286162f43b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsDirNode</name>
      <anchorfile>classWsDirNode.html</anchorfile>
      <anchor>af114c653fbcc1e53365b753126ecde23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAllowed</name>
      <anchorfile>classWsDirNode.html</anchorfile>
      <anchor>af5e89c1528ed47e0c0ceac9a8bbd5f40</anchor>
      <arglist>(const std::set&lt; string &gt; &amp;gids)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getDisplayInParent</name>
      <anchorfile>classWsDirNode.html</anchorfile>
      <anchor>a82742f2bf4c6005121a0077531a7cf16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>set&lt; string &gt;</type>
      <name>getGroups</name>
      <anchorfile>classWsDirNode.html</anchorfile>
      <anchor>a9989f1d986fbdadd2ae6884dfb141706</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>getResource</name>
      <anchorfile>classWsDirNode.html</anchorfile>
      <anchor>a6105ee801a6101675ffed2890fda105a</anchor>
      <arglist>(ResourceType t, bool recurse=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setResources</name>
      <anchorfile>classWsDirNode.html</anchorfile>
      <anchor>a0391f9fb0d944a79167eaf26bb73de64</anchor>
      <arglist>(WsNodeResources *resources)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDirectory</name>
      <anchorfile>classWsDirNode.html</anchorfile>
      <anchor>a3cc9f2fc74d6e714e9e147d47884251d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRegularFile</name>
      <anchorfile>classWsDirNode.html</anchorfile>
      <anchor>a89817f2e23197bda505fc6ed286d7b5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const uintmax_t</type>
      <name>getSize</name>
      <anchorfile>classWsDirNode.html</anchorfile>
      <anchor>a12f07b83caad1317857d0ab7ad542b02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const path &amp;</type>
      <name>getPath</name>
      <anchorfile>classWsNode.html</anchorfile>
      <anchor>a29b827ddab4ddba9db66d15845a3cb05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const path &amp;</type>
      <name>getFullPath</name>
      <anchorfile>classWsNode.html</anchorfile>
      <anchor>ac20d61d8b158a44f3c8f146b27a1f99d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>getName</name>
      <anchorfile>classWsNode.html</anchorfile>
      <anchor>a69661d9fb311dad63c2cb874155f6fcd</anchor>
      <arglist>(const bool noExt=false)</arglist>
    </member>
    <member kind="function">
      <type>const string</type>
      <name>getDisplayName</name>
      <anchorfile>classWsNode.html</anchorfile>
      <anchor>a839f66ae093084be4c7113df29e1e946</anchor>
      <arglist>(const bool noExt=false)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addChildDirectory</name>
      <anchorfile>classWsNode.html</anchorfile>
      <anchor>a5e30c4b7576c3d197a4b74eba06487f2</anchor>
      <arglist>(NodePtr f)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addChildFile</name>
      <anchorfile>classWsNode.html</anchorfile>
      <anchor>af4cdbe1743dfb0e980c734bac42e10cc</anchor>
      <arglist>(NodePtr f)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addChildNode</name>
      <anchorfile>classWsNode.html</anchorfile>
      <anchor>a191e4d71d33248831d0bc03afefbb94e</anchor>
      <arglist>(NodePtr f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParent</name>
      <anchorfile>classWsNode.html</anchorfile>
      <anchor>a2d177c2a39b92ad66b12dc489843512a</anchor>
      <arglist>(NodePtr n)</arglist>
    </member>
    <member kind="function">
      <type>NodePtr</type>
      <name>getParent</name>
      <anchorfile>classWsNode.html</anchorfile>
      <anchor>a14383a3ec000f807c796b43c844c4839</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const vector&lt; NodePtr &gt;</type>
      <name>getFiles</name>
      <anchorfile>classWsNode.html</anchorfile>
      <anchor>a8c88896099156d818745853bcff04b6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const vector&lt; NodePtr &gt;</type>
      <name>getDirectories</name>
      <anchorfile>classWsNode.html</anchorfile>
      <anchor>ae00d43b9ce0e9a0594279e8a0acdf88d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const vector&lt; NodePtr &gt;</type>
      <name>getAll</name>
      <anchorfile>classWsNode.html</anchorfile>
      <anchor>ae108b80ed1982c902f5324f41f2ccadc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NodePtr</type>
      <name>getNodeByName</name>
      <anchorfile>classWsNode.html</anchorfile>
      <anchor>abef2caa435aaedc2556936a031fa5a5c</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getDisplayInMenu</name>
      <anchorfile>classWsNode.html</anchorfile>
      <anchor>aa15fc612ec820298c07295b08fa9e8b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>classWsNode.html</anchorfile>
      <anchor>af494456642f65ee98e379fd7c967ccb9</anchor>
      <arglist>(NodePropertiesPtr properties)</arglist>
    </member>
    <member kind="function">
      <type>NodePropertiesPtr</type>
      <name>getProperties</name>
      <anchorfile>classWsNode.html</anchorfile>
      <anchor>a263f4af2306fab257a7b4a88e72de7dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getProperty</name>
      <anchorfile>classWsNode.html</anchorfile>
      <anchor>af6decf1365e61fbe5ef93e5c25c5db69</anchor>
      <arglist>(const std::string &amp;section, const std::string &amp;id, const std::string &amp;def, bool recurse=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sort</name>
      <anchorfile>classWsNode.html</anchorfile>
      <anchor>a68151d8d1aefb6041f9b395a2be8749d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const time_t &amp;</type>
      <name>getModifyDate</name>
      <anchorfile>classWsNode.html</anchorfile>
      <anchor>ae53ad1014a1894247661652ecfb0d25d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const time_t &amp;</type>
      <name>getCreateDate</name>
      <anchorfile>classWsNode.html</anchorfile>
      <anchor>a32fd197d64c15d1b35671c664d813b64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCreateDate</name>
      <anchorfile>classWsNode.html</anchorfile>
      <anchor>a74e321aa6d70ff7fabc9c02222e7e02e</anchor>
      <arglist>(const time_t &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModifyDate</name>
      <anchorfile>classWsNode.html</anchorfile>
      <anchor>a1ffd963f578a892f07948187220982b9</anchor>
      <arglist>(const time_t &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSize</name>
      <anchorfile>classWsNode.html</anchorfile>
      <anchor>acb1a9d8338b81a2d189b5ae64fb7f20d</anchor>
      <arglist>(const uintmax_t &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>NodePtr</type>
      <name>eatPath</name>
      <anchorfile>classWsNode.html</anchorfile>
      <anchor>a3983d118f47279df77ff1d7bd07ac5fc</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NodePropertiesPtr</type>
      <name>m_properties</name>
      <anchorfile>classWsNode.html</anchorfile>
      <anchor>a414f72155210629e17c40415783a8cf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>time_t</type>
      <name>m_createTime</name>
      <anchorfile>classWsNode.html</anchorfile>
      <anchor>a8ca6256e0e7adb1787de26c7ea785c23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>time_t</type>
      <name>m_modifyTime</name>
      <anchorfile>classWsNode.html</anchorfile>
      <anchor>a19cd9fd52e1f31329f5c2a37333c478c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>boost::mutex *</type>
      <name>m_mutexSort</name>
      <anchorfile>classWsNode.html</anchorfile>
      <anchor>a642eca80947b5466f9f8760e9f650f42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WsNodeResources *</type>
      <name>m_resources</name>
      <anchorfile>classWsDirNode.html</anchorfile>
      <anchor>a98ae723427685df135256d447774e690</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsEditorWidget</name>
    <filename>classWsEditorWidget.html</filename>
    <member kind="function">
      <type></type>
      <name>WsEditorWidget</name>
      <anchorfile>classWsEditorWidget.html</anchorfile>
      <anchor>a00e5777874be65046d13b5d749520f89</anchor>
      <arglist>(Wt::WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsEditorWidget</name>
      <anchorfile>classWsEditorWidget.html</anchorfile>
      <anchor>acd511b6cf8c93c261fd8226ea25182a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>load</name>
      <anchorfile>classWsEditorWidget.html</anchorfile>
      <anchor>a3c4501070a7bfd691e2925ae57054c80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>saveEditor</name>
      <anchorfile>classWsEditorWidget.html</anchorfile>
      <anchor>a432ace080ad9c61d5e9ebbd0483310dd</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsFileNode</name>
    <filename>classWsFileNode.html</filename>
    <base>WsNode</base>
    <member kind="function">
      <type></type>
      <name>WsFileNode</name>
      <anchorfile>classWsFileNode.html</anchorfile>
      <anchor>ad6437ad459469a19453bff59a8264d30</anchor>
      <arglist>(const path &amp;fullPath, const path &amp;rootPath)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsFileNode</name>
      <anchorfile>classWsFileNode.html</anchorfile>
      <anchor>a18b17739a24877b78655fb4e22250aae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAllowed</name>
      <anchorfile>classWsFileNode.html</anchorfile>
      <anchor>a2d537f860c1493af4a25f66cd94eb9a7</anchor>
      <arglist>(const std::set&lt; string &gt; &amp;gids)</arglist>
    </member>
    <member kind="function">
      <type>const set&lt; string &gt;</type>
      <name>getGroups</name>
      <anchorfile>classWsFileNode.html</anchorfile>
      <anchor>a39bcbc8098ffeacec26ee2c02306de3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getDisplayInMenu</name>
      <anchorfile>classWsFileNode.html</anchorfile>
      <anchor>a34f1a95207a361a5fc3fa961c1f1ed17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const string</type>
      <name>getPublishDate</name>
      <anchorfile>classWsFileNode.html</anchorfile>
      <anchor>acf1f5d2db13f65937df7e70a8ded2ca1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const string</type>
      <name>getAuthor</name>
      <anchorfile>classWsFileNode.html</anchorfile>
      <anchor>a6c971a6b7faef76424b9a377f73cebd5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const uintmax_t</type>
      <name>getSize</name>
      <anchorfile>classWsFileNode.html</anchorfile>
      <anchor>a3aa549a875d677d9cc87f018c7d2e5b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDirectory</name>
      <anchorfile>classWsFileNode.html</anchorfile>
      <anchor>a638d0e26636dc637ac36d0fb77c0aa02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRegularFile</name>
      <anchorfile>classWsFileNode.html</anchorfile>
      <anchor>a229bbc656dd00bc2ea4f2788e11b8276</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsFileResource</name>
    <filename>classWsFileResource.html</filename>
    <member kind="function">
      <type></type>
      <name>WsFileResource</name>
      <anchorfile>classWsFileResource.html</anchorfile>
      <anchor>a900d1313a5edb50e4321999c199595f2</anchor>
      <arglist>(const std::string &amp;strFile, Wt::WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteAfterProcessed</name>
      <anchorfile>classWsFileResource.html</anchorfile>
      <anchor>a10fe5dc0cec9d3f71d063c4e68b5f08a</anchor>
      <arglist>(bool bDelete)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleRequest</name>
      <anchorfile>classWsFileResource.html</anchorfile>
      <anchor>ad47e88f1cc8fd9278cfe3843a58cedcb</anchor>
      <arglist>(const Wt::Http::Request &amp;request, Wt::Http::Response &amp;response)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_bDelete</name>
      <anchorfile>classWsFileResource.html</anchorfile>
      <anchor>ad3d254fabcc9dd85daeb729bcfe9627e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const std::string</type>
      <name>m_strFile</name>
      <anchorfile>classWsFileResource.html</anchorfile>
      <anchor>ab4739ef3f9c01f7caefcdcfbeb62d56b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsFileSystemTree</name>
    <filename>classWsFileSystemTree.html</filename>
    <base>WsDirectoryCrawler</base>
    <member kind="function">
      <type></type>
      <name>WsFileSystemTree</name>
      <anchorfile>classWsFileSystemTree.html</anchorfile>
      <anchor>a486814c8c8ab07136275190b306adfa0</anchor>
      <arglist>(const std::string &amp;p, bool m=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsFileSystemTree</name>
      <anchorfile>classWsFileSystemTree.html</anchorfile>
      <anchor>ad21055bc78b67da1b7c041021badec98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>start</name>
      <anchorfile>classWsFileSystemTree.html</anchorfile>
      <anchor>a138ae8389984fa317fcf3e7f1d234344</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NodePtr</type>
      <name>getRoot</name>
      <anchorfile>classWsFileSystemTree.html</anchorfile>
      <anchor>ab4f82db3e37ab6f1470858ad5d503dbe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NodePtr</type>
      <name>eatPath</name>
      <anchorfile>classWsFileSystemTree.html</anchorfile>
      <anchor>a088061f17d04025fe345614e8e10da77</anchor>
      <arglist>(const std::string &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getUseCount</name>
      <anchorfile>classWsFileSystemTree.html</anchorfile>
      <anchor>a87f680579bde4a0102207d36b4a19c70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>incrementUseCount</name>
      <anchorfile>classWsFileSystemTree.html</anchorfile>
      <anchor>adf084357de3f6ba722e65585ff3c9e16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>decrementUseCount</name>
      <anchorfile>classWsFileSystemTree.html</anchorfile>
      <anchor>a8c8e944ab0354b1a257d912712fd8bde</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const boost::filesystem::path &amp;</type>
      <name>getRootPath</name>
      <anchorfile>classWsFileSystemTree.html</anchorfile>
      <anchor>a59e02252453c72138be5fb3ba7d1d69a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; boost::filesystem::path &gt; &amp;</type>
      <name>getMonitorPaths</name>
      <anchorfile>classWsFileSystemTree.html</anchorfile>
      <anchor>a707feea4d28d208a0def9d62f8dfd7e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getStamp</name>
      <anchorfile>classWsFileSystemTree.html</anchorfile>
      <anchor>a9af5e194c5109b4e90faafa1a2ea1c2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>insertNode</name>
      <anchorfile>classWsFileSystemTree.html</anchorfile>
      <anchor>adf79e63d2ca484853128a4f364ad7407</anchor>
      <arglist>(NodePtr newNode)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>applyFile</name>
      <anchorfile>classWsFileSystemTree.html</anchorfile>
      <anchor>aaa17d6e70043492d57dacd565b921166</anchor>
      <arglist>(const boost::filesystem::path &amp;filePath)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>applyDirectory</name>
      <anchorfile>classWsFileSystemTree.html</anchorfile>
      <anchor>a23a17c87d29829c4ca684b5c08b7ce67</anchor>
      <arglist>(const boost::filesystem::path &amp;dirPath)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>beginChild</name>
      <anchorfile>classWsFileSystemTree.html</anchorfile>
      <anchor>ab37f29b48055b7df843aa3147a4bc48a</anchor>
      <arglist>(const boost::filesystem::path &amp;p)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>endChild</name>
      <anchorfile>classWsFileSystemTree.html</anchorfile>
      <anchor>ab7af76723ce2c2557f8e4303b39a0b4c</anchor>
      <arglist>(const boost::filesystem::path &amp;p)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>createStamp</name>
      <anchorfile>classWsFileSystemTree.html</anchorfile>
      <anchor>aeb48fae404eb47b9752cd8f500620d16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::filesystem::path</type>
      <name>m_rootPath</name>
      <anchorfile>classWsFileSystemTree.html</anchorfile>
      <anchor>a1cea75180fe4cbdc43ee01ea8567f1c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::mutex</type>
      <name>m_lMutex</name>
      <anchorfile>classWsFileSystemTree.html</anchorfile>
      <anchor>a8765f194fbc004dcaf2a150ebbb013c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; boost::filesystem::path &gt;</type>
      <name>m_monitorPaths</name>
      <anchorfile>classWsFileSystemTree.html</anchorfile>
      <anchor>af887cece22ca7a7230e41fdb7f8b0da9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_stamp</name>
      <anchorfile>classWsFileSystemTree.html</anchorfile>
      <anchor>a9ba41e1fcd406d48818e10dc20ab054a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>m_useCount</name>
      <anchorfile>classWsFileSystemTree.html</anchorfile>
      <anchor>a5d28eb8fea66d785d269b35c487ff6a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_monitor</name>
      <anchorfile>classWsFileSystemTree.html</anchorfile>
      <anchor>a254b8649fdf6a68cfc7f065ba9a30383</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>NodePtr</type>
      <name>m_root</name>
      <anchorfile>classWsFileSystemTree.html</anchorfile>
      <anchor>a8e20eb45c8c639700302230177242076</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>NodePtr</type>
      <name>m_current</name>
      <anchorfile>classWsFileSystemTree.html</anchorfile>
      <anchor>ac23515caa9473f7eaae252e781dfc2cd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsFileUpload</name>
    <filename>classWsFileUpload.html</filename>
    <base>WsOptions</base>
    <member kind="slot">
      <type>void</type>
      <name>doUpload</name>
      <anchorfile>classWsFileUpload.html</anchorfile>
      <anchor>a9001c6df2a55a10d4c749ea6ead5cf32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>doFileTooLarge</name>
      <anchorfile>classWsFileUpload.html</anchorfile>
      <anchor>adc1bde0f92c9c68384572584b8a94215</anchor>
      <arglist>(int64_t nSize)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>doUploaded</name>
      <anchorfile>classWsFileUpload.html</anchorfile>
      <anchor>ab75bf5b33323501f9080498afd28df61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsFileUpload</name>
      <anchorfile>classWsFileUpload.html</anchorfile>
      <anchor>ace44242f97f366bbc9e7bbcdf75781ad</anchor>
      <arglist>(Wt::WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsFileUpload</name>
      <anchorfile>classWsFileUpload.html</anchorfile>
      <anchor>a7d000ba63d577aa4f5653dc934c0411a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classWsFileUpload.html</anchorfile>
      <anchor>a20a2ce05544500e5bbfe63d9ee36d113</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WFileUpload *</type>
      <name>m_pFU</name>
      <anchorfile>classWsFileUpload.html</anchorfile>
      <anchor>ae5823c327f5c0cfd74593c8be553648b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsFollowUs</name>
    <filename>classWsFollowUs.html</filename>
    <base>WsOptions</base>
    <member kind="function">
      <type></type>
      <name>WsFollowUs</name>
      <anchorfile>classWsFollowUs.html</anchorfile>
      <anchor>a8c694db2742664f8e073eaa0c80b9141</anchor>
      <arglist>(Wt::WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsFollowUs</name>
      <anchorfile>classWsFollowUs.html</anchorfile>
      <anchor>a8f967a28db0c6c256b2ace50bc560328</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classWsFollowUs.html</anchorfile>
      <anchor>adc6882f91586476ab071a4bc22e4a2e9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsFormConfig</name>
    <filename>classWsFormConfig.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>doCancel</name>
      <anchorfile>classWsFormConfig.html</anchorfile>
      <anchor>af832a4f405a006145e516210da407345</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>doSave</name>
      <anchorfile>classWsFormConfig.html</anchorfile>
      <anchor>a5f7a470daba1f183371e0714d7f7450a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsFormConfig</name>
      <anchorfile>classWsFormConfig.html</anchorfile>
      <anchor>a1266e16328364477844ec5e9e8e16b71</anchor>
      <arglist>(NodePtr pNode, WsModulesLoader &amp;rMl, Wt::WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsFormConfig</name>
      <anchorfile>classWsFormConfig.html</anchorfile>
      <anchor>aa939f37b11ae5539524af0665fca5aaa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEditorFhtml</name>
      <anchorfile>classWsFormConfig.html</anchorfile>
      <anchor>af11d285bd57ed3b7743adc1dc2a475d4</anchor>
      <arglist>(gdFHtmlEditor *pFhtmlEditor)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>NodePtr</type>
      <name>m_pNode</name>
      <anchorfile>classWsFormConfig.html</anchorfile>
      <anchor>ac655f94b26ef50b2e7fe9a6ff6061f56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WsModulesLoader &amp;</type>
      <name>m_ml</name>
      <anchorfile>classWsFormConfig.html</anchorfile>
      <anchor>a9817e50c3c8eb433bf962a26e2c31da3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; WsEditorWidget * &gt;</type>
      <name>m_vEditorWidget</name>
      <anchorfile>classWsFormConfig.html</anchorfile>
      <anchor>aed99be3e759db2124d605b100bf8dc9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WLineEdit *</type>
      <name>m_pName</name>
      <anchorfile>classWsFormConfig.html</anchorfile>
      <anchor>a6b4a7dbd5456a7da806c5440e3ba5889</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WLineEdit *</type>
      <name>m_pInitPage</name>
      <anchorfile>classWsFormConfig.html</anchorfile>
      <anchor>a66db86a97eecf1b3a0b109213008238a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WLineEdit *</type>
      <name>m_pDisplayName</name>
      <anchorfile>classWsFormConfig.html</anchorfile>
      <anchor>abda45abd1784c9713cf4d4d3915abc24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WLineEdit *</type>
      <name>m_pAuthor</name>
      <anchorfile>classWsFormConfig.html</anchorfile>
      <anchor>a674154f34325c84afc76237ecba3622b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WDatePicker *</type>
      <name>m_pDatePicker</name>
      <anchorfile>classWsFormConfig.html</anchorfile>
      <anchor>a381026fa53023d64553cd89458584c25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>gdFHtmlEditor *</type>
      <name>m_pShortDescEditor</name>
      <anchorfile>classWsFormConfig.html</anchorfile>
      <anchor>a59c957580cad0cc2a9fce1fb92cc75f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WTextArea *</type>
      <name>m_pShortDescTextArea</name>
      <anchorfile>classWsFormConfig.html</anchorfile>
      <anchor>a131dff3976f1ee0f97a3325f2514e3c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WCheckBox *</type>
      <name>m_pCBInMenu</name>
      <anchorfile>classWsFormConfig.html</anchorfile>
      <anchor>a600524e0031ad53df99dad43cb2bf9ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WCheckBox *</type>
      <name>m_pCBInView</name>
      <anchorfile>classWsFormConfig.html</anchorfile>
      <anchor>a782c97e1e4ee5cf9cf2f92eb0ffb9f0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WCheckBox *</type>
      <name>m_pCBSort</name>
      <anchorfile>classWsFormConfig.html</anchorfile>
      <anchor>a508b9e76d5a9636510f11b1a5f11fff5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>gdFHtmlEditor *</type>
      <name>m_pFhtmlEditor</name>
      <anchorfile>classWsFormConfig.html</anchorfile>
      <anchor>a62655e66e942f0e54f641c43eee4785e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WLineEdit *</type>
      <name>m_pSortNumber</name>
      <anchorfile>classWsFormConfig.html</anchorfile>
      <anchor>a9b6f51b130d2ef6bb06e6805345f697d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WCheckBox *</type>
      <name>m_pCBInheritRights</name>
      <anchorfile>classWsFormConfig.html</anchorfile>
      <anchor>a6694da2bce1428717e8f6430448d7421</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WComboBox *</type>
      <name>m_pCBBTemplates</name>
      <anchorfile>classWsFormConfig.html</anchorfile>
      <anchor>abdf1c76f0365720cf50787db154d2894</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WDateTime</type>
      <name>m_wDateTime</name>
      <anchorfile>classWsFormConfig.html</anchorfile>
      <anchor>a71899083ae32bfa44b90d015b11a4b50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_sName</name>
      <anchorfile>classWsFormConfig.html</anchorfile>
      <anchor>a676efd3cec076c2481dadc36ec698b4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_sInitPage</name>
      <anchorfile>classWsFormConfig.html</anchorfile>
      <anchor>abdfe1d031317fde4da841671bec13803</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_sDisplayName</name>
      <anchorfile>classWsFormConfig.html</anchorfile>
      <anchor>af7eeb9b7983a58075f36ce067671a796</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_sAuthor</name>
      <anchorfile>classWsFormConfig.html</anchorfile>
      <anchor>a2bfd1e7f4184becfcd8ecc127bfbbf66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_sTemplate</name>
      <anchorfile>classWsFormConfig.html</anchorfile>
      <anchor>acdac87c699fb7ec533526294b0bb8b6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_binMenu</name>
      <anchorfile>classWsFormConfig.html</anchorfile>
      <anchor>af70702292442ab0ee720bd81ee179e26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_binView</name>
      <anchorfile>classWsFormConfig.html</anchorfile>
      <anchor>acdaf0b331db42437cbe68fe8676daa79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_sShortDesc</name>
      <anchorfile>classWsFormConfig.html</anchorfile>
      <anchor>ae684671716ffea3e114edaaf492f11a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_bSort</name>
      <anchorfile>classWsFormConfig.html</anchorfile>
      <anchor>a96eaca276274ebecf6265ab929a3fb19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>long</type>
      <name>m_lSortNumber</name>
      <anchorfile>classWsFormConfig.html</anchorfile>
      <anchor>af9ec867c000c1912082a116e9c3f7ea6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_bInheritRights</name>
      <anchorfile>classWsFormConfig.html</anchorfile>
      <anchor>a5721d49b57d126cbb2f80f388c50c4d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_bUseTextArea</name>
      <anchorfile>classWsFormConfig.html</anchorfile>
      <anchor>a7858017c73fbefa8f6b59c66b95fccfa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsFsDaemon</name>
    <filename>classWsFsDaemon.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>DaemonStatus</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>ace713e1eb1dd49bda971ed95610415c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Success</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>ace713e1eb1dd49bda971ed95610415c0a0a5bf8228891471069fae1f430222dac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Failure</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>ace713e1eb1dd49bda971ed95610415c0abb473755202cf0d122ba53160e8a595c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>NotLogged</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>ace713e1eb1dd49bda971ed95610415c0aacccd5f0dc680685df14c6add559df8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>NoAccess</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>ace713e1eb1dd49bda971ed95610415c0a8734ed92b2b4fc1b7d1cca2082232990</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsFsDaemon</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>af1ee088ebb9f8e6036443e441cad72b4</anchor>
      <arglist>(WsGlobalProperties *props)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsFsDaemon</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>a94f86e364343c0fcf32bbf9234552e15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DaemonStatus</type>
      <name>bind</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>a34377980a52178dfecaa22e08d70b1bb</anchor>
      <arglist>(unsigned int numWorkers=1)</arglist>
    </member>
    <member kind="function">
      <type>DaemonStatus</type>
      <name>workerRoutine</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>a71d274393962b19a440922ed44ca7d26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>DaemonStatus</type>
      <name>send</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>a2f5f8c9bc46cfb1b61f901d89a81de8f</anchor>
      <arglist>(zmq::socket_t &amp;sock, const std::string &amp;s)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>DaemonStatus</type>
      <name>receive</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>a8a18991848a31938af6f4e9151b2090b</anchor>
      <arglist>(zmq::socket_t &amp;sock, std::string &amp;receivedData)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>DaemonStatus</type>
      <name>parse</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>a8939a490844d975a7d1c5bccd72d5915</anchor>
      <arglist>(const std::string &amp;s, Json::Value &amp;root)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>DaemonStatus</type>
      <name>handleRequest</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>aa4b123baf628d0d6b0fcb02cbc1ee271</anchor>
      <arglist>(zmq::socket_t &amp;sock, Json::Value &amp;root)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>DaemonStatus</type>
      <name>handleAuthRequest</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>a1c092db458f83e36e04af5bb3e797231</anchor>
      <arglist>(zmq::socket_t &amp;sock, Json::Value &amp;root)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>DaemonStatus</type>
      <name>handleMenuRequest</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>ac22a6afd304eeb439974a2d13dc6b497</anchor>
      <arglist>(zmq::socket_t &amp;sock, Json::Value &amp;root)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>DaemonStatus</type>
      <name>handleMenuRequestEx</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>a7381f737725341bafd270fa588669465</anchor>
      <arglist>(zmq::socket_t &amp;sock, Json::Value &amp;root)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>DaemonStatus</type>
      <name>handleAccessTreeRequest</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>a1db290cab351b9d45319a9cf5f888061</anchor>
      <arglist>(zmq::socket_t &amp;sock, Json::Value &amp;root)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>DaemonStatus</type>
      <name>handlePermRequest</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>abd6c537ee70a3461a3dca9010c384602</anchor>
      <arglist>(zmq::socket_t &amp;sock, Json::Value &amp;root)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>DaemonStatus</type>
      <name>handlePropRequest</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>a63ca715b09bdbf21f0ebc1ae1cb054cc</anchor>
      <arglist>(zmq::socket_t &amp;sock, Json::Value &amp;root)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>DaemonStatus</type>
      <name>handleAllGroupsRequest</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>a87d48549bb10dd2d3ada77c83a1d697a</anchor>
      <arglist>(zmq::socket_t &amp;sock, Json::Value &amp;root)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>DaemonStatus</type>
      <name>handlePropsRequest</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>af8a19df186fb4f5e63b6858514fab5aa</anchor>
      <arglist>(zmq::socket_t &amp;sock, Json::Value &amp;root)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>DaemonStatus</type>
      <name>handleSearchRequest</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>aa1db4185b295b469b5f4532f6b9d3394</anchor>
      <arglist>(zmq::socket_t &amp;sock, Json::Value &amp;root)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>DaemonStatus</type>
      <name>handleClearCache</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>ab43277c5c9073c27f80a444c2b9948b1</anchor>
      <arglist>(zmq::socket_t &amp;sock, Json::Value &amp;root)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>DaemonStatus</type>
      <name>handleIsAdminRequest</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>ae050dc9bf7b159e6f13c8f59f2a012fb</anchor>
      <arglist>(zmq::socket_t &amp;sock, Json::Value &amp;root)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>DaemonStatus</type>
      <name>handleIsEditorRequest</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>a687bbc741b08b02f7eaffd3f44cc7cfb</anchor>
      <arglist>(zmq::socket_t &amp;sock, Json::Value &amp;root)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>DaemonStatus</type>
      <name>handleSavePropertiesRequest</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>a1304dbb244ac9d95912855a5c26687a5</anchor>
      <arglist>(zmq::socket_t &amp;sock, Json::Value &amp;root)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>DaemonStatus</type>
      <name>handleSavePropertyRequest</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>a21e622b9b8e507cfbed6876d5a8b0f41</anchor>
      <arglist>(zmq::socket_t &amp;sock, Json::Value &amp;root)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>DaemonStatus</type>
      <name>handleCreateNodeRequest</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>a1dc984e5578e2570d94d7e3724042422</anchor>
      <arglist>(zmq::socket_t &amp;sock, Json::Value &amp;root)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>DaemonStatus</type>
      <name>handleRenameNodeRequest</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>ae2fc4e2bca42bd573782a18999a9ade7</anchor>
      <arglist>(zmq::socket_t &amp;sock, Json::Value &amp;root)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>DaemonStatus</type>
      <name>handleDeleteNodeRequest</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>a417efb5aa215eee3dd4ac7532b65f114</anchor>
      <arglist>(zmq::socket_t &amp;sock, Json::Value &amp;root)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>DaemonStatus</type>
      <name>handleRootPathRequest</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>a37d9923bdaf0813c820b4536853a1c9c</anchor>
      <arglist>(zmq::socket_t &amp;sock, Json::Value &amp;root)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>DaemonStatus</type>
      <name>handleGetTreeVersion</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>a300edc90106b5aa53d1fc91397969710</anchor>
      <arglist>(zmq::socket_t &amp;sock, Json::Value &amp;root)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>string</type>
      <name>rawDataToString</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>aea708520af66ea35caf79c2f76999ecd</anchor>
      <arglist>(zmq::message_t &amp;msg)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>isActiveSession</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>a1203c38d45d323c00248e9e1d3b1ea16</anchor>
      <arglist>(const std::string &amp;uid, const std::string &amp;pass, const std::string &amp;ip)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WsGlobalProperties *</type>
      <name>m_conf</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>a8eb477064466a19fe56c9152d47d0f50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_listening</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>ac034a4b002f754558974fafa7232c30f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WsFsTreeOperations *</type>
      <name>m_operation</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>a102470d19700ee8f57323944c573f183</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>map&lt; string, WsUserSession * &gt;</type>
      <name>m_userMap</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>ac79c377b827c376546c914d8e1d7cc03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>set&lt; string &gt;</type>
      <name>m_allGroups</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>a2d99d246eaf141f04959a6eb08d0e1ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_compress</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>ad97f3c8f85e0b8b5d8319d1d498a5aca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WsCompressor *</type>
      <name>m_compressor</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>a723bfd2382cb71bd6420016d56926af6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WsDecompressor *</type>
      <name>m_decompressor</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>a6f4aba7d3bed429d54716aee66a0ea32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>zmq::context_t *</type>
      <name>m_context</name>
      <anchorfile>classWsFsDaemon.html</anchorfile>
      <anchor>a900c24e818e5c8dc68b4362b3de130f0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsFsDaemonClient</name>
    <filename>classWsFsDaemonClient.html</filename>
    <base>WsAbstractFsClient</base>
    <member kind="function">
      <type></type>
      <name>WsFsDaemonClient</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a28341ec0e9342b7862dd14b39be024a8</anchor>
      <arglist>(const std::string &amp;id, const std::string &amp;pass, const std::string &amp;ip)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsFsDaemonClient</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a8dc291ff305dcdc657327aff61297007</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>clearServerCache</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>acc106281f61e3d828f3b13bbbd6f76e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>load</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a00c0033ccd129716dc0caf84aad5d7e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPermissions</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a2939fe00901ec4c14967e76996c899e5</anchor>
      <arglist>(const std::string &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>const WsNodeProperties *</type>
      <name>getProperties</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a3b870d07bd054223559ad12d6e5885b1</anchor>
      <arglist>(const std::string &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getProperty</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a31c264d184b145201fc062707bde9a8d</anchor>
      <arglist>(const std::string &amp;section, const std::string &amp;p, const std::string &amp;prop)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getSurname</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a4408aca6cdc8d34db1e98449c2828219</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getFirstName</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>aa2fc046e99e23e928f59c9c73fda5dbd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getEmail</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a850997b44fcaf6a9c24d6367a0747b2a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>NodePtr</type>
      <name>getMenuRoot</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a53c5a67612c6893da2a300a5b1f1bf60</anchor>
      <arglist>(const bool &amp;forceUpdate=false)</arglist>
    </member>
    <member kind="function">
      <type>NodePtr</type>
      <name>getAccessRoot</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>ac29790ded4328aefc9bc1c4df36361bb</anchor>
      <arglist>(const bool &amp;forceUpdate=false)</arglist>
    </member>
    <member kind="function">
      <type>NodePtr</type>
      <name>getMenuRoot</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a14508eef1511cd2212b4b08cb6ad17ca</anchor>
      <arglist>(const std::set&lt; string &gt; &amp;exclNames, const std::set&lt; string &gt; &amp;exclExti)</arglist>
    </member>
    <member kind="function">
      <type>vector&lt; WsResultItem &gt;</type>
      <name>getSearchResults</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>aa793d36154d294ecb3104d39a3fd2698</anchor>
      <arglist>(const std::string &amp;terms)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; string &gt;</type>
      <name>getAllGroups</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a23ac598707aa7315708ff562b9a09a51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>getRootPath</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a13e75c10dbef7373eafb19a398422df1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>saveProperties</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a4c209c4991e3f6fd34c6c7bbb735febe</anchor>
      <arglist>(WsNodeProperties *props, const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>createNode</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a79c958ee0f5b4c68d4bef7c8668c8c6d</anchor>
      <arglist>(const string &amp;path, int type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>deleteNode</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>abbfea61b4460a75c7b95ffd0b91826d0</anchor>
      <arglist>(const string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>renameNode</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a28c2eef0613c1c9b6be7d933bdc795b4</anchor>
      <arglist>(const string &amp;path, const string &amp;newPath)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>saveProperty</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>ab2a1a27373f0c1dfb7801a037fef9f7b</anchor>
      <arglist>(const std::string &amp;path, const std::string &amp;section, const std::string &amp;attr, const std::string &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEditor</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>ab7dba05baaf03b7a01e0bb5211791631</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAdministrator</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a795701612784d2969d9a53c63977f28f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>getTemplatesList</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>ab817a1a615be3bb21c884f6519784b98</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>authentify</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a6455eae7d6b86ef080e8799bcaa87941</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>send</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a80f2d774d9ee3c2bf0ec9294dbb2c27d</anchor>
      <arglist>(const std::string &amp;message)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>receive</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>af4661a8e5332f6a1f4c84f630302e9eb</anchor>
      <arglist>(std::string &amp;receivedData)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>receiveAuthAnswer</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a00d08d111f383888751ad5664309ca44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>receiveSuccessCode</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a7fcf6b52b636039059f26ccbf506effd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>receivePermissions</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>ad4d1f7d60cb8641ebc55a9ff32fe557a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>receiveBoolean</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a1055ad03b05b29df54d5ad03bf7266dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const std::string</type>
      <name>receiveString</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a847f3a58e3afeb17aed8be7131c10008</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const WsNodeProperties *</type>
      <name>receiveProperties</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a51c7cf8b76963fea9eecf41b77bd376f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const std::string</type>
      <name>receiveProperty</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>aa34b6f77a5da17a6ac8687d400fc6b15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>NodePtr</type>
      <name>receiveMenuItems</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a0b50df7688e0213225d814f43e5a4517</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>NodePtr</type>
      <name>receiveAccessItems</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a293da2fab35e5f26e9cec8663f21db8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>vector&lt; WsResultItem &gt;</type>
      <name>receiveSearchResults</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>ac2fb37cdc3fe98eba12ee3e85a68ea18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::set&lt; string &gt;</type>
      <name>receiveAllGroups</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>ae2a8fb8d6036bc98191728a699c139f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::string</type>
      <name>rawDataToString</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>ad439887502505543006d0b81df68e247</anchor>
      <arglist>(zmq::message_t &amp;msg)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>parse</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>ace51a769fb6f9610bd5ec260a0b7da00</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>threadUpdate</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>abf9525f9a34ac2ba5dc9f9e11769c12a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_uid</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>af25f7d734d00d79cde4cf56d1acfeeff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_pass</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>ab7df89d8421bd194570c1f89c9ea8ae2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_ip</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>abeaaf1d776a37501b04a07562f1f648b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_email</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>ad02e287fd63fadcc23c411a41952706e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_name</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a101b2af1d050287635d304051b014aaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_surname</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>ad01cc73c1a26470861cc84d1bd232716</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_host</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a05319490f41f0b8d52a0ff3ce4028e8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_port</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a8a5446362551cb5ae1882dcbec5df899</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_proto</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a7bcd608b865182b9dbbdaf8ded154f79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WsGlobalProperties *</type>
      <name>m_conf</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a19c2b2d694404dcdd0f6a663d0c81505</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Json::Reader</type>
      <name>m_reader</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a6586dcaf7dc3e83233518e5881a73fef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Json::Value</type>
      <name>m_root</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a3bdb772a918b6b5a371793ef38408ecc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_compress</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>aad62834bd16ae6d2af7823585716a900</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>NodePtr</type>
      <name>m_accessRoot</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>aafeb0c4ddc32913b5a1f1ac0e2173466</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>NodePtr</type>
      <name>m_menuRoot</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a5b2552efb80c11770e22562580739b29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_accessTreeStamp</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a38b43b6fd91687268d4651ad70a755a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_menuTreeStamp</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a3111ff2900a98ccecfd2cea781c8d936</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_rootPath</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>aa87da8704559938d8e1dd18691451cef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>m_isAdmin</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a623d7724fabfa20edb1d070401355a08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>m_isEditor</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>abc0e7989a5171353edfdc0dc96b34966</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_listen</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a759b178c2ea7daef9099bb14a64f5bed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>zmq::socket_t *</type>
      <name>m_sock</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a212448f564515853d3cd92f392f0f536</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WsCompressor *</type>
      <name>m_compressor</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a897eccee38b7beb9f367fbfc188856a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WsDecompressor *</type>
      <name>m_decompressor</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a995a6c0602487a01acb8eeba45cd5b44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::mutex *</type>
      <name>m_sendMutex</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a1c5cf24f80421ad846490cbc2bf1509b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::thread *</type>
      <name>m_updateThread</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a73e17079003bb52535ed0061915f6ce8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static zmq::context_t *</type>
      <name>m_context</name>
      <anchorfile>classWsFsDaemonClient.html</anchorfile>
      <anchor>a907c42357ef58ff3bdced774e3b3c23d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsFsDaemonLoader</name>
    <filename>classWsFsDaemonLoader.html</filename>
    <member kind="function">
      <type></type>
      <name>WsFsDaemonLoader</name>
      <anchorfile>classWsFsDaemonLoader.html</anchorfile>
      <anchor>af186c70e0f449779d217ef5913e33056</anchor>
      <arglist>(WsGlobalProperties *props, bool daemon=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsFsDaemonLoader</name>
      <anchorfile>classWsFsDaemonLoader.html</anchorfile>
      <anchor>a6616269341e92b2e7ed2dc3efee148d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>start</name>
      <anchorfile>classWsFsDaemonLoader.html</anchorfile>
      <anchor>a477c8218c3e662a08c5197c1868abba2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>daemonize</name>
      <anchorfile>classWsFsDaemonLoader.html</anchorfile>
      <anchor>aeda8512251bebf1e045cbeffe1b4b027</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_daemon</name>
      <anchorfile>classWsFsDaemonLoader.html</anchorfile>
      <anchor>a49d8cfa6e85e3338776a9627bd4ea270</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WsGlobalProperties *</type>
      <name>m_props</name>
      <anchorfile>classWsFsDaemonLoader.html</anchorfile>
      <anchor>a1acb7571de53d3d317763e9c2b46108b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WsFsDaemon *</type>
      <name>m_server</name>
      <anchorfile>classWsFsDaemonLoader.html</anchorfile>
      <anchor>a53f5c199038d739b000c2c3e03365f36</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsFsTreeClient</name>
    <filename>classWsFsTreeClient.html</filename>
    <base>WsAbstractFsClient</base>
    <member kind="function">
      <type></type>
      <name>WsFsTreeClient</name>
      <anchorfile>classWsFsTreeClient.html</anchorfile>
      <anchor>a65b3ca3e7ecf9418fba4123446db6787</anchor>
      <arglist>(const std::string &amp;id, const std::string &amp;pass, const std::string &amp;ip)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WsFsTreeClient</name>
      <anchorfile>classWsFsTreeClient.html</anchorfile>
      <anchor>a7a02c8c04769ba76aedd915ba2051ac0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>load</name>
      <anchorfile>classWsFsTreeClient.html</anchorfile>
      <anchor>ad48e03eeafc466635460239bbb1a6735</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPermissions</name>
      <anchorfile>classWsFsTreeClient.html</anchorfile>
      <anchor>a11d5aff74a6d47cce5595fae5bc55d28</anchor>
      <arglist>(const std::string &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>const WsNodeProperties *</type>
      <name>getProperties</name>
      <anchorfile>classWsFsTreeClient.html</anchorfile>
      <anchor>aa73d27c1b13bcdca9a8bba0f60d117a7</anchor>
      <arglist>(const std::string &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getProperty</name>
      <anchorfile>classWsFsTreeClient.html</anchorfile>
      <anchor>a3a89dd5c6215ec63e5d863f3436d2e9b</anchor>
      <arglist>(const std::string &amp;section, const std::string &amp;p, const std::string &amp;prop)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getSurname</name>
      <anchorfile>classWsFsTreeClient.html</anchorfile>
      <anchor>a4d54b637694ca597e36233d73e229a9a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getFirstName</name>
      <anchorfile>classWsFsTreeClient.html</anchorfile>
      <anchor>a2f4cf934c60ef299185c14f47ca98ed4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getEmail</name>
      <anchorfile>classWsFsTreeClient.html</anchorfile>
      <anchor>a409e07625bfee03ad526bbbff8a46ce2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>NodePtr</type>
      <name>getMenuRoot</name>
      <anchorfile>classWsFsTreeClient.html</anchorfile>
      <anchor>addd5156acc9d6c74e8726d808625d80b</anchor>
      <arglist>(const bool &amp;forceUpdate=false)</arglist>
    </member>
    <member kind="function">
      <type>NodePtr</type>
      <name>getAccessRoot</name>
      <anchorfile>classWsFsTreeClient.html</anchorfile>
      <anchor>ab974168380b6d87c30ff30ebfd9296e7</anchor>
      <arglist>(const bool &amp;forceUpdate=false)</arglist>
    </member>
    <member kind="function">
      <type>NodePtr</type>
      <name>getMenuRoot</name>
      <anchorfile>classWsFsTreeClient.html</anchorfile>
      <anchor>a115cae6d5c8a5db38e9cf3165bb8cd75</anchor>
      <arglist>(const std::set&lt; string &gt; &amp;exclNames, const std::set&lt; string &gt; &amp;exclExt)</arglist>
    </member>
    <member kind="function">
      <type>vector&lt; WsResultItem &gt;</type>
      <name>getSearchResults</name>
      <anchorfile>classWsFsTreeClient.html</anchorfile>
      <anchor>adbc9334af886566306b4fa3c0260945a</anchor>
      <arglist>(const std::string &amp;terms)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; string &gt;</type>
      <name>getAllGroups</name>
      <anchorfile>classWsFsTreeClient.html</anchorfile>
      <anchor>acc4f026976a873b5e002043370e9ba75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>getRootPath</name>
      <anchorfile>classWsFsTreeClient.html</anchorfile>
      <anchor>ab2f5a603b1b3eb351c36ecef63f84c2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>saveProperties</name>
      <anchorfile>classWsFsTreeClient.html</anchorfile>
      <anchor>aaa48647e66e6bb94f0b8a4db060334e9</anchor>
      <arglist>(WsNodeProperties *props, const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>createNode</name>
      <anchorfile>classWsFsTreeClient.html</anchorfile>
      <anchor>accc08e2d947384ae2c4382c7db6c52df</anchor>
      <arglist>(const string &amp;path, int type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>deleteNode</name>
      <anchorfile>classWsFsTreeClient.html</anchorfile>
      <anchor>ab79da5f86977374f42352868983de90c</anchor>
      <arglist>(const string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>renameNode</name>
      <anchorfile>classWsFsTreeClient.html</anchorfile>
      <anchor>a4877920d718ea70ab61d6a38436d0b33</anchor>
      <arglist>(const string &amp;path, const string &amp;newPath)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>saveProperty</name>
      <anchorfile>classWsFsTreeClient.html</anchorfile>
      <anchor>a2ff514130d8b13431dbf9ead3e9836e2</anchor>
      <arglist>(const std::string &amp;path, const std::string &amp;section, const std::string &amp;attr, const std::string &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEditor</name>
      <anchorfile>classWsFsTreeClient.html</anchorfile>
      <anchor>ad06166ce9d68e8c0143bfb400dc8012d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAdministrator</name>
      <anchorfile>classWsFsTreeClient.html</anchorfile>
      <anchor>ab415ae11643da6f0e9bfe9ffdd7de22f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>getTemplatesList</name>
      <anchorfile>classWsFsTreeClient.html</anchorfile>
      <anchor>a841b1c5b3082ff0a5fb4fcd0603d9d32</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>authentify</name>
      <anchorfile>classWsFsTreeClient.html</anchorfile>
      <anchor>a09d1b0731dfd55e7e1fad607ff52f948</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; string &gt;</type>
      <name>m_groups</name>
      <anchorfile>classWsFsTreeClient.html</anchorfile>
      <anchor>a05b21e8cd4043e555de996062493386b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_uid</name>
      <anchorfile>classWsFsTreeClient.html</anchorfile>
      <anchor>a06c3e615f01f02dff6f0975d72809e3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_pass</name>
      <anchorfile>classWsFsTreeClient.html</anchorfile>
      <anchor>adf05ca2315f6a5d631dc9b7fcad9d2b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_ip</name>
      <anchorfile>classWsFsTreeClient.html</anchorfile>
      <anchor>a46c87e794164be735795609a5b88f130</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_sn</name>
      <anchorfile>classWsFsTreeClient.html</anchorfile>
      <anchor>a44016724b22af19f636dac3739986771</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_givenName</name>
      <anchorfile>classWsFsTreeClient.html</anchorfile>
      <anchor>af028ed120b39bece8fdc0f45ca0004a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_email</name>
      <anchorfile>classWsFsTreeClient.html</anchorfile>
      <anchor>a0dc7eff2fd518abcceeef821d3f50d24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>NodePtr</type>
      <name>m_menu</name>
      <anchorfile>classWsFsTreeClient.html</anchorfile>
      <anchor>a2bacd12f8b615870f9705f4ae103f18c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>NodePtr</type>
      <name>m_accessTree</name>
      <anchorfile>classWsFsTreeClient.html</anchorfile>
      <anchor>a83bf92b9cefe3f0b207bc7439062eec2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WsGlobalProperties *</type>
      <name>m_conf</name>
      <anchorfile>classWsFsTreeClient.html</anchorfile>
      <anchor>a94d6c73f5ce466691953c7b76a9e7a0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WsFsTreeOperations *</type>
      <name>m_operation</name>
      <anchorfile>classWsFsTreeClient.html</anchorfile>
      <anchor>a97b51d6fed7e46b2cf790be613092338</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsFsTreeConsultation</name>
    <filename>classWsFsTreeConsultation.html</filename>
    <member kind="function">
      <type></type>
      <name>WsFsTreeConsultation</name>
      <anchorfile>classWsFsTreeConsultation.html</anchorfile>
      <anchor>a61144ca27fe7aab48d8a514171f5657c</anchor>
      <arglist>(WsFsTreeUpdater *updater)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPermissions</name>
      <anchorfile>classWsFsTreeConsultation.html</anchorfile>
      <anchor>ab2e2894bdbe81268d28bdaf6968fb094</anchor>
      <arglist>(const std::set&lt; std::string &gt; &amp;groups, const std::string &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>WsNodeProperties *</type>
      <name>getProperties</name>
      <anchorfile>classWsFsTreeConsultation.html</anchorfile>
      <anchor>af7cfea926ffeaf849b9f14f4c2901810</anchor>
      <arglist>(const std::set&lt; std::string &gt; &amp;groups, const std::string &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getProperty</name>
      <anchorfile>classWsFsTreeConsultation.html</anchorfile>
      <anchor>a6da84fdb56ef63981c7e38e2b407cd76</anchor>
      <arglist>(const std::set&lt; std::string &gt; &amp;groups, const std::string &amp;section, const std::string &amp;p, const std::string &amp;prop)</arglist>
    </member>
    <member kind="function">
      <type>WsMenuTree *</type>
      <name>getMenuTree</name>
      <anchorfile>classWsFsTreeConsultation.html</anchorfile>
      <anchor>a3144b7e7da95ac77815f13bdd05b79dc</anchor>
      <arglist>(const std::set&lt; std::string &gt; &amp;groups)</arglist>
    </member>
    <member kind="function">
      <type>WsMenuTree *</type>
      <name>getMenuTree</name>
      <anchorfile>classWsFsTreeConsultation.html</anchorfile>
      <anchor>a213eee955691f80529696c7a4de69a31</anchor>
      <arglist>(const std::set&lt; std::string &gt; &amp;groups, const std::set&lt; string &gt; &amp;exclNames, const std::set&lt; string &gt; &amp;exclExt)</arglist>
    </member>
    <member kind="function">
      <type>WsAccessTree *</type>
      <name>getAccessTree</name>
      <anchorfile>classWsFsTreeConsultation.html</anchorfile>
      <anchor>a9a4084884d008a4998782f014b649089</anchor>
      <arglist>(const std::set&lt; std::string &gt; &amp;groups)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; WsResultItem &gt;</type>
      <name>getSearchResults</name>
      <anchorfile>classWsFsTreeConsultation.html</anchorfile>
      <anchor>a06e483e5d62f2d26ed85d41ef0c5e017</anchor>
      <arglist>(const std::set&lt; std::string &gt; &amp;groups, const std::string &amp;terms)</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>getRootPath</name>
      <anchorfile>classWsFsTreeConsultation.html</anchorfile>
      <anchor>af74cbc88914ad813740a3c19a1f26abe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>getTemplatesList</name>
      <anchorfile>classWsFsTreeConsultation.html</anchorfile>
      <anchor>a166713547ebcb6365f3b7a3a53672fe7</anchor>
      <arglist>(const std::set&lt; std::string &gt; &amp;groups, const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getFsTreeStamp</name>
      <anchorfile>classWsFsTreeConsultation.html</anchorfile>
      <anchor>a32ebfd2213c639c3e7512959cf2dad6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WsFsTreeUpdater *</type>
      <name>m_updater</name>
      <anchorfile>classWsFsTreeConsultation.html</anchorfile>
      <anchor>a0bc2454354528adfafd0420a2373a959</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WsGlobalProperties *</type>
      <name>m_conf</name>
      <anchorfile>classWsFsTreeConsultation.html</anchorfile>
      <anchor>a5e2cb599500a26cfbd0df3b23439fa45</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsFsTreeModification</name>
    <filename>classWsFsTreeModification.html</filename>
    <member kind="function">
      <type></type>
      <name>WsFsTreeModification</name>
      <anchorfile>classWsFsTreeModification.html</anchorfile>
      <anchor>a90aab3aaeb93b0c6eca1b69e71895338</anchor>
      <arglist>(WsFsTreeUpdater *updater)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>saveProperties</name>
      <anchorfile>classWsFsTreeModification.html</anchorfile>
      <anchor>a038794a87f870f8be21cf2d321624c82</anchor>
      <arglist>(const std::set&lt; std::string &gt; &amp;groups, const std::string &amp;json, const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>saveProperty</name>
      <anchorfile>classWsFsTreeModification.html</anchorfile>
      <anchor>ae8bef1c3b0ae0706e7fea6008ba88411</anchor>
      <arglist>(const std::set&lt; std::string &gt; &amp;groups, const std::string &amp;path, const std::string &amp;section, const std::string &amp;attr, const std::string &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>createNode</name>
      <anchorfile>classWsFsTreeModification.html</anchorfile>
      <anchor>a780e42cfbf8e31b09f0155b360cd2f38</anchor>
      <arglist>(const std::set&lt; std::string &gt; &amp;groups, const std::string &amp;uid, const string &amp;path, int type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>deleteNode</name>
      <anchorfile>classWsFsTreeModification.html</anchorfile>
      <anchor>a03ed64bf7c489d4fe6b2d8c9a7b424c3</anchor>
      <arglist>(const std::set&lt; std::string &gt; &amp;groups, const std::string &amp;uid, const string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>renameNode</name>
      <anchorfile>classWsFsTreeModification.html</anchorfile>
      <anchor>a4c6bde414ae6df95ade0670fefd04e21</anchor>
      <arglist>(const std::set&lt; std::string &gt; &amp;groups, const std::string &amp;uid, const string &amp;path, const string &amp;newPath)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAdministrator</name>
      <anchorfile>classWsFsTreeModification.html</anchorfile>
      <anchor>a81103ca8f67763eb8e056d386ef3fe0e</anchor>
      <arglist>(const std::set&lt; std::string &gt; &amp;groups)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEditor</name>
      <anchorfile>classWsFsTreeModification.html</anchorfile>
      <anchor>ab5b756bbd3191636d99167289d608892</anchor>
      <arglist>(const std::set&lt; std::string &gt; &amp;groups)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WsFsTreeUpdater *</type>
      <name>m_updater</name>
      <anchorfile>classWsFsTreeModification.html</anchorfile>
      <anchor>a2732be8b4662e10e408c2965e6176485</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WsGlobalProperties *</type>
      <name>m_conf</name>
      <anchorfile>classWsFsTreeModification.html</anchorfile>
      <anchor>af1065032d6082aea60de19e5e008a13a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsFsTreeOperations</name>
    <filename>classWsFsTreeOperations.html</filename>
    <member kind="function">
      <type></type>
      <name>WsFsTreeOperations</name>
      <anchorfile>classWsFsTreeOperations.html</anchorfile>
      <anchor>af15fc2e4fa11b305f421ac1d3998ea7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPermissions</name>
      <anchorfile>classWsFsTreeOperations.html</anchorfile>
      <anchor>a9dc233f315b1741e764e57adf8e01fbc</anchor>
      <arglist>(const std::set&lt; std::string &gt; &amp;groups, const std::string &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>WsNodeProperties *</type>
      <name>getProperties</name>
      <anchorfile>classWsFsTreeOperations.html</anchorfile>
      <anchor>ae656db5a758f0fcd8b608f9fc9c306b8</anchor>
      <arglist>(const std::set&lt; std::string &gt; &amp;groups, const std::string &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getProperty</name>
      <anchorfile>classWsFsTreeOperations.html</anchorfile>
      <anchor>a0deb8709635d34369519cb39561b2af7</anchor>
      <arglist>(const std::set&lt; std::string &gt; &amp;groups, const std::string &amp;section, const std::string &amp;p, const std::string &amp;prop)</arglist>
    </member>
    <member kind="function">
      <type>WsMenuTree *</type>
      <name>getMenuTree</name>
      <anchorfile>classWsFsTreeOperations.html</anchorfile>
      <anchor>a9e7994b204222ef59816d33f75f8654c</anchor>
      <arglist>(const std::set&lt; std::string &gt; &amp;groups)</arglist>
    </member>
    <member kind="function">
      <type>WsMenuTree *</type>
      <name>getMenuTree</name>
      <anchorfile>classWsFsTreeOperations.html</anchorfile>
      <anchor>a9064112ce99d2e626a43e473b472da4d</anchor>
      <arglist>(const std::set&lt; std::string &gt; &amp;groups, const std::set&lt; string &gt; &amp;exclNames, const std::set&lt; string &gt; &amp;exclExt)</arglist>
    </member>
    <member kind="function">
      <type>WsAccessTree *</type>
      <name>getAccessTree</name>
      <anchorfile>classWsFsTreeOperations.html</anchorfile>
      <anchor>a903ab14320550bc4e8b4deb5db07880a</anchor>
      <arglist>(const std::set&lt; std::string &gt; &amp;groups)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; WsResultItem &gt;</type>
      <name>getSearchResults</name>
      <anchorfile>classWsFsTreeOperations.html</anchorfile>
      <anchor>a67788ada881f3dc19c1819fb54b6f709</anchor>
      <arglist>(const std::set&lt; std::string &gt; &amp;groups, const std::string &amp;terms)</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>getRootPath</name>
      <anchorfile>classWsFsTreeOperations.html</anchorfile>
      <anchor>a107da373fb9bbbbb2a604e833057e3dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>getTemplatesList</name>
      <anchorfile>classWsFsTreeOperations.html</anchorfile>
      <anchor>a3e144b37226da7ac06bb596a1f200588</anchor>
      <arglist>(const std::set&lt; std::string &gt; &amp;groups, const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>saveProperties</name>
      <anchorfile>classWsFsTreeOperations.html</anchorfile>
      <anchor>ae21caec73c1d3b29a4f9444b470c6dcf</anchor>
      <arglist>(const std::set&lt; std::string &gt; &amp;groups, const std::string &amp;json, const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>saveProperty</name>
      <anchorfile>classWsFsTreeOperations.html</anchorfile>
      <anchor>aa3c379be4e57bca043f91000cd4ea62d</anchor>
      <arglist>(const std::set&lt; std::string &gt; &amp;groups, const std::string &amp;path, const std::string &amp;section, const std::string &amp;attr, const std::string &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>createNode</name>
      <anchorfile>classWsFsTreeOperations.html</anchorfile>
      <anchor>a3e8479f822b99adb763ca63bd83aa7e2</anchor>
      <arglist>(const std::set&lt; std::string &gt; &amp;groups, const std::string &amp;uid, const string &amp;path, int type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>deleteNode</name>
      <anchorfile>classWsFsTreeOperations.html</anchorfile>
      <anchor>ac5fcf594f2f6af45f813643debed08f2</anchor>
      <arglist>(const std::set&lt; std::string &gt; &amp;groups, const std::string &amp;uid, const string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>renameNode</name>
      <anchorfile>classWsFsTreeOperations.html</anchorfile>
      <anchor>ada6cb030e447b75249e42a38e38988e1</anchor>
      <arglist>(const std::set&lt; std::string &gt; &amp;groups, const std::string &amp;uid, const string &amp;path, const string &amp;newPath)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAdministrator</name>
      <anchorfile>classWsFsTreeOperations.html</anchorfile>
      <anchor>a7a9e88326b4f6e06e7487596ff868178</anchor>
      <arglist>(const std::set&lt; std::string &gt; &amp;groups)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEditor</name>
      <anchorfile>classWsFsTreeOperations.html</anchorfile>
      <anchor>a5bd31486a40047320fad603506247950</anchor>
      <arglist>(const std::set&lt; std::string &gt; &amp;groups)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>update</name>
      <anchorfile>classWsFsTreeOperations.html</anchorfile>
      <anchor>a3b72493a6b18e67afde289b165f2a9e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getFsTreeStamp</name>
      <anchorfile>classWsFsTreeOperations.html</anchorfile>
      <anchor>a196619c3e32b551b9a0d9261ec20c362</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WsFsTreeUpdater *</type>
      <name>m_updater</name>
      <anchorfile>classWsFsTreeOperations.html</anchorfile>
      <anchor>ab51c110388de9dba4004f60afd629235</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WsFsTreeConsultation *</type>
      <name>m_consultation</name>
      <anchorfile>classWsFsTreeOperations.html</anchorfile>
      <anchor>a303eaaf55babca9048ae100bf62a3279</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WsFsTreeModification *</type>
      <name>m_modification</name>
      <anchorfile>classWsFsTreeOperations.html</anchorfile>
      <anchor>a795ef342991e1aa9e64b69ad3b69f23e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WsGlobalProperties *</type>
      <name>m_conf</name>
      <anchorfile>classWsFsTreeOperations.html</anchorfile>
      <anchor>ab9203efb7ee266c42e036de9c710d45d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsFsTreeUpdater</name>
    <filename>classWsFsTreeUpdater.html</filename>
    <member kind="function">
      <type></type>
      <name>WsFsTreeUpdater</name>
      <anchorfile>classWsFsTreeUpdater.html</anchorfile>
      <anchor>ab0301925dcee9d329adaee581e43a1a3</anchor>
      <arglist>(const std::string &amp;p, unsigned int delay, bool m=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsFsTreeUpdater</name>
      <anchorfile>classWsFsTreeUpdater.html</anchorfile>
      <anchor>a68bb1caf29068a1c256a58ed8e9645aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>update</name>
      <anchorfile>classWsFsTreeUpdater.html</anchorfile>
      <anchor>acfac488f75979736a1994db6d2116d07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FileSystemTreePtr</type>
      <name>getLastTree</name>
      <anchorfile>classWsFsTreeUpdater.html</anchorfile>
      <anchor>a1c2d27324258de0d74fc1424c87fae44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLastVersion</name>
      <anchorfile>classWsFsTreeUpdater.html</anchorfile>
      <anchor>ae65cbbfcdb8386d9557eae0679b53408</anchor>
      <arglist>(FileSystemTreePtr fs)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>startRegularUpdate</name>
      <anchorfile>classWsFsTreeUpdater.html</anchorfile>
      <anchor>ab15fd036c3dfb4791b2c65804ba60f8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>threadUpdate</name>
      <anchorfile>classWsFsTreeUpdater.html</anchorfile>
      <anchor>a57ada059d4948ec14f990fbaa740c491</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_rootPath</name>
      <anchorfile>classWsFsTreeUpdater.html</anchorfile>
      <anchor>ac57341ca891b2b2ed182a5d78277dd43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_isMonitor</name>
      <anchorfile>classWsFsTreeUpdater.html</anchorfile>
      <anchor>a1585d0029378f77375e8a2bc1ce670fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WsAbstractMonitor *</type>
      <name>m_monitor</name>
      <anchorfile>classWsFsTreeUpdater.html</anchorfile>
      <anchor>aaeeba19d1297e84d5812cdaabacaf810</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>m_delay</name>
      <anchorfile>classWsFsTreeUpdater.html</anchorfile>
      <anchor>a8e6d041019ce869d4e16295178fc8dbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>FileSystemTreePtr</type>
      <name>m_fsTree</name>
      <anchorfile>classWsFsTreeUpdater.html</anchorfile>
      <anchor>a1bca74d2fdcb75d75945820e9aa37040</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::mutex</type>
      <name>m_lMutex</name>
      <anchorfile>classWsFsTreeUpdater.html</anchorfile>
      <anchor>a24ab7b817ed20c649109caacec08b8f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::mutex</type>
      <name>m_updateMutex</name>
      <anchorfile>classWsFsTreeUpdater.html</anchorfile>
      <anchor>acc291c316f8d1d5e6ef9d45ea9033222</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_isLoaded</name>
      <anchorfile>classWsFsTreeUpdater.html</anchorfile>
      <anchor>a5371a8f15f1e6cb92d519eacd95a8816</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsFunctionnalities</name>
    <filename>classWsFunctionnalities.html</filename>
    <member kind="function">
      <type></type>
      <name>WsFunctionnalities</name>
      <anchorfile>classWsFunctionnalities.html</anchorfile>
      <anchor>a3869741e9135329765a9ded4cdde09d6</anchor>
      <arglist>(Wt::WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsFunctionnalities</name>
      <anchorfile>classWsFunctionnalities.html</anchorfile>
      <anchor>a0fd34c8a7e6a8397231d1a7e0a6f519e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsGalleria</name>
    <filename>classWsGalleria.html</filename>
    <base>WsOptions</base>
    <member kind="function">
      <type></type>
      <name>WsGalleria</name>
      <anchorfile>classWsGalleria.html</anchorfile>
      <anchor>a36b4cfc26040847752f8690c925ecd90</anchor>
      <arglist>(Wt::WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsGalleria</name>
      <anchorfile>classWsGalleria.html</anchorfile>
      <anchor>a476084d63ebe9cc1c9f101f5d062c1d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>load</name>
      <anchorfile>classWsGalleria.html</anchorfile>
      <anchor>afb7af2e830f2a0a1ec84300bfddd8afe</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsGlobalProperties</name>
    <filename>classWsGlobalProperties.html</filename>
    <base>WsAbstractProperties</base>
    <member kind="function">
      <type>std::string</type>
      <name>get</name>
      <anchorfile>classWsGlobalProperties.html</anchorfile>
      <anchor>abd25ec7a371e434fea667fb9a3467181</anchor>
      <arglist>(const std::string &amp;section, const std::string &amp;id, const std::string &amp;def)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classWsGlobalProperties.html</anchorfile>
      <anchor>a05744290e46544c51de4913977da04d3</anchor>
      <arglist>(const std::string &amp;section, std::string key, std::string value)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getAndReplace</name>
      <anchorfile>classWsGlobalProperties.html</anchorfile>
      <anchor>a5e5eb41451f7fe1998200dd0ea32eb42</anchor>
      <arglist>(const std::string &amp;section, const std::string &amp;id, const std::string &amp;newVal, const std::string &amp;def)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WsGlobalProperties *</type>
      <name>instance</name>
      <anchorfile>classWsGlobalProperties.html</anchorfile>
      <anchor>a16f71d8b7f230d0b2f69bcd9908277e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WsGlobalProperties</name>
      <anchorfile>classWsGlobalProperties.html</anchorfile>
      <anchor>afe6b517bc72699b1e6d8ebab5541135a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static WsGlobalProperties *</type>
      <name>m_instance</name>
      <anchorfile>classWsGlobalProperties.html</anchorfile>
      <anchor>a53e0d3cb2b537c42b26f198ddd9feef8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>wsi2Anchor</name>
    <filename>classwsi2Anchor.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>doClicked</name>
      <anchorfile>classwsi2Anchor.html</anchorfile>
      <anchor>ad580694677eff40754f05a363b7b4e3b</anchor>
      <arglist>(Wt::WMouseEvent mEv)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>wsi2Anchor</name>
      <anchorfile>classwsi2Anchor.html</anchorfile>
      <anchor>a3c590988d48f60774f0bd9e749b15585</anchor>
      <arglist>(const Wt::WLink &amp;link, const Wt::WString &amp;text, Wt::WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setImageIndex</name>
      <anchorfile>classwsi2Anchor.html</anchorfile>
      <anchor>a14bea6117de2a8d9de0c00b864d851fd</anchor>
      <arglist>(int imageIndex)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signal&lt; int &gt; &amp;</type>
      <name>imageSelected</name>
      <anchorfile>classwsi2Anchor.html</anchorfile>
      <anchor>a673da2d1dcc44bdeb6a2b128f741ffbc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::Signal&lt; int &gt;</type>
      <name>m_sigImageSelected</name>
      <anchorfile>classwsi2Anchor.html</anchorfile>
      <anchor>ad61b79dfb3b0704917602efe0bcabe8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>m_nImageIndex</name>
      <anchorfile>classwsi2Anchor.html</anchorfile>
      <anchor>adc25df27008209499a91ed8d988f0c27</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsImage2</name>
    <filename>classWsImage2.html</filename>
  </compound>
  <compound kind="class">
    <name>WsImages2</name>
    <filename>classWsImages2.html</filename>
    <base>WsOptions</base>
    <member kind="slot">
      <type>void</type>
      <name>doTimeout</name>
      <anchorfile>classWsImages2.html</anchorfile>
      <anchor>a9857a340a54c4661daacaa2721ee3638</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>doPathChanged</name>
      <anchorfile>classWsImages2.html</anchorfile>
      <anchor>af8e9dbd06e23e3a36004b3ec056449a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>doImageClicked</name>
      <anchorfile>classWsImages2.html</anchorfile>
      <anchor>ad3e3f6d6ead8ebd1303a945fd39943b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>doCounterClicked</name>
      <anchorfile>classWsImages2.html</anchorfile>
      <anchor>ac9066c5e59e94028a1a3b12e5202e613</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsImages2</name>
      <anchorfile>classWsImages2.html</anchorfile>
      <anchor>ae57dbb9ed190c3f080e27d203ba28ef8</anchor>
      <arglist>(Wt::WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsImages2</name>
      <anchorfile>classWsImages2.html</anchorfile>
      <anchor>adb1b7f01c6de8281560afe5a57b8d46d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>load</name>
      <anchorfile>classWsImages2.html</anchorfile>
      <anchor>a4ac10be38f5e0df1371f2ad786f8f599</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadImage</name>
      <anchorfile>classWsImages2.html</anchorfile>
      <anchor>a36d13eac56aa512ec4c8f4e4460b9a34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>build</name>
      <anchorfile>classWsImages2.html</anchorfile>
      <anchor>a1b189c1da53e948c6b946a78ced327d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classWsImages2.html</anchorfile>
      <anchor>ad2c526773f0ee92fa52cc0dcae85c4be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>text</name>
      <anchorfile>classWsImages2.html</anchorfile>
      <anchor>a12bdf35c1438085fe75a09b48c2dc3d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_bDebug</name>
      <anchorfile>classWsImages2.html</anchorfile>
      <anchor>afa3ab3c2505361d10e669c7f61b057d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_bReactWhenPathChange</name>
      <anchorfile>classWsImages2.html</anchorfile>
      <anchor>a1de04d4f9a75906d6a76b4c356bcba32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>long</type>
      <name>m_lDelay</name>
      <anchorfile>classWsImages2.html</anchorfile>
      <anchor>afcef59723cf7cfcc11999b05042c62eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_bLoaded</name>
      <anchorfile>classWsImages2.html</anchorfile>
      <anchor>abf19cc3675489dba0b70f7f916da42e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>m_sImagesVect</name>
      <anchorfile>classWsImages2.html</anchorfile>
      <anchor>a6ef6ff4842b2d1904430846bcf01df5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>m_sImagesText</name>
      <anchorfile>classWsImages2.html</anchorfile>
      <anchor>a55d94bd16f7a249d7125f2a0b528d19d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>m_sImagesLink</name>
      <anchorfile>classWsImages2.html</anchorfile>
      <anchor>aed356155cd5dcb5722b92f05bc09a608</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>m_sImagesLinkType</name>
      <anchorfile>classWsImages2.html</anchorfile>
      <anchor>abcbbc6d3f4d6fc8cf375d170860d2612</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>m_sImagesTitle</name>
      <anchorfile>classWsImages2.html</anchorfile>
      <anchor>a69d7ee16e71a92d9d029a6beb63e02f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_bOnLoad</name>
      <anchorfile>classWsImages2.html</anchorfile>
      <anchor>a52d3ff0c21db2f761395685f8c9574ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>m_nCurrentImage</name>
      <anchorfile>classWsImages2.html</anchorfile>
      <anchor>a6053b88811f88896b2eb95a990135e38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WTimer *</type>
      <name>m_pTimer</name>
      <anchorfile>classWsImages2.html</anchorfile>
      <anchor>ad6e7850c53c1e923412213209dd758f9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsImagesGallery</name>
    <filename>classWsImagesGallery.html</filename>
    <base>WsOptions</base>
    <member kind="slot">
      <type>void</type>
      <name>doTimeoutThumb</name>
      <anchorfile>classWsImagesGallery.html</anchorfile>
      <anchor>a471f65c913d2a4c2f742b066c2d30555</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>doTimeoutImage</name>
      <anchorfile>classWsImagesGallery.html</anchorfile>
      <anchor>af0f5f814fce617537c29541be8e9338b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>doPrevious</name>
      <anchorfile>classWsImagesGallery.html</anchorfile>
      <anchor>abeddcae92342b68a5fac3e0b814274ef</anchor>
      <arglist>(Wt::WPushButton *pButton)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>doPlay</name>
      <anchorfile>classWsImagesGallery.html</anchorfile>
      <anchor>a44cb27f1e6b3f8e9ea0ab12e98d25e3a</anchor>
      <arglist>(Wt::WPushButton *pButton)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>doNext</name>
      <anchorfile>classWsImagesGallery.html</anchorfile>
      <anchor>ac131debf587180283b78d33c9cdee267</anchor>
      <arglist>(Wt::WPushButton *pButton)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>doThumbClicked</name>
      <anchorfile>classWsImagesGallery.html</anchorfile>
      <anchor>a7a0e676df7c157d0ed6644f9079da498</anchor>
      <arglist>(int nImageId)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsImagesGallery</name>
      <anchorfile>classWsImagesGallery.html</anchorfile>
      <anchor>ad57c6452401afbfccdecc7a35b8b1bc7</anchor>
      <arglist>(Wt::WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsImagesGallery</name>
      <anchorfile>classWsImagesGallery.html</anchorfile>
      <anchor>a11fc140abecaab10cb94f7c65863b8f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classWsImagesGallery.html</anchorfile>
      <anchor>aef002a818c1c226ecf1d62cc524ef2ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildVector</name>
      <anchorfile>classWsImagesGallery.html</anchorfile>
      <anchor>a9450b84a0c036fd19a7d8339aeef3a07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildThumbnails</name>
      <anchorfile>classWsImagesGallery.html</anchorfile>
      <anchor>adf245119824a54c66e7fdfaea4717baf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderButtons</name>
      <anchorfile>classWsImagesGallery.html</anchorfile>
      <anchor>a1c5d29ddde95576caf54c5667dba080a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderThumb</name>
      <anchorfile>classWsImagesGallery.html</anchorfile>
      <anchor>ab06e1482ea18c7df5e9deb7dc50fc03b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderImage</name>
      <anchorfile>classWsImagesGallery.html</anchorfile>
      <anchor>a03e4b3f66b7906dd7f11db29b6f241f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxImages</name>
      <anchorfile>classWsImagesGallery.html</anchorfile>
      <anchor>ac219121cf0de3d933d700323d4462b4d</anchor>
      <arglist>(int nMaxImages)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>m_vImages</name>
      <anchorfile>classWsImagesGallery.html</anchorfile>
      <anchor>aa186d2300e222c7c1f97ebeca4d08af4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Magick::Blob &gt;</type>
      <name>m_vThumbnails</name>
      <anchorfile>classWsImagesGallery.html</anchorfile>
      <anchor>a653d75aa75b2e07c923bfbeff4d616ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>m_vDisplayNames</name>
      <anchorfile>classWsImagesGallery.html</anchorfile>
      <anchor>a97a873d62650320702992a256f31b169</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>m_nStartImage</name>
      <anchorfile>classWsImagesGallery.html</anchorfile>
      <anchor>a5cf0ce5482beeac234557fac47756045</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>m_nMaxImages</name>
      <anchorfile>classWsImagesGallery.html</anchorfile>
      <anchor>a655df830f016763ba91dd51bbb922ee3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>m_nCurrentImage</name>
      <anchorfile>classWsImagesGallery.html</anchorfile>
      <anchor>aec97cb5f0eb980b66c2ea851ac15bf13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WTimer *</type>
      <name>m_pTimerThumb</name>
      <anchorfile>classWsImagesGallery.html</anchorfile>
      <anchor>aed03f73a5054b1a20619f130ad4aff17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WTimer *</type>
      <name>m_pTimerImage</name>
      <anchorfile>classWsImagesGallery.html</anchorfile>
      <anchor>aeb8253470255ba48c7ea13a8b22956c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WsImages2 *</type>
      <name>m_pImages2</name>
      <anchorfile>classWsImagesGallery.html</anchorfile>
      <anchor>ac29fef7f4a777f42bcebe7de9a5c79b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WText *</type>
      <name>m_pImages2Text</name>
      <anchorfile>classWsImagesGallery.html</anchorfile>
      <anchor>ab269f856ee9bbe07de0ff33da76f19db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WContainerWidget *</type>
      <name>m_cwThumb</name>
      <anchorfile>classWsImagesGallery.html</anchorfile>
      <anchor>a18cc949024c322a599568cc1be98bbf6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsLatestNews</name>
    <filename>classWsLatestNews.html</filename>
    <base>WsTreeTraversal</base>
    <member kind="function">
      <type></type>
      <name>WsLatestNews</name>
      <anchorfile>classWsLatestNews.html</anchorfile>
      <anchor>af25d7b8ab0b530614fdb8421b7e8718e</anchor>
      <arglist>(NodePtr mt)</arglist>
    </member>
    <member kind="function">
      <type>vector&lt; NodePtr &gt;</type>
      <name>getLatestNews</name>
      <anchorfile>classWsLatestNews.html</anchorfile>
      <anchor>aba416401db4dd4ff4e73bd3075d2e3a7</anchor>
      <arglist>(int nb)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NodePtr</type>
      <name>m_root</name>
      <anchorfile>classWsTreeTraversal.html</anchorfile>
      <anchor>a2f236a49d8d40799268ace84e2c2b715</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>beginTraverseDir</name>
      <anchorfile>classWsLatestNews.html</anchorfile>
      <anchor>a7cf63d21d87a35eb208a21ab1942e9be</anchor>
      <arglist>(NodePtr n)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>endTraverseDir</name>
      <anchorfile>classWsLatestNews.html</anchorfile>
      <anchor>aa99e02cee23ef58ef2c024d286d93b59</anchor>
      <arglist>(NodePtr n)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>traverseFile</name>
      <anchorfile>classWsLatestNews.html</anchorfile>
      <anchor>a5aa30a93b0d59495d444b86f141e4355</anchor>
      <arglist>(NodePtr n)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; NodePtr &gt;</type>
      <name>m_vect</name>
      <anchorfile>classWsLatestNews.html</anchorfile>
      <anchor>a3176390f1ef6ff9392c2d021158fd13e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>m_maxSize</name>
      <anchorfile>classWsLatestNews.html</anchorfile>
      <anchor>af4a449f83429a97f26f8bc4954caa331</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsLatestNews2</name>
    <filename>classWsLatestNews2.html</filename>
    <base>WsOptions</base>
    <member kind="slot">
      <type>void</type>
      <name>onViewSelectionChanged</name>
      <anchorfile>classWsLatestNews2.html</anchorfile>
      <anchor>a9094876c9ef5fbdebc226fa41974fc66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsLatestNews2</name>
      <anchorfile>classWsLatestNews2.html</anchorfile>
      <anchor>a45a3aaae3617a05d7e2944d99649702b</anchor>
      <arglist>(Wt::WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsLatestNews2</name>
      <anchorfile>classWsLatestNews2.html</anchorfile>
      <anchor>a06705c4c4f3cfd5d8b48f91b7db0958c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classWsLatestNews2.html</anchorfile>
      <anchor>aac7ecdd2d65cf9b3d33c714b8011f2f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTable</name>
      <anchorfile>classWsLatestNews2.html</anchorfile>
      <anchor>a74b891f9a69c74afc4f56598ddab9f87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WTableView *</type>
      <name>m_pTableView</name>
      <anchorfile>classWsLatestNews2.html</anchorfile>
      <anchor>a787d2538e0200527cdb966357e988019</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsLayoutProperties</name>
    <filename>classWsLayoutProperties.html</filename>
    <base>WsAbstractProperties</base>
    <member kind="function">
      <type>std::string</type>
      <name>get</name>
      <anchorfile>classWsLayoutProperties.html</anchorfile>
      <anchor>ad1d00d237529f6e8fdb3ec3b1135b4ba</anchor>
      <arglist>(const std::string &amp;section, const std::string &amp;id, const std::string &amp;def)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WsLayoutProperties *</type>
      <name>instance</name>
      <anchorfile>classWsLayoutProperties.html</anchorfile>
      <anchor>a1467b795cdaf3370f5ad0790901720be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WsLayoutProperties</name>
      <anchorfile>classWsLayoutProperties.html</anchorfile>
      <anchor>a45ec92c0b851148be2526257fe8528dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static WsLayoutProperties *</type>
      <name>m_instance</name>
      <anchorfile>classWsLayoutProperties.html</anchorfile>
      <anchor>ab4cdc0d64c5f3968989d512d9928ce80</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsLdapAuth</name>
    <filename>classWsLdapAuth.html</filename>
    <base>WsAbstractAuth</base>
    <member kind="enumeration">
      <type></type>
      <name>loadStatus</name>
      <anchorfile>classWsLdapAuth.html</anchorfile>
      <anchor>ac63d4dece5d8896a6861b2701fe7afa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>notLoaded</name>
      <anchorfile>classWsLdapAuth.html</anchorfile>
      <anchor>ac63d4dece5d8896a6861b2701fe7afa9a76e1430191da8ef1e572bc0c918bdce5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>loaded</name>
      <anchorfile>classWsLdapAuth.html</anchorfile>
      <anchor>ac63d4dece5d8896a6861b2701fe7afa9a3acfc6e48a67c0b63300375f78db4c38</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>onError</name>
      <anchorfile>classWsLdapAuth.html</anchorfile>
      <anchor>ac63d4dece5d8896a6861b2701fe7afa9ae5400bd6aae1b5ece8cc7efe5dd87b67</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsLdapAuth</name>
      <anchorfile>classWsLdapAuth.html</anchorfile>
      <anchor>a6cd19c4ed36720196189afe2b30ef266</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>authentify</name>
      <anchorfile>classWsLdapAuth.html</anchorfile>
      <anchor>a153527df8c2ef8dc85bfcd44c0800b21</anchor>
      <arglist>(const std::string &amp;uid, const std::string &amp;pass=&quot;&quot;, const std::string &amp;ip=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getUid</name>
      <anchorfile>classWsLdapAuth.html</anchorfile>
      <anchor>ae6a3852ef51dc904a35bb5eb51125ab4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getFirstName</name>
      <anchorfile>classWsLdapAuth.html</anchorfile>
      <anchor>a900687a47ef0eccb3222a41a6f88cb9c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getSurname</name>
      <anchorfile>classWsLdapAuth.html</anchorfile>
      <anchor>a9e1cf24dc80e628e6689914f6fd85524</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getEmail</name>
      <anchorfile>classWsLdapAuth.html</anchorfile>
      <anchor>a354907b6c32fbf4bb3211947eb1e9708</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; std::string &gt;</type>
      <name>getUserGroups</name>
      <anchorfile>classWsLdapAuth.html</anchorfile>
      <anchor>a9f71c81a2246e19fd929f4d8ce542c65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; std::string &gt;</type>
      <name>getAllGroups</name>
      <anchorfile>classWsLdapAuth.html</anchorfile>
      <anchor>aaf610d288d573cbad90b4ba154813cfc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>ipValid</name>
      <anchorfile>classWsLdapAuth.html</anchorfile>
      <anchor>a2a7ebc79dc906bb272cc512218876ce9</anchor>
      <arglist>(std::string ip)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_uid</name>
      <anchorfile>classWsLdapAuth.html</anchorfile>
      <anchor>a1c3e6e323bdf512964526a088334cb3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_name</name>
      <anchorfile>classWsLdapAuth.html</anchorfile>
      <anchor>a81a64c3d70c87876ff816854e5c8b8ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_surname</name>
      <anchorfile>classWsLdapAuth.html</anchorfile>
      <anchor>a781c262681154706e9e64903da5572cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_email</name>
      <anchorfile>classWsLdapAuth.html</anchorfile>
      <anchor>aeccc014b026486e1ad7e1ff29ce67e80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_dn</name>
      <anchorfile>classWsLdapAuth.html</anchorfile>
      <anchor>a07743da2bd3101e7d92df831d5b9515d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_ip</name>
      <anchorfile>classWsLdapAuth.html</anchorfile>
      <anchor>a63b841acdbd9fcd25026412238fd4f2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; std::string &gt;</type>
      <name>m_groups</name>
      <anchorfile>classWsLdapAuth.html</anchorfile>
      <anchor>a5e022031fa95d9a30c3c4f17e5136e0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; std::string &gt;</type>
      <name>m_allGroups</name>
      <anchorfile>classWsLdapAuth.html</anchorfile>
      <anchor>a5b3c517df82f82f12d932de8f977b60c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WsGlobalProperties *</type>
      <name>m_properties</name>
      <anchorfile>classWsLdapAuth.html</anchorfile>
      <anchor>a8acf0e22388bc8e1e6c791fd50da7b0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>loadStatus</type>
      <name>m_ldapStatus</name>
      <anchorfile>classWsLdapAuth.html</anchorfile>
      <anchor>abd87fa893c21578c521a6c3dc07b2a19</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsLinksList</name>
    <filename>classWsLinksList.html</filename>
    <base>WsOptions</base>
    <member kind="function">
      <type></type>
      <name>WsLinksList</name>
      <anchorfile>classWsLinksList.html</anchorfile>
      <anchor>a53a335f899e2b02b1141c5abc4360445</anchor>
      <arglist>(Wt::WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsLinksList</name>
      <anchorfile>classWsLinksList.html</anchorfile>
      <anchor>a7d40ae1aa238e52a2e3529dae5077d3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>load</name>
      <anchorfile>classWsLinksList.html</anchorfile>
      <anchor>acc3c2ecf65ac869cc5d72954961dc463</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsLogger</name>
    <filename>classWsLogger.html</filename>
    <member kind="function">
      <type></type>
      <name>WsLogger</name>
      <anchorfile>classWsLogger.html</anchorfile>
      <anchor>abd94a7f87d592be3645a3ee7a3a20117</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::stringstream &amp;</type>
      <name>log</name>
      <anchorfile>classWsLogger.html</anchorfile>
      <anchor>a20d1577207c5a158fd94ae8305289d68</anchor>
      <arglist>(int level=1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsLogger</name>
      <anchorfile>classWsLogger.html</anchorfile>
      <anchor>a3bbe9bee75a76d9700ed597b76be590d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::stringstream</type>
      <name>m_ss</name>
      <anchorfile>classWsLogger.html</anchorfile>
      <anchor>adb2204f0e6997d0406ee943b0964ba5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>m_level</name>
      <anchorfile>classWsLogger.html</anchorfile>
      <anchor>a8713eeb657302f6c31d8dea552f0949b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsLogo</name>
    <filename>classWsLogo.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>doLogoClicked</name>
      <anchorfile>classWsLogo.html</anchorfile>
      <anchor>aff441d0c80b375a6e09ec00219745491</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsLogo</name>
      <anchorfile>classWsLogo.html</anchorfile>
      <anchor>afce78beedeef1cc7520c04552e395ad8</anchor>
      <arglist>(Wt::WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsLogo</name>
      <anchorfile>classWsLogo.html</anchorfile>
      <anchor>a7425b7057fd3f7519fca398ac666801d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsLogWriter</name>
    <filename>classWsLogWriter.html</filename>
    <member kind="function">
      <type>void</type>
      <name>write</name>
      <anchorfile>classWsLogWriter.html</anchorfile>
      <anchor>a50398f5fbd41b850a47d7c8f16ec14c5</anchor>
      <arglist>(const int &amp;level, const std::string &amp;message)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsLogWriter</name>
      <anchorfile>classWsLogWriter.html</anchorfile>
      <anchor>a2e754abf9a06fc20bba4f7c2ea9260ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WsLogWriter *</type>
      <name>instance</name>
      <anchorfile>classWsLogWriter.html</anchorfile>
      <anchor>a73a7c0bf9f65a86c0b991b780dee598c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WsLogWriter</name>
      <anchorfile>classWsLogWriter.html</anchorfile>
      <anchor>a001578f23f46c3656b50a878cb2ef987</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classWsLogWriter.html</anchorfile>
      <anchor>a3f7aa000806e8c92053b19a1c65c6da8</anchor>
      <arglist>(int level)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>readConf</name>
      <anchorfile>classWsLogWriter.html</anchorfile>
      <anchor>a542e2e31df06755b8a314d7657716f46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>pthread_mutex_t</type>
      <name>m_mutex</name>
      <anchorfile>classWsLogWriter.html</anchorfile>
      <anchor>a44ed8eb93ed23e8ad0b6729174ab7d98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::ofstream</type>
      <name>m_logfile</name>
      <anchorfile>classWsLogWriter.html</anchorfile>
      <anchor>a42448d249ba7f49f6b35fd114974da8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>m_logLevel</name>
      <anchorfile>classWsLogWriter.html</anchorfile>
      <anchor>aef9ecb84802166c70ce00f128f1d7e39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_path</name>
      <anchorfile>classWsLogWriter.html</anchorfile>
      <anchor>ad65c84079396800b11d0715cc2d4811d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static WsLogWriter *</type>
      <name>m_instance</name>
      <anchorfile>classWsLogWriter.html</anchorfile>
      <anchor>a48c30b7f291157f244c89f4158d3964a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsMeetingView</name>
    <filename>classWsMeetingView.html</filename>
    <base>WsOptions</base>
    <member kind="function">
      <type></type>
      <name>WsMeetingView</name>
      <anchorfile>classWsMeetingView.html</anchorfile>
      <anchor>a786bf3bc8e044e3baa429f50250ffed4</anchor>
      <arglist>(Wt::WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsMeetingView</name>
      <anchorfile>classWsMeetingView.html</anchorfile>
      <anchor>ab231cd78d51d089c0f55b68b8d38bfbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>load</name>
      <anchorfile>classWsMeetingView.html</anchorfile>
      <anchor>a0a8f2bb58a5e29701e24371c58d29b77</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsMenu</name>
    <filename>classWsMenu.html</filename>
    <base>WsOptions</base>
    <member kind="slot">
      <type>void</type>
      <name>doPathChanged</name>
      <anchorfile>classWsMenu.html</anchorfile>
      <anchor>aa8c6ee713459e6f1fe8b39960398a7f5</anchor>
      <arglist>(std::string newPath)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>onMouseWentOver</name>
      <anchorfile>classWsMenu.html</anchorfile>
      <anchor>a7efb0017f49d3e9a84850c427203bec3</anchor>
      <arglist>(Wt::WPushButton *pButton)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsMenu</name>
      <anchorfile>classWsMenu.html</anchorfile>
      <anchor>adb2de0cf970d22032b6c4807a9241b59</anchor>
      <arglist>(Wt::WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsMenu</name>
      <anchorfile>classWsMenu.html</anchorfile>
      <anchor>a2e8d45930a5ef055250d425883f64a73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsMenu</name>
      <anchorfile>classWsMenu.html</anchorfile>
      <anchor>a5ceff8e88f2fb6647027c52653488713</anchor>
      <arglist>(const std::string &amp;path, Wt::WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classWsMenu.html</anchorfile>
      <anchor>a78403810097d684c7ec70524546a34f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doLoadCurPath</name>
      <anchorfile>classWsMenu.html</anchorfile>
      <anchor>a3c06dda79f2b1e879a2cf8d63382df8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doSelectedMenu</name>
      <anchorfile>classWsMenu.html</anchorfile>
      <anchor>aa4026267276666ae4eba27ea98881728</anchor>
      <arglist>(std::string newPath)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadMenu</name>
      <anchorfile>classWsMenu.html</anchorfile>
      <anchor>ab4a9f8ee5639b4f228a628539984546b</anchor>
      <arglist>(NodePtr pNodeParent, Wt::WMenu *menuParent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createMenu</name>
      <anchorfile>classWsMenu.html</anchorfile>
      <anchor>ab98c393f064f16397cb733693c94e8cd</anchor>
      <arglist>(NodePtr pNode, Wt::WMenu *menuParent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadPopupMenu</name>
      <anchorfile>classWsMenu.html</anchorfile>
      <anchor>a753266c760883a11a0678c2c70952db5</anchor>
      <arglist>(NodePtr pNodeParent, Wt::WPopupMenu *menuParent)</arglist>
    </member>
    <member kind="function">
      <type>Wt::WLink</type>
      <name>makeLink</name>
      <anchorfile>classWsMenu.html</anchorfile>
      <anchor>af0bcd416673b0efa1e4c8021ccbeb52b</anchor>
      <arglist>(const std::string &amp;path, bool bUseIcon=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadImage</name>
      <anchorfile>classWsMenu.html</anchorfile>
      <anchor>a425102803eae6827d1f3b08f004a1252</anchor>
      <arglist>(NodePtr pNodeParent)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_sCurPath</name>
      <anchorfile>classWsMenu.html</anchorfile>
      <anchor>a4265bbb573dd52ef6d9b49440de8760f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_bDebug</name>
      <anchorfile>classWsMenu.html</anchorfile>
      <anchor>abc3e8d2ebcb89e52f24e2dc0e46381cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Wt::WPushButton * &gt;</type>
      <name>m_vPushButton</name>
      <anchorfile>classWsMenu.html</anchorfile>
      <anchor>a2df89d0f64dc4ae86f6eccb0c6c086b3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsMenuImage</name>
    <filename>classWsMenuImage.html</filename>
  </compound>
  <compound kind="class">
    <name>WsMenuImages</name>
    <filename>classWsMenuImages.html</filename>
    <base>WsOptions</base>
    <member kind="slot">
      <type>void</type>
      <name>doTimeout</name>
      <anchorfile>classWsMenuImages.html</anchorfile>
      <anchor>aa88c421101f18949a9fe2034767fc40b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsMenuImages</name>
      <anchorfile>classWsMenuImages.html</anchorfile>
      <anchor>accbf3e797069ca5e29a1e4a6446d8be6</anchor>
      <arglist>(Wt::WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsMenuImages</name>
      <anchorfile>classWsMenuImages.html</anchorfile>
      <anchor>af82de5ac94464c5dc834e280f6253026</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classWsMenuImages.html</anchorfile>
      <anchor>a6ddb78f1b3e422cdfe64acfd6631b7e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildVector</name>
      <anchorfile>classWsMenuImages.html</anchorfile>
      <anchor>a430609ecbb39d12b135ce1a50d08d65d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildMenu</name>
      <anchorfile>classWsMenuImages.html</anchorfile>
      <anchor>a569d6137f7f69a23490bd9b7c61602a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxImages</name>
      <anchorfile>classWsMenuImages.html</anchorfile>
      <anchor>ae5cf6fc07cdbd77517907a671ecf0b9e</anchor>
      <arglist>(int nMaxImages)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>m_vDirectories</name>
      <anchorfile>classWsMenuImages.html</anchorfile>
      <anchor>ad9046d968494cb464962de6dd1f4d8c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>m_vDisplayNames</name>
      <anchorfile>classWsMenuImages.html</anchorfile>
      <anchor>a42c18c2963eb01b5b6bbc64fbd703429</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>m_nStartImage</name>
      <anchorfile>classWsMenuImages.html</anchorfile>
      <anchor>a7d73641bd369bf562872dba2c327d818</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>m_nMaxImages</name>
      <anchorfile>classWsMenuImages.html</anchorfile>
      <anchor>ae737ce06c5683b71033ced31c89b8f5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WTimer *</type>
      <name>m_pTimer</name>
      <anchorfile>classWsMenuImages.html</anchorfile>
      <anchor>a723ca781eac99e86a8fe6196e4331db9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsMenuTree</name>
    <filename>classWsMenuTree.html</filename>
    <base>WsAbstractTree</base>
    <member kind="function">
      <type></type>
      <name>WsMenuTree</name>
      <anchorfile>classWsMenuTree.html</anchorfile>
      <anchor>a3d2dd84a8e426580544d0393f252be0d</anchor>
      <arglist>(FileSystemTreePtr fs, const std::set&lt; std::string &gt; &amp;gid, const int &amp;md, const path &amp;rootPath, const std::string &amp;stamp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsMenuTree</name>
      <anchorfile>classWsMenuTree.html</anchorfile>
      <anchor>ace3820d23560fa71d0a183178bab80e9</anchor>
      <arglist>(FileSystemTreePtr fs, const std::set&lt; std::string &gt; &amp;gid, const int &amp;md, const std::set&lt; std::string &gt; &amp;names, const std::set&lt; std::string &gt; &amp;ext, const path &amp;rootPath, const std::string &amp;stamp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsMenuTree</name>
      <anchorfile>classWsMenuTree.html</anchorfile>
      <anchor>a7c77ec2a211c8487c8f6d71096ab0caf</anchor>
      <arglist>(NodePtr n, const std::set&lt; std::string &gt; &amp;gid, const int &amp;md, const std::set&lt; std::string &gt; &amp;names, const std::set&lt; std::string &gt; &amp;ext, const path &amp;rootPath, const std::string &amp;stamp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsMenuTree</name>
      <anchorfile>classWsMenuTree.html</anchorfile>
      <anchor>a66319597570a8867506a58487b0775aa</anchor>
      <arglist>(NodePtr n, const std::set&lt; std::string &gt; &amp;gid, const int &amp;md, const path &amp;rootPath, const std::string &amp;stamp)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>beginTraverseDir</name>
      <anchorfile>classWsMenuTree.html</anchorfile>
      <anchor>ab80c35c8b5ba57dcb820d59b40eec080</anchor>
      <arglist>(NodePtr n)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>traverseFile</name>
      <anchorfile>classWsMenuTree.html</anchorfile>
      <anchor>ac65982761b55bb6451bf84e97742b752</anchor>
      <arglist>(NodePtr n)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsMnoGoSearch</name>
    <filename>classWsMnoGoSearch.html</filename>
    <base>WsAbstractSearch</base>
    <member kind="function">
      <type></type>
      <name>WsMnoGoSearch</name>
      <anchorfile>classWsMnoGoSearch.html</anchorfile>
      <anchor>a3510b2aa304e088203f2a6fa2084ad3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WsMnoGoSearch</name>
      <anchorfile>classWsMnoGoSearch.html</anchorfile>
      <anchor>ac5973cbf23b2ce6e7e1dba1d8942437b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>load</name>
      <anchorfile>classWsMnoGoSearch.html</anchorfile>
      <anchor>af8b3f2c5310db61017c35aa16bb6080b</anchor>
      <arglist>(FileSystemTreePtr fst, string query)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSize</name>
      <anchorfile>classWsMnoGoSearch.html</anchorfile>
      <anchor>a3295e456db951e9f387bdb555414a096</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>vector&lt; WsResultItem &gt;</type>
      <name>getResults</name>
      <anchorfile>classWsMnoGoSearch.html</anchorfile>
      <anchor>a44909cd66ad2422337d08fdd5d459775</anchor>
      <arglist>(const set&lt; string &gt; &amp;groups)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>FileSystemTreePtr</type>
      <name>m_fst</name>
      <anchorfile>classWsMnoGoSearch.html</anchorfile>
      <anchor>a3fc83b09439b2254f8eb6279acd205cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>char</type>
      <name>m_udmQuery</name>
      <anchorfile>classWsMnoGoSearch.html</anchorfile>
      <anchor>af28948a9c43c2bd81113f07b274eb0bc</anchor>
      <arglist>[256]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>string</type>
      <name>m_user</name>
      <anchorfile>classWsMnoGoSearch.html</anchorfile>
      <anchor>aaa2006e41d998856d2e05ec36e55a4ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>m_size</name>
      <anchorfile>classWsMnoGoSearch.html</anchorfile>
      <anchor>a548f149651e5ccbc6fdd160e88771094</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>list&lt; WsResultItem &gt;</type>
      <name>m_results</name>
      <anchorfile>classWsMnoGoSearch.html</anchorfile>
      <anchor>a21c3831c23be476073d80844fd28201c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>void *</type>
      <name>m_hndlMno</name>
      <anchorfile>classWsMnoGoSearch.html</anchorfile>
      <anchor>a0e23aec6c72fb191f3395015819c09b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>pf_UdmEnvInit</type>
      <name>mf_UdmEnvInit</name>
      <anchorfile>classWsMnoGoSearch.html</anchorfile>
      <anchor>ab10c901311af3b2fc1356cb08967f9aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>pf_UdmAgentInit</type>
      <name>mf_UdmAgentInit</name>
      <anchorfile>classWsMnoGoSearch.html</anchorfile>
      <anchor>a40112bc0eb9c7bceb19a25583c7b0c72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>pf_UdmAgentAddLine</type>
      <name>mf_UdmAgentAddLine</name>
      <anchorfile>classWsMnoGoSearch.html</anchorfile>
      <anchor>ab49bb96ba2804f21ed8525b469db6187</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>pf_UdmFind2</type>
      <name>mf_UdmFind2</name>
      <anchorfile>classWsMnoGoSearch.html</anchorfile>
      <anchor>a76b991ac8279e81e2cb47b62f85fe818</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>pf_UdmVarListFindInt</type>
      <name>mf_UdmVarListFindInt</name>
      <anchorfile>classWsMnoGoSearch.html</anchorfile>
      <anchor>a02dc1356b1d7bf2835758c14c6552cfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>pf_UdmVarListFindStr</type>
      <name>mf_UdmVarListFindStr</name>
      <anchorfile>classWsMnoGoSearch.html</anchorfile>
      <anchor>afc94b5fd9cd7bfc6ffb4486c761edd3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>pf_UdmResultFree</type>
      <name>mf_UdmResultFree</name>
      <anchorfile>classWsMnoGoSearch.html</anchorfile>
      <anchor>af8bd9016a9ef566fc35a59792d2d553c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>pf_UdmAgentFree</type>
      <name>mf_UdmAgentFree</name>
      <anchorfile>classWsMnoGoSearch.html</anchorfile>
      <anchor>ababd0e6dd6c8fd7964aa9ec8ab5f9b45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>pf_UdmEnvFree</type>
      <name>mf_UdmEnvFree</name>
      <anchorfile>classWsMnoGoSearch.html</anchorfile>
      <anchor>ad6851f0ba768acf2d40f7c6eb985b99d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>UDM_ENV</type>
      <name>m_env</name>
      <anchorfile>classWsMnoGoSearch.html</anchorfile>
      <anchor>a009d57ce36e90bff9aa9e9e89a3c97d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>UDM_AGENT</type>
      <name>m_agent</name>
      <anchorfile>classWsMnoGoSearch.html</anchorfile>
      <anchor>a918717590c8b7abf77208fe5574e8be2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>UDM_RESULT *</type>
      <name>m_res</name>
      <anchorfile>classWsMnoGoSearch.html</anchorfile>
      <anchor>aa4fb455c590c69ad5991b1b18567812c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsModAnchor</name>
    <filename>classWsModAnchor.html</filename>
    <base>WsModule</base>
    <member kind="function">
      <type></type>
      <name>WsModAnchor</name>
      <anchorfile>classWsModAnchor.html</anchorfile>
      <anchor>ae5ecba8b712f08ec49caaa6ebe464be7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsModAnchor</name>
      <anchorfile>classWsModAnchor.html</anchorfile>
      <anchor>a26cdcbb8a8d0881db8f538e2ad7c6e83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContentsMenuBar</name>
      <anchorfile>classWsModAnchor.html</anchorfile>
      <anchor>a6785630ab62db152cb425121b9f31e5b</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContents</name>
      <anchorfile>classWsModAnchor.html</anchorfile>
      <anchor>aed217c0253b447191d4dfc0090e8ed39</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>WsEditorWidget *</type>
      <name>createEditor</name>
      <anchorfile>classWsModAnchor.html</anchorfile>
      <anchor>ac653b4d88240b9d5f4b927d3b140a50e</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createAdmin</name>
      <anchorfile>classWsModAnchor.html</anchorfile>
      <anchor>ae4f6cf3835e5b8e1dc7a60be1743c77d</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classWsModAnchor.html</anchorfile>
      <anchor>a1562646f8403cf52f54de0bd93c18684</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>checkPath</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>acc932d0bacb34d631973f2cabefc16d5</anchor>
      <arglist>(const std::string &amp;currentPath)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModuleName</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>a1d5a6023c28cc0631eefc740fa641a81</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>moduleName</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>afa69d8c1738d9dc15d7bc266738c64b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSoName</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>a90a0a605c94b78a91ed9e8be12f532e2</anchor>
      <arglist>(const std::string &amp;soName)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>soName</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>aaa586fcadcb6435e7301940cfe4a183c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFileName</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>ab8f21a93f1991b6b0696ff7b12c36006</anchor>
      <arglist>(const std::string &amp;fileName)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>fileName</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>a0c2bcda32270c4c4df4b608a063367f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExtensions</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>a9f45dcbe9d8ccd316a4e672d779f7abc</anchor>
      <arglist>(const std::string &amp;extensions)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>extension</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>afde919cc72b6789a49ed70991a2632a0</anchor>
      <arglist>(const std::string &amp;extension=&quot;&quot;) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPrefix</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>abe7077d25554439c169a945aebfe0907</anchor>
      <arglist>(const std::string &amp;prefix)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>prefix</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>a46cd4225764c03a9c92672f947f9ff4f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>pathWithoutPrefix</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>a5498983cf36578fab497332b32345092</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>pathWithPrefix</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>ac6e8764fdb3dc500791ea3bcf7932966</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>processPrefix</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>a6d584a70a217db2b15573ad6958972c9</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHideImages</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>a70f7699779b34b5ba8dfbb83db87e9e0</anchor>
      <arglist>(const bool bHide)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hideImages</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>a92693e3cfafb573455b6b3d11f6a4a99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSysPath</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>afd81a44b2d3e5a8eab2b710c7dc365ad</anchor>
      <arglist>(const std::string &amp;sysPath)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>sysPath</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>a28f73a82cd5bdcf04a4fb0f66fe62507</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDiffPath</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>a3626bdda2acd874619d4b3dba75a00c2</anchor>
      <arglist>(const std::string &amp;diffPath)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>diffPath</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>a6a09416271fad86374a717ec61d4c700</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WsContentButtonsBar *</type>
      <name>contentButtonsBar</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>a540fdf240488acf3e451ce98a2ca5027</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>destroyContentsMenuBar</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>aedb26d31b7fe1ed99f6aea823b139f9c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoaded</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>a7b1165bd14554245700e6bc79e28f153</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLoaded</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>a04e647cf7d62f01cb313b17882c58a45</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsModBanners</name>
    <filename>classWsModBanners.html</filename>
    <base>WsModule</base>
    <member kind="function">
      <type></type>
      <name>WsModBanners</name>
      <anchorfile>classWsModBanners.html</anchorfile>
      <anchor>aaf9b6aaf4d80f60cb6a4d1b4d7853ba1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsModBanners</name>
      <anchorfile>classWsModBanners.html</anchorfile>
      <anchor>ae4ed659db2b6edcd6f89e5555fb9fc53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContentsMenuBar</name>
      <anchorfile>classWsModBanners.html</anchorfile>
      <anchor>a1518f91b9df62e3cb0c731a2daef9e9f</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContents</name>
      <anchorfile>classWsModBanners.html</anchorfile>
      <anchor>a71e15b93c7e557bcc2ad16127d609d5c</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>WsEditorWidget *</type>
      <name>createEditor</name>
      <anchorfile>classWsModBanners.html</anchorfile>
      <anchor>a796e2733bde93dc36a029d5b7df2f8f4</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createAdmin</name>
      <anchorfile>classWsModBanners.html</anchorfile>
      <anchor>a328db64f5decd9bd90aea811b601a4fc</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classWsModBanners.html</anchorfile>
      <anchor>aa9dcf903cc0bd80164ead0e7e6682046</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsModBreadCrumb</name>
    <filename>classWsModBreadCrumb.html</filename>
    <base>WsModule</base>
    <member kind="function">
      <type></type>
      <name>WsModBreadCrumb</name>
      <anchorfile>classWsModBreadCrumb.html</anchorfile>
      <anchor>abbf50c455090f672fc27743f955ffb8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsModBreadCrumb</name>
      <anchorfile>classWsModBreadCrumb.html</anchorfile>
      <anchor>afe7d3ff4f73712848644afbe0af91245</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContentsMenuBar</name>
      <anchorfile>classWsModBreadCrumb.html</anchorfile>
      <anchor>a452ea299f337a6aa41a5c9e8ac989825</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContents</name>
      <anchorfile>classWsModBreadCrumb.html</anchorfile>
      <anchor>a6563b381501414da165bcfaddd383bd6</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>WsEditorWidget *</type>
      <name>createEditor</name>
      <anchorfile>classWsModBreadCrumb.html</anchorfile>
      <anchor>a74303b0abaf3352bd556691c7c41f1e3</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createAdmin</name>
      <anchorfile>classWsModBreadCrumb.html</anchorfile>
      <anchor>a3a6693c56de31a5978fc173430247313</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classWsModBreadCrumb.html</anchorfile>
      <anchor>a6a363f4f2d62bcafe0b6b48f6c01d527</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsModDirectoryView2</name>
    <filename>classWsModDirectoryView2.html</filename>
    <base>WsModule</base>
    <member kind="function">
      <type></type>
      <name>WsModDirectoryView2</name>
      <anchorfile>classWsModDirectoryView2.html</anchorfile>
      <anchor>a061bdbd6a129d42af0afefb9cba6ee34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsModDirectoryView2</name>
      <anchorfile>classWsModDirectoryView2.html</anchorfile>
      <anchor>a0780c288120d784a36cf479edc35343b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContentsMenuBar</name>
      <anchorfile>classWsModDirectoryView2.html</anchorfile>
      <anchor>af99452d658b9fe30ba3c30ff653c3b6e</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContents</name>
      <anchorfile>classWsModDirectoryView2.html</anchorfile>
      <anchor>a305613d6414b8d90fb43e565259c7dc5</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>WsEditorWidget *</type>
      <name>createEditor</name>
      <anchorfile>classWsModDirectoryView2.html</anchorfile>
      <anchor>a1634010e93219a45bc64b644487efd70</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createAdmin</name>
      <anchorfile>classWsModDirectoryView2.html</anchorfile>
      <anchor>a38ab01fcfe6ad873cfef3bb83bcf9e7d</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classWsModDirectoryView2.html</anchorfile>
      <anchor>a9921021dd95dd64515e20775fa93534f</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsModEditor</name>
    <filename>classWsModEditor.html</filename>
    <base>WsModule</base>
    <base>WsOptions</base>
    <member kind="function">
      <type></type>
      <name>WsModEditor</name>
      <anchorfile>classWsModEditor.html</anchorfile>
      <anchor>a3a045739f14748abf42d060873004ad9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsModEditor</name>
      <anchorfile>classWsModEditor.html</anchorfile>
      <anchor>a1f22389d7eb6f87e4f90e80a028510ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContentsMenuBar</name>
      <anchorfile>classWsModEditor.html</anchorfile>
      <anchor>a7c982c898cbd6ab30226e1124863257e</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContents</name>
      <anchorfile>classWsModEditor.html</anchorfile>
      <anchor>a13e107d7ec29c78caaf7025a163f9381</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>WsEditorWidget *</type>
      <name>createEditor</name>
      <anchorfile>classWsModEditor.html</anchorfile>
      <anchor>afdf91399b46d72667fa39b462a8bfc10</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createAdmin</name>
      <anchorfile>classWsModEditor.html</anchorfile>
      <anchor>a43eac032a7fe7ea1377afde38160a85e</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classWsModEditor.html</anchorfile>
      <anchor>ab94da2c3b83072652a74ee8aa491ab0b</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsModFileUpload</name>
    <filename>classWsModFileUpload.html</filename>
    <base>WsModule</base>
    <member kind="function">
      <type></type>
      <name>WsModFileUpload</name>
      <anchorfile>classWsModFileUpload.html</anchorfile>
      <anchor>a4310259dc287f747573a25a632935814</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsModFileUpload</name>
      <anchorfile>classWsModFileUpload.html</anchorfile>
      <anchor>ab6415051881ffc56ccbd2c212a45e4d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContentsMenuBar</name>
      <anchorfile>classWsModFileUpload.html</anchorfile>
      <anchor>a6e1bba65b66f71ba72e7a4a0e4c11f6c</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContents</name>
      <anchorfile>classWsModFileUpload.html</anchorfile>
      <anchor>a6dfed88682622e540bb8d605a0f5a33c</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>WsEditorWidget *</type>
      <name>createEditor</name>
      <anchorfile>classWsModFileUpload.html</anchorfile>
      <anchor>a2839e109f934cdbb42fea9136ee1e232</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createAdmin</name>
      <anchorfile>classWsModFileUpload.html</anchorfile>
      <anchor>ae862aa0c8e93df20b4d55d1d1035d1d6</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classWsModFileUpload.html</anchorfile>
      <anchor>abdc8f2179c8bd4ee69831532542b3eaf</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsModFollowUs</name>
    <filename>classWsModFollowUs.html</filename>
    <base>WsModule</base>
    <member kind="function">
      <type></type>
      <name>WsModFollowUs</name>
      <anchorfile>classWsModFollowUs.html</anchorfile>
      <anchor>a6a73ef5a004c9d98f650afc5a0ba1b70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsModFollowUs</name>
      <anchorfile>classWsModFollowUs.html</anchorfile>
      <anchor>a66a91b392aa7d45249bd2dc55a7f6aed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContentsMenuBar</name>
      <anchorfile>classWsModFollowUs.html</anchorfile>
      <anchor>af7874447ac7ded57575eb8739a449f56</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContents</name>
      <anchorfile>classWsModFollowUs.html</anchorfile>
      <anchor>a7e90a443b57045bf48eab600f8493e1c</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>WsEditorWidget *</type>
      <name>createEditor</name>
      <anchorfile>classWsModFollowUs.html</anchorfile>
      <anchor>ac25c95a47cbb10a013e1a96f58f815f2</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createAdmin</name>
      <anchorfile>classWsModFollowUs.html</anchorfile>
      <anchor>a6a59d01d25519445bd5839ca3b2ce258</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classWsModFollowUs.html</anchorfile>
      <anchor>a8e5cb5c04099cd719fb4a10949e20e6d</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsModGalleria</name>
    <filename>classWsModGalleria.html</filename>
    <base>WsModule</base>
    <member kind="function">
      <type></type>
      <name>WsModGalleria</name>
      <anchorfile>classWsModGalleria.html</anchorfile>
      <anchor>a6d5553c6b914560166d14d31a90a8fd8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsModGalleria</name>
      <anchorfile>classWsModGalleria.html</anchorfile>
      <anchor>aa017a6984d28591b275c81d9c94d0150</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContentsMenuBar</name>
      <anchorfile>classWsModGalleria.html</anchorfile>
      <anchor>a29cee1db5d978e7e4c0d58e95caefa23</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContents</name>
      <anchorfile>classWsModGalleria.html</anchorfile>
      <anchor>aa8e522277caf9bf05831634f4fe8fc10</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>WsEditorWidget *</type>
      <name>createEditor</name>
      <anchorfile>classWsModGalleria.html</anchorfile>
      <anchor>a9b98ed905574537bb09f18105e4196e5</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createAdmin</name>
      <anchorfile>classWsModGalleria.html</anchorfile>
      <anchor>a9005d18e47f1c0fe1892a02b4beb7aeb</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classWsModGalleria.html</anchorfile>
      <anchor>aaddfcf9838ec0515abd2aca198610ff7</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsModImages2</name>
    <filename>classWsModImages2.html</filename>
    <base>WsModule</base>
    <member kind="function">
      <type></type>
      <name>WsModImages2</name>
      <anchorfile>classWsModImages2.html</anchorfile>
      <anchor>ad12c8f09838951706cb636aae24b37a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsModImages2</name>
      <anchorfile>classWsModImages2.html</anchorfile>
      <anchor>abaf971489b494821d50f0cfde4250370</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContentsMenuBar</name>
      <anchorfile>classWsModImages2.html</anchorfile>
      <anchor>a7725817a667056e76f5475b401f7856f</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContents</name>
      <anchorfile>classWsModImages2.html</anchorfile>
      <anchor>a3acc790c214fc2cb4ed570e21474bc60</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>WsEditorWidget *</type>
      <name>createEditor</name>
      <anchorfile>classWsModImages2.html</anchorfile>
      <anchor>a3a8d748d2947780a680cbaf75f86ee37</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createAdmin</name>
      <anchorfile>classWsModImages2.html</anchorfile>
      <anchor>a505368830bbdb085f2f22a86b89a44af</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classWsModImages2.html</anchorfile>
      <anchor>a1f71bb7ae64bda3f81bdb69ec8f87e8b</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsModImagesGallery</name>
    <filename>classWsModImagesGallery.html</filename>
    <base>WsModule</base>
    <member kind="function">
      <type></type>
      <name>WsModImagesGallery</name>
      <anchorfile>classWsModImagesGallery.html</anchorfile>
      <anchor>ac5b307e731eed48e6f68d0a6509aff54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsModImagesGallery</name>
      <anchorfile>classWsModImagesGallery.html</anchorfile>
      <anchor>ae61c6b14df305551f905e1377d50cfce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContentsMenuBar</name>
      <anchorfile>classWsModImagesGallery.html</anchorfile>
      <anchor>a9646d598b75dbff25c0228c9bc562f00</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContents</name>
      <anchorfile>classWsModImagesGallery.html</anchorfile>
      <anchor>ada576aca9df1fe9938ab17fa14086015</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>WsEditorWidget *</type>
      <name>createEditor</name>
      <anchorfile>classWsModImagesGallery.html</anchorfile>
      <anchor>aa31b66ced68665651009a360c98c8251</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createAdmin</name>
      <anchorfile>classWsModImagesGallery.html</anchorfile>
      <anchor>a61b5f697b58601382e9a8b2f13c5db8a</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveEditor</name>
      <anchorfile>classWsModImagesGallery.html</anchorfile>
      <anchor>a294bff7b59082f25a7f5d1785c8148f7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classWsModImagesGallery.html</anchorfile>
      <anchor>ab322540d0067d34dce45def9d043c0d9</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsModLatestNews2</name>
    <filename>classWsModLatestNews2.html</filename>
    <base>WsModule</base>
    <member kind="function">
      <type></type>
      <name>WsModLatestNews2</name>
      <anchorfile>classWsModLatestNews2.html</anchorfile>
      <anchor>aa090ce455baa39550893d7c2852f058d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsModLatestNews2</name>
      <anchorfile>classWsModLatestNews2.html</anchorfile>
      <anchor>afb9863187013bf5a876647360795c49c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContentsMenuBar</name>
      <anchorfile>classWsModLatestNews2.html</anchorfile>
      <anchor>ac36b4e6f226dde95d488b39218842686</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContents</name>
      <anchorfile>classWsModLatestNews2.html</anchorfile>
      <anchor>a302effdd8f86fa63b810acc1f9a1cb24</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>WsEditorWidget *</type>
      <name>createEditor</name>
      <anchorfile>classWsModLatestNews2.html</anchorfile>
      <anchor>a73e388b4c4dbda7db8dae44c96a11748</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createAdmin</name>
      <anchorfile>classWsModLatestNews2.html</anchorfile>
      <anchor>a7d15dfb42007e812f025e1c8d2649942</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveEditor</name>
      <anchorfile>classWsModLatestNews2.html</anchorfile>
      <anchor>a487552e97be8344ca4f0a20f205bd9f7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classWsModLatestNews2.html</anchorfile>
      <anchor>ae82912ce810f6ccf07ce954b345e6252</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsModLinksList</name>
    <filename>classWsModLinksList.html</filename>
    <base>WsModule</base>
    <member kind="function">
      <type></type>
      <name>WsModLinksList</name>
      <anchorfile>classWsModLinksList.html</anchorfile>
      <anchor>a313ea8c336a7b70a43319dd0d4a3877c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsModLinksList</name>
      <anchorfile>classWsModLinksList.html</anchorfile>
      <anchor>a97616b97f1fd6c358c8209b7f8f0f578</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContentsMenuBar</name>
      <anchorfile>classWsModLinksList.html</anchorfile>
      <anchor>a10248d795d21946b173619b3f79175a8</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContents</name>
      <anchorfile>classWsModLinksList.html</anchorfile>
      <anchor>a3fb477f82ed1527269f9cbc7793c3adb</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>WsEditorWidget *</type>
      <name>createEditor</name>
      <anchorfile>classWsModLinksList.html</anchorfile>
      <anchor>ad765b3d8db49af408347e49f575ecbb3</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createAdmin</name>
      <anchorfile>classWsModLinksList.html</anchorfile>
      <anchor>addb4d565b314134e141e831f2313e61e</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveEditor</name>
      <anchorfile>classWsModLinksList.html</anchorfile>
      <anchor>ae6d737797b5ad09a58528c24451766d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classWsModLinksList.html</anchorfile>
      <anchor>a77ebe2358d062a545321b731a6e1ace0</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsModMeetingView</name>
    <filename>classWsModMeetingView.html</filename>
    <base>WsModule</base>
    <member kind="function">
      <type></type>
      <name>WsModMeetingView</name>
      <anchorfile>classWsModMeetingView.html</anchorfile>
      <anchor>a2546ddbdc9cd7e16c0e8762f24f4edee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsModMeetingView</name>
      <anchorfile>classWsModMeetingView.html</anchorfile>
      <anchor>afad72a52c9ec2d2743c200b494138f99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContentsMenuBar</name>
      <anchorfile>classWsModMeetingView.html</anchorfile>
      <anchor>a52977697bb7b3d9d311654a7850e211b</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContents</name>
      <anchorfile>classWsModMeetingView.html</anchorfile>
      <anchor>ab38a2abb75f48c704778331e40cb034a</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>WsEditorWidget *</type>
      <name>createEditor</name>
      <anchorfile>classWsModMeetingView.html</anchorfile>
      <anchor>ad168566f2c9de1d1c41a049a3f1512ef</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createAdmin</name>
      <anchorfile>classWsModMeetingView.html</anchorfile>
      <anchor>a6a97834f7442ff2d5a296acfee3794f2</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveEditor</name>
      <anchorfile>classWsModMeetingView.html</anchorfile>
      <anchor>a35e34037911584473b0e312ee27d0426</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classWsModMeetingView.html</anchorfile>
      <anchor>a32d5187b87639167b6d7a718bff47753</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsModMenu</name>
    <filename>classWsModMenu.html</filename>
    <base>WsModule</base>
    <member kind="function">
      <type></type>
      <name>WsModMenu</name>
      <anchorfile>classWsModMenu.html</anchorfile>
      <anchor>a987358b8a1fe8928ec306540bda5a1b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsModMenu</name>
      <anchorfile>classWsModMenu.html</anchorfile>
      <anchor>a5eac08b92c4001f34f803d9372350221</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContentsMenuBar</name>
      <anchorfile>classWsModMenu.html</anchorfile>
      <anchor>abd48569f6e8b702cd728053a3acb602a</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContents</name>
      <anchorfile>classWsModMenu.html</anchorfile>
      <anchor>ad11c56e6a8208687fbbc2cbf70010cd0</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>WsEditorWidget *</type>
      <name>createEditor</name>
      <anchorfile>classWsModMenu.html</anchorfile>
      <anchor>a7eba84f1b0273c6bf493ca15fa9b052a</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createAdmin</name>
      <anchorfile>classWsModMenu.html</anchorfile>
      <anchor>a61c6db92f74dcdc22b2e7d2bba71acb6</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveEditor</name>
      <anchorfile>classWsModMenu.html</anchorfile>
      <anchor>acb407d055065e3158cdb51d96d1882e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classWsModMenu.html</anchorfile>
      <anchor>a90f35749d2dcf242a18252c163cd695f</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsModMenuImages</name>
    <filename>classWsModMenuImages.html</filename>
    <base>WsModule</base>
    <member kind="function">
      <type></type>
      <name>WsModMenuImages</name>
      <anchorfile>classWsModMenuImages.html</anchorfile>
      <anchor>aa9171fcf1ef3e28714b552733526ce83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsModMenuImages</name>
      <anchorfile>classWsModMenuImages.html</anchorfile>
      <anchor>a6f5bc67f48befb25d999d19a92527fd6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContentsMenuBar</name>
      <anchorfile>classWsModMenuImages.html</anchorfile>
      <anchor>afa6eabcc8662e2e65cd03d144f4ea913</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContents</name>
      <anchorfile>classWsModMenuImages.html</anchorfile>
      <anchor>ac1763cb9481214ec2f808f264753a93f</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>WsEditorWidget *</type>
      <name>createEditor</name>
      <anchorfile>classWsModMenuImages.html</anchorfile>
      <anchor>ad3b5641bf4a807d339ab6d774baf3de9</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createAdmin</name>
      <anchorfile>classWsModMenuImages.html</anchorfile>
      <anchor>af2b4dd38d8660bc4f7179e5a754cf11f</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveEditor</name>
      <anchorfile>classWsModMenuImages.html</anchorfile>
      <anchor>a2f5853aeb0768ebb9ef8578109e22591</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classWsModMenuImages.html</anchorfile>
      <anchor>a49017e9af0e29876dba3051313c14445</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsModNewsLetter</name>
    <filename>classWsModNewsLetter.html</filename>
    <base>WsModule</base>
    <member kind="function">
      <type></type>
      <name>WsModNewsLetter</name>
      <anchorfile>classWsModNewsLetter.html</anchorfile>
      <anchor>af3332bf1eb59384366b0aeb5f5788491</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsModNewsLetter</name>
      <anchorfile>classWsModNewsLetter.html</anchorfile>
      <anchor>a54e4af022e186894b8fdc7014eb6a56a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContentsMenuBar</name>
      <anchorfile>classWsModNewsLetter.html</anchorfile>
      <anchor>a37b4da2470d43f2d655d8c9958d6627a</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContents</name>
      <anchorfile>classWsModNewsLetter.html</anchorfile>
      <anchor>a5e007501acb48bd28da4a7c92b0a395a</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>WsEditorWidget *</type>
      <name>createEditor</name>
      <anchorfile>classWsModNewsLetter.html</anchorfile>
      <anchor>a2d251bd19810d078e6b1caabe8dec873</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createAdmin</name>
      <anchorfile>classWsModNewsLetter.html</anchorfile>
      <anchor>ad558ce75e19cfd07fead25132a765046</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveEditor</name>
      <anchorfile>classWsModNewsLetter.html</anchorfile>
      <anchor>a65287b4bed62efac6a02a7a6b474c602</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classWsModNewsLetter.html</anchorfile>
      <anchor>a43228aa569878dce3a85073b1ddda5b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>checkPath</name>
      <anchorfile>classWsModNewsLetter.html</anchorfile>
      <anchor>aa7839ce0bc517ad1c8086a7903396be2</anchor>
      <arglist>(const std::string &amp;currentPath)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsModOdf</name>
    <filename>classWsModOdf.html</filename>
    <base>WsModule</base>
    <member kind="function">
      <type></type>
      <name>WsModOdf</name>
      <anchorfile>classWsModOdf.html</anchorfile>
      <anchor>a12f0e52fa3dab30220d808be2b3301f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsModOdf</name>
      <anchorfile>classWsModOdf.html</anchorfile>
      <anchor>abc76b3d8d8eb2ecbd67aecab7fb9ebf2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContentsMenuBar</name>
      <anchorfile>classWsModOdf.html</anchorfile>
      <anchor>a791d9a44a7ce7ddb81548d97e010f99c</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContents</name>
      <anchorfile>classWsModOdf.html</anchorfile>
      <anchor>a3f25af6f2ac3e3f0cd522cc41699e5c1</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>WsEditorWidget *</type>
      <name>createEditor</name>
      <anchorfile>classWsModOdf.html</anchorfile>
      <anchor>a8003096db1a1a235e15041ac26f78148</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createAdmin</name>
      <anchorfile>classWsModOdf.html</anchorfile>
      <anchor>ae4aec6b341a8b1426b3d2050c8174eba</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveEditor</name>
      <anchorfile>classWsModOdf.html</anchorfile>
      <anchor>a98c6b65fedd1f30c83478c170e8a9306</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classWsModOdf.html</anchorfile>
      <anchor>a505ad05edf4b2f5cecd673da8e9cd4f2</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsModPdf</name>
    <filename>classWsModPdf.html</filename>
    <base>WsModule</base>
    <member kind="function">
      <type></type>
      <name>WsModPdf</name>
      <anchorfile>classWsModPdf.html</anchorfile>
      <anchor>ae5b9a41e320abf30895c3fc0d43d27f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsModPdf</name>
      <anchorfile>classWsModPdf.html</anchorfile>
      <anchor>a9ba3fb9e0ff6d2ba70081ebf338a1557</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContentsMenuBar</name>
      <anchorfile>classWsModPdf.html</anchorfile>
      <anchor>aacc16e63a732c4cf52fbfe558bd92e79</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContents</name>
      <anchorfile>classWsModPdf.html</anchorfile>
      <anchor>a2c98ec85828eaa19ee8319092f82a349</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>WsEditorWidget *</type>
      <name>createEditor</name>
      <anchorfile>classWsModPdf.html</anchorfile>
      <anchor>a057ea0d34bacb36358694ce90d1a9642</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createAdmin</name>
      <anchorfile>classWsModPdf.html</anchorfile>
      <anchor>a62789b38f4c9a1405353c47069f63d9d</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveEditor</name>
      <anchorfile>classWsModPdf.html</anchorfile>
      <anchor>ae8a7a26eeb3a6c833c15f90bfc53784f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classWsModPdf.html</anchorfile>
      <anchor>ab7e6361660897023369107f24de1a338</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsModRSS</name>
    <filename>classWsModRSS.html</filename>
    <base>WsModule</base>
    <member kind="function">
      <type></type>
      <name>WsModRSS</name>
      <anchorfile>classWsModRSS.html</anchorfile>
      <anchor>a2c83d3c207ae37ba06b14c13a7f3a24b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsModRSS</name>
      <anchorfile>classWsModRSS.html</anchorfile>
      <anchor>a0646cebb6b66d2d93c7190a6b0dd27dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContentsMenuBar</name>
      <anchorfile>classWsModRSS.html</anchorfile>
      <anchor>ab129e34d397a22348c9f0ffbfd32b921</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContents</name>
      <anchorfile>classWsModRSS.html</anchorfile>
      <anchor>a7163e9d2a6989c58ff84ab4f1ba06798</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>WsEditorWidget *</type>
      <name>createEditor</name>
      <anchorfile>classWsModRSS.html</anchorfile>
      <anchor>a73e4a155e877707ee511cf9d99c4a5e4</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createAdmin</name>
      <anchorfile>classWsModRSS.html</anchorfile>
      <anchor>aa3f6bf2cc94448d99824fb185aaef7c2</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classWsModRSS.html</anchorfile>
      <anchor>a68b85d70d41f7345951a3c87847b6623</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildMenuBar</name>
      <anchorfile>classWsModRSS.html</anchorfile>
      <anchor>a149db73c1c9c8f6f680b3a55afcd5cc4</anchor>
      <arglist>(Wt::WContainerWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsModTwitter</name>
    <filename>classWsModTwitter.html</filename>
    <base>WsModule</base>
    <member kind="slot">
      <type>void</type>
      <name>handleTwitterClick</name>
      <anchorfile>classWsModTwitter.html</anchorfile>
      <anchor>a23037e321ab6c83d164f3c0011466f36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsModTwitter</name>
      <anchorfile>classWsModTwitter.html</anchorfile>
      <anchor>a159ad13842e88997df9080c0abcd03ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsModTwitter</name>
      <anchorfile>classWsModTwitter.html</anchorfile>
      <anchor>a3c83944cc849e605b9b95894bc72134c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContentsMenuBar</name>
      <anchorfile>classWsModTwitter.html</anchorfile>
      <anchor>ad146fcd2961141054b29923e7988a282</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>destroyContentsMenuBar</name>
      <anchorfile>classWsModTwitter.html</anchorfile>
      <anchor>ad21e1d20a2ab6c8560be8c9c9f614090</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContents</name>
      <anchorfile>classWsModTwitter.html</anchorfile>
      <anchor>a680bcf0741b66bb32cff490c43dd768e</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>WsEditorWidget *</type>
      <name>createEditor</name>
      <anchorfile>classWsModTwitter.html</anchorfile>
      <anchor>a5dc31b432ed1b80d237037abdac34a46</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createAdmin</name>
      <anchorfile>classWsModTwitter.html</anchorfile>
      <anchor>aa60de6b4d5055d8c5523c235335c4313</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classWsModTwitter.html</anchorfile>
      <anchor>a85105efe732a071b063ad25cf0355657</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>Wt::WWidget *</type>
      <name>buildMenuBar</name>
      <anchorfile>classWsModTwitter.html</anchorfile>
      <anchor>a308528b09520fed2df10890c662ef019</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WPushButton *</type>
      <name>m_buttonReTweet</name>
      <anchorfile>classWsModTwitter.html</anchorfile>
      <anchor>aff5bf883899fb1307838b8d709a2ba79</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsModule</name>
    <filename>classWsModule.html</filename>
    <base>WsOptions</base>
    <member kind="function">
      <type></type>
      <name>WsModule</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>a8320098e0279a8d59c5b7a5ad6a97eca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Wt::WWidget *</type>
      <name>createContentsMenuBar</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>ae2ea3dec28e4424df98814416c9eeaa1</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Wt::WWidget *</type>
      <name>createContents</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>a8d4a39097c5906c52e9a99e11f86c50d</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WsEditorWidget *</type>
      <name>createEditor</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>aa8b8865d8904171e9a111a4523899480</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Wt::WWidget *</type>
      <name>createAdmin</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>ab8c1127dab5e802de2523853296add66</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>ae52d0ba9747ed56cddc5998685c2aeff</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_moduleName</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>ab43943c541967d9d04deefa1246e9c9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_soName</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>a517de664bf6df3b0cb2894e07c34e0b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_fileName</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>a09d47aa6b294817e33767556a7644c22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_extension</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>af56f46d09e48a9bb327a029b2f69bb2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_prefix</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>a26596ab15f32dad0957ad3c5f52182ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>m_extensions</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>aba00708478fccc71caefe12e45904dbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_sysPath</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>a8b82ddf9857e55cc6e70f46cdff13185</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_diffPath</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>ad5edc7a7726c3f1ffd217058c35f9c9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_bLoaded</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>a2d0e8b7dc28d20be94364909e7e613fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_bHideImages</name>
      <anchorfile>classWsModule.html</anchorfile>
      <anchor>a1a3039cf4215695d42797e8b70cf347d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsModuleLoader</name>
    <filename>classWsModuleLoader.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>dlfcnHandler</name>
      <anchorfile>classWsModuleLoader.html</anchorfile>
      <anchor>a9b8ed503fd9a78e5619c629283cc239b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WsModule *</type>
      <name>module</name>
      <anchorfile>classWsModuleLoader.html</anchorfile>
      <anchor>aa40b1415529396e7afcf417c9b4e3369</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsModulesLoader</name>
    <filename>classWsModulesLoader.html</filename>
    <member kind="function">
      <type></type>
      <name>WsModulesLoader</name>
      <anchorfile>classWsModulesLoader.html</anchorfile>
      <anchor>a000a1cdb3cb1e1e5b28411527a1ce85a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsModulesLoader</name>
      <anchorfile>classWsModulesLoader.html</anchorfile>
      <anchor>a5bea5244e17a19fb2d1ad47a83bb1511</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>load</name>
      <anchorfile>classWsModulesLoader.html</anchorfile>
      <anchor>a0e674b011edf7a0448557081d2d38154</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; WsModuleLoader * &gt; &amp;</type>
      <name>modules</name>
      <anchorfile>classWsModulesLoader.html</anchorfile>
      <anchor>a5469c485c29608bfb81468cc7c08a115</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const WsModule *</type>
      <name>module</name>
      <anchorfile>classWsModulesLoader.html</anchorfile>
      <anchor>ad4f6b4dc69ab16b7a8f0c982bafab995</anchor>
      <arglist>(const std::string &amp;moduleName)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>pathWithoutPrefix</name>
      <anchorfile>classWsModulesLoader.html</anchorfile>
      <anchor>ab416060c4fd458f6bddd1960d1b1b772</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>checkPath</name>
      <anchorfile>classWsModulesLoader.html</anchorfile>
      <anchor>a696200eea7fd79a1e6eaac132fb23e9f</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::string</type>
      <name>removePrefix</name>
      <anchorfile>classWsModulesLoader.html</anchorfile>
      <anchor>a3486a083430f524b5f96c181ce3a1b7a</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; WsModuleLoader * &gt;</type>
      <name>m_vModules</name>
      <anchorfile>classWsModulesLoader.html</anchorfile>
      <anchor>a34ef9d6cb99ccbe7b383eedebefa7886</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsModVideo</name>
    <filename>classWsModVideo.html</filename>
    <base>WsModule</base>
    <member kind="function">
      <type></type>
      <name>WsModVideo</name>
      <anchorfile>classWsModVideo.html</anchorfile>
      <anchor>aa5cf3730149efb19494c79590d898092</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsModVideo</name>
      <anchorfile>classWsModVideo.html</anchorfile>
      <anchor>a70caa2b739713806ba04f6523e004e17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContentsMenuBar</name>
      <anchorfile>classWsModVideo.html</anchorfile>
      <anchor>abdf34e2a1717cae2679751169a8b7610</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContents</name>
      <anchorfile>classWsModVideo.html</anchorfile>
      <anchor>a3c9ed9092a25154a79c0671816e72dc2</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>WsEditorWidget *</type>
      <name>createEditor</name>
      <anchorfile>classWsModVideo.html</anchorfile>
      <anchor>ae1e8a304a123109ddf677b9fc6fac1c2</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createAdmin</name>
      <anchorfile>classWsModVideo.html</anchorfile>
      <anchor>a081cadd3b25cef946bef96d3df909436</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classWsModVideo.html</anchorfile>
      <anchor>adfe25c80375fc0b991c01689b08f8b29</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsModZip</name>
    <filename>classWsModZip.html</filename>
    <base>WsModule</base>
    <member kind="slot">
      <type>void</type>
      <name>handleZipClick</name>
      <anchorfile>classWsModZip.html</anchorfile>
      <anchor>a861e0a9290c136361a40164cb9161072</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>handleAccept</name>
      <anchorfile>classWsModZip.html</anchorfile>
      <anchor>a0302044f92c076aac60d06ce19f0e653</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>handleReject</name>
      <anchorfile>classWsModZip.html</anchorfile>
      <anchor>acb60b69dcaa0cdb96858ed21cba7b18b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsModZip</name>
      <anchorfile>classWsModZip.html</anchorfile>
      <anchor>a51a206f08e2f8d107594d9d5c88bede5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsModZip</name>
      <anchorfile>classWsModZip.html</anchorfile>
      <anchor>a101e06625931e2b874ca77cca4b74838</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContentsMenuBar</name>
      <anchorfile>classWsModZip.html</anchorfile>
      <anchor>a1b1adb89a0d3a62364d3d26e2d204d41</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>destroyContentsMenuBar</name>
      <anchorfile>classWsModZip.html</anchorfile>
      <anchor>a2104dfd78465a9c0aa4b5003057600ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createContents</name>
      <anchorfile>classWsModZip.html</anchorfile>
      <anchor>a77d6a865f5c7d487a659111313c64784</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>WsEditorWidget *</type>
      <name>createEditor</name>
      <anchorfile>classWsModZip.html</anchorfile>
      <anchor>a5cd34b368f8a49dec41625a06ce96fde</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>createAdmin</name>
      <anchorfile>classWsModZip.html</anchorfile>
      <anchor>a915c906af72707d18fd742dc61d9d61f</anchor>
      <arglist>(Wt::WContainerWidget *parent=0) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classWsModZip.html</anchorfile>
      <anchor>a69fb592fd9400295b31be65bebdf2e45</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>Wt::WWidget *</type>
      <name>buildEditor</name>
      <anchorfile>classWsModZip.html</anchorfile>
      <anchor>aeca1ab25e4184a8f6adbd70c044311f4</anchor>
      <arglist>(Wt::WContainerWidget *parent)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Wt::WWidget *</type>
      <name>buildMenuBar</name>
      <anchorfile>classWsModZip.html</anchorfile>
      <anchor>a15a8b6b3c9d78cc6bfa23a825c3444fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>appendToZip</name>
      <anchorfile>classWsModZip.html</anchorfile>
      <anchor>ad4273b6cff6959fe418d16b8d5477533</anchor>
      <arglist>(const string &amp;path)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>appendSubDir</name>
      <anchorfile>classWsModZip.html</anchorfile>
      <anchor>a34eb1d111dc2d35d928b001ed0135f75</anchor>
      <arglist>(const string &amp;path)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>writeAndCloseZip</name>
      <anchorfile>classWsModZip.html</anchorfile>
      <anchor>abb67852121ad151ead5368091f8a989a</anchor>
      <arglist>(int format)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>handleAll</name>
      <anchorfile>classWsModZip.html</anchorfile>
      <anchor>a4828d70acaa9d1e3e568633fcfb2db45</anchor>
      <arglist>(int t)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>handleFiles</name>
      <anchorfile>classWsModZip.html</anchorfile>
      <anchor>a68b5155de3288e55e4af783f4576dc5f</anchor>
      <arglist>(int t)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; string &gt;</type>
      <name>m_paths</name>
      <anchorfile>classWsModZip.html</anchorfile>
      <anchor>a47d62a06006f334436de1e52a8e51446</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WDialog *</type>
      <name>m_dialog</name>
      <anchorfile>classWsModZip.html</anchorfile>
      <anchor>ace399cffee4b10592dafe83bb8a147d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WRadioButton *</type>
      <name>m_all</name>
      <anchorfile>classWsModZip.html</anchorfile>
      <anchor>a571410328688af40fd56baf1dd3bedee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WRadioButton *</type>
      <name>m_fonly</name>
      <anchorfile>classWsModZip.html</anchorfile>
      <anchor>a921f6ab408e613fa42562dc623fadbfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WRadioButton *</type>
      <name>m_tar</name>
      <anchorfile>classWsModZip.html</anchorfile>
      <anchor>a8fde838fc59e16f3ae848352081d5408</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WRadioButton *</type>
      <name>m_zip</name>
      <anchorfile>classWsModZip.html</anchorfile>
      <anchor>a1f1dcf66b0f63e20939239f6ea3f5740</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WGroupBox *</type>
      <name>m_container</name>
      <anchorfile>classWsModZip.html</anchorfile>
      <anchor>a3702d15fd94ca89bf1495d7a44246a6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WGroupBox *</type>
      <name>m_container2</name>
      <anchorfile>classWsModZip.html</anchorfile>
      <anchor>a9b0459d0aef29e1a52c3f3a840dcbfac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WButtonGroup *</type>
      <name>m_archiveType</name>
      <anchorfile>classWsModZip.html</anchorfile>
      <anchor>ab698004e422540e39648ddb2f7df28a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WButtonGroup *</type>
      <name>m_fileType</name>
      <anchorfile>classWsModZip.html</anchorfile>
      <anchor>a147c48d1c1d7e016a418e4a2be391e67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WPushButton *</type>
      <name>m_ok</name>
      <anchorfile>classWsModZip.html</anchorfile>
      <anchor>a03912332a033b68e9345e6fe7134f785</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WPushButton *</type>
      <name>m_cancel</name>
      <anchorfile>classWsModZip.html</anchorfile>
      <anchor>a9a6392002a563b85361069516c52b4f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WLabel *</type>
      <name>m_loading</name>
      <anchorfile>classWsModZip.html</anchorfile>
      <anchor>ab68e48f1f3cb4f37155f8e55932b6946</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WLabel *</type>
      <name>m_label</name>
      <anchorfile>classWsModZip.html</anchorfile>
      <anchor>a568dc83e5417b9d2cf0f258b341c7d49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>string</type>
      <name>m_errmsg</name>
      <anchorfile>classWsModZip.html</anchorfile>
      <anchor>ad8cd8643d4c0067e02eec6c64159c4e1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsMonitor</name>
    <filename>classWsMonitor.html</filename>
    <base>WsAbstractMonitor</base>
    <member kind="function">
      <type></type>
      <name>WsMonitor</name>
      <anchorfile>classWsMonitor.html</anchorfile>
      <anchor>abb865333cc5f1e2895ee33d6810d798f</anchor>
      <arglist>(WsFsTreeUpdater *u, std::vector&lt; path &gt; v, unsigned int delay)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsMonitor</name>
      <anchorfile>classWsMonitor.html</anchorfile>
      <anchor>ae5b9f4459ab857cb8ec5d90a6866e65e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boost::thread *</type>
      <name>start</name>
      <anchorfile>classWsMonitor.html</anchorfile>
      <anchor>ae528d810f2d1b82634e6297c45569d37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>startCallBack</name>
      <anchorfile>classWsMonitor.html</anchorfile>
      <anchor>a3d1887ca1598b3f13e602d3bedfee868</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>startCallBackConfOnly</name>
      <anchorfile>classWsMonitor.html</anchorfile>
      <anchor>a5cfb31a222c13cc48adb63beede50068</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>startChecker</name>
      <anchorfile>classWsMonitor.html</anchorfile>
      <anchor>a3d6b4527581c30919b32b270151d01fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>addDirectory</name>
      <anchorfile>classWsMonitor.html</anchorfile>
      <anchor>a84975bea7fa7f17541b5863d557e2559</anchor>
      <arglist>(const path &amp;p)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const char *</type>
      <name>eventName</name>
      <anchorfile>classWsMonitor.html</anchorfile>
      <anchor>a6ce26ee1cd779a85a081359d3df15bba</anchor>
      <arglist>(const int &amp;code)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>signal</name>
      <anchorfile>classWsMonitor.html</anchorfile>
      <anchor>aa32cab0265d0b81d5937126b46325b41</anchor>
      <arglist>(const std::string &amp;filename, const int &amp;code)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>signalConf</name>
      <anchorfile>classWsMonitor.html</anchorfile>
      <anchor>a578d8f7785f9023df702c87d65d4b768</anchor>
      <arglist>(const std::string &amp;filename, const int &amp;code)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; path &gt;</type>
      <name>m_paths</name>
      <anchorfile>classWsMonitor.html</anchorfile>
      <anchor>a454896fc4c15ed688c561d6486934adc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WsFsTreeUpdater *</type>
      <name>m_updater</name>
      <anchorfile>classWsMonitor.html</anchorfile>
      <anchor>aabc1651f5c3d8ea193ba63215f8c10f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_updated</name>
      <anchorfile>classWsMonitor.html</anchorfile>
      <anchor>ab70c159a47ed1e511323b2edd9b9ec2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>m_delay</name>
      <anchorfile>classWsMonitor.html</anchorfile>
      <anchor>a62b96427b956ff9d2a42c2bd5bf1e22b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>FAMRequest *</type>
      <name>m_frp</name>
      <anchorfile>classWsMonitor.html</anchorfile>
      <anchor>ad5fc58d0920b5e7d8d8fbfc6ca4b7160</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>FAMRequest *</type>
      <name>m_frp2</name>
      <anchorfile>classWsMonitor.html</anchorfile>
      <anchor>a530743a2573b13de339d4f8ccb3d5c51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>FAMConnection *</type>
      <name>m_fc</name>
      <anchorfile>classWsMonitor.html</anchorfile>
      <anchor>a0a0a77debb4abeddc95946b3f4cf5e59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>FAMConnection *</type>
      <name>m_fc2</name>
      <anchorfile>classWsMonitor.html</anchorfile>
      <anchor>aa8e711776fbe5be0489e17ca47b36cee</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsNewsLetter</name>
    <filename>classWsNewsLetter.html</filename>
    <base>WsOptions</base>
    <member kind="enumeration">
      <type></type>
      <name>emailAvailability</name>
      <anchorfile>classWsNewsLetter.html</anchorfile>
      <anchor>a259e795d1b0caf3619cb26253027d1c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>ldapError</name>
      <anchorfile>classWsNewsLetter.html</anchorfile>
      <anchor>a259e795d1b0caf3619cb26253027d1c6a444b577656e6f2ea959b415249826e88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>emailNotAvailable</name>
      <anchorfile>classWsNewsLetter.html</anchorfile>
      <anchor>a259e795d1b0caf3619cb26253027d1c6abd915391e8b5ed28a1ee5d3085866743</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>emailAvailable</name>
      <anchorfile>classWsNewsLetter.html</anchorfile>
      <anchor>a259e795d1b0caf3619cb26253027d1c6a1db5f104281136be0d4da234a04bed23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>emailMultiple</name>
      <anchorfile>classWsNewsLetter.html</anchorfile>
      <anchor>a259e795d1b0caf3619cb26253027d1c6a454a7d7a6c0f9c3ec303a9fbd04d5aa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>doLineEditChanged</name>
      <anchorfile>classWsNewsLetter.html</anchorfile>
      <anchor>acce3eb3f6d1cff5e112d4896dc73b819</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>doSubscribe</name>
      <anchorfile>classWsNewsLetter.html</anchorfile>
      <anchor>a198b1cc8bb94ef7fcda31498af703991</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsNewsLetter</name>
      <anchorfile>classWsNewsLetter.html</anchorfile>
      <anchor>ab87c1d831d22bfe5b659bd265f162d59</anchor>
      <arglist>(Wt::WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsNewsLetter</name>
      <anchorfile>classWsNewsLetter.html</anchorfile>
      <anchor>a500417ef751bccc4bbe4d20e8aa5b86b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classWsNewsLetter.html</anchorfile>
      <anchor>ae03d59042e3417ef158fd277580cfebb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initDB</name>
      <anchorfile>classWsNewsLetter.html</anchorfile>
      <anchor>a42d7ee5044c1374a9a38b9b9b9a7d483</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>emailAvailability</type>
      <name>isEmailExistInLdap</name>
      <anchorfile>classWsNewsLetter.html</anchorfile>
      <anchor>aaf393a70631c5fd1e1eacc9db5595f3a</anchor>
      <arglist>(const std::string &amp;email)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emailNotInLdap</name>
      <anchorfile>classWsNewsLetter.html</anchorfile>
      <anchor>a338e6b7ff81d2881190832c38e29dcbf</anchor>
      <arglist>(const std::string &amp;email)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multipleEmail</name>
      <anchorfile>classWsNewsLetter.html</anchorfile>
      <anchor>aefea0752dcb0bc96d1df27d6b5f7e7bf</anchor>
      <arglist>(const std::string &amp;email)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendEmail</name>
      <anchorfile>classWsNewsLetter.html</anchorfile>
      <anchor>a3aed8da5b70e51c2f856aa95479718f8</anchor>
      <arglist>(const std::string &amp;email, const std::string &amp;sSubject, const std::string &amp;sBody, const std::string &amp;sBodyPlain)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>checkPath</name>
      <anchorfile>classWsNewsLetter.html</anchorfile>
      <anchor>a3a54c5a3cc7ebb61097000ca580c3102</anchor>
      <arglist>(const std::string &amp;currentPath)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerValidEmail</name>
      <anchorfile>classWsNewsLetter.html</anchorfile>
      <anchor>acd3d0d194cb7d9037770a2c7db48ec21</anchor>
      <arglist>(const std::string &amp;email)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsNewsLetter</name>
      <anchorfile>classWsNewsLetter.html</anchorfile>
      <anchor>a3869f4a67fbc10f70463e2f01d309523</anchor>
      <arglist>(WContainerWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsNewsLetter</name>
      <anchorfile>classWsNewsLetter.html</anchorfile>
      <anchor>a500417ef751bccc4bbe4d20e8aa5b86b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>createUser</name>
      <anchorfile>classWsNewsLetter.html</anchorfile>
      <anchor>a094adf8c0ab18f55860b8f8b4c01659e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>sendConfirmMail</name>
      <anchorfile>classWsNewsLetter.html</anchorfile>
      <anchor>a9173f507b5904b8c308d28b30122b26e</anchor>
      <arglist>(const std::string &amp;email, const std::string &amp;userToken) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>sendMail</name>
      <anchorfile>classWsNewsLetter.html</anchorfile>
      <anchor>ac46ba441e65f9788213f9e9d4bf6c6e9</anchor>
      <arglist>(const Mail::Message &amp;message) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WLineEdit *</type>
      <name>m_pLineEdit</name>
      <anchorfile>classWsNewsLetter.html</anchorfile>
      <anchor>ab2f62f38fdbd46a4affbe059f701e3c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WPushButton *</type>
      <name>m_pButSubscribe</name>
      <anchorfile>classWsNewsLetter.html</anchorfile>
      <anchor>a20aca9dd22ba4860045218d0117f62e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>dbo::Session</type>
      <name>session_</name>
      <anchorfile>classWsNewsLetter.html</anchorfile>
      <anchor>a55999edbcb8ab6c758c6dbe455adb7da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>dbo::backend::Sqlite3 *</type>
      <name>sqlite3_</name>
      <anchorfile>classWsNewsLetter.html</anchorfile>
      <anchor>a0770dfaed7c2bf316818c14a73b092c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WText *</type>
      <name>info_</name>
      <anchorfile>classWsNewsLetter.html</anchorfile>
      <anchor>aaff2d69c7897676dcdda1e76082cfabe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WLineEdit *</type>
      <name>emailLE_</name>
      <anchorfile>classWsNewsLetter.html</anchorfile>
      <anchor>a01507d8473fecb105d03b39e974e8fcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WPushButton *</type>
      <name>button_</name>
      <anchorfile>classWsNewsLetter.html</anchorfile>
      <anchor>ac5a38e7f1c9f0b86c612d3d3026b1fd3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsNode</name>
    <filename>classWsNode.html</filename>
    <base>WsAbstractNode</base>
    <class kind="struct">WsNode::compareNodes</class>
    <member kind="function">
      <type></type>
      <name>WsNode</name>
      <anchorfile>classWsNode.html</anchorfile>
      <anchor>a8dac89cd2270caafd6ea53f5fe195c48</anchor>
      <arglist>(const path &amp;fullPath, const path &amp;rootPath)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsNode</name>
      <anchorfile>classWsNode.html</anchorfile>
      <anchor>a8dfb1f900ce825ec4f5fbe0f97e00e81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WsNode</name>
      <anchorfile>classWsNode.html</anchorfile>
      <anchor>a7d9615163471e40a17c2d6b93cb16821</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isDirectory</name>
      <anchorfile>classWsNode.html</anchorfile>
      <anchor>a31a556a019ba1e4ae83fb7e115f19a2b</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isRegularFile</name>
      <anchorfile>classWsNode.html</anchorfile>
      <anchor>a63499d18df618e28cf3ca37dde841c3e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const uintmax_t</type>
      <name>getSize</name>
      <anchorfile>classWsNode.html</anchorfile>
      <anchor>ab91ff195891b8b58a7e292a309ae7f77</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>WsNode::compareNodes</name>
    <filename>structWsNode_1_1compareNodes.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structWsNode_1_1compareNodes.html</anchorfile>
      <anchor>a96bba55076e8993ae02a4b169a0b05fc</anchor>
      <arglist>(NodePtr lhs, NodePtr rhs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsNodeProperties</name>
    <filename>classWsNodeProperties.html</filename>
    <base>WsAbstractProperties</base>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classWsNodeProperties.html</anchorfile>
      <anchor>a174f703b94209df3c4f23a20b2e704d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>File</name>
      <anchorfile>classWsNodeProperties.html</anchorfile>
      <anchor>a174f703b94209df3c4f23a20b2e704d3a08e126224874bf1e495dae8510e576fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Dir</name>
      <anchorfile>classWsNodeProperties.html</anchorfile>
      <anchor>a174f703b94209df3c4f23a20b2e704d3ac809d6f16b75591efde25daad221d9f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsNodeProperties</name>
      <anchorfile>classWsNodeProperties.html</anchorfile>
      <anchor>adf54fc6a2699cd575550553aa06a13af</anchor>
      <arglist>(boost::filesystem::path nodePath, Type t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsNodeProperties</name>
      <anchorfile>classWsNodeProperties.html</anchorfile>
      <anchor>a3f8bef49a52b4eb92cfdf607682d4d55</anchor>
      <arglist>(std::string jsonInput)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsNodeProperties</name>
      <anchorfile>classWsNodeProperties.html</anchorfile>
      <anchor>a5cf2c29c19180cd759889b7e31771373</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get</name>
      <anchorfile>classWsNodeProperties.html</anchorfile>
      <anchor>a041231e08896487922388098d8cec32f</anchor>
      <arglist>(const std::string &amp;section, const std::string &amp;id, const std::string &amp;def)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; std::string &gt;</type>
      <name>getGroups</name>
      <anchorfile>classWsNodeProperties.html</anchorfile>
      <anchor>a8c4d77ca3d1f4800f0a6f5557c58df8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAllowed</name>
      <anchorfile>classWsNodeProperties.html</anchorfile>
      <anchor>a01e7d8ad3f0d93fcf9adc39aef74d220</anchor>
      <arglist>(std::set&lt; std::string &gt; gids)</arglist>
    </member>
    <member kind="function">
      <type>Json::Value</type>
      <name>getRoot</name>
      <anchorfile>classWsNodeProperties.html</anchorfile>
      <anchor>ae89729a7ab7f330fd5ad61992a3795b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRoot</name>
      <anchorfile>classWsNodeProperties.html</anchorfile>
      <anchor>a417e35d996a5a1f660fce5231d9624bc</anchor>
      <arglist>(Json::Value root)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRoot</name>
      <anchorfile>classWsNodeProperties.html</anchorfile>
      <anchor>a4059c4597af9be2a1e741d8b32fe3796</anchor>
      <arglist>(const std::string &amp;jsonInput)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classWsNodeProperties.html</anchorfile>
      <anchor>a85541b722748ba0f5d9bf6d57413d808</anchor>
      <arglist>(const std::string &amp;section, const std::string &amp;key, const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGroups</name>
      <anchorfile>classWsNodeProperties.html</anchorfile>
      <anchor>a6707a93808c0d38547b4b202a47c0668</anchor>
      <arglist>(std::set&lt; std::string &gt; grps)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>createPropertiesDirectories</name>
      <anchorfile>classWsNodeProperties.html</anchorfile>
      <anchor>a455f0fe18cb65cbba65a8e34dccd2d11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>save</name>
      <anchorfile>classWsNodeProperties.html</anchorfile>
      <anchor>a7e7090d12c4924dec5570e9b02aef3d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getPath</name>
      <anchorfile>classWsNodeProperties.html</anchorfile>
      <anchor>acee2f6235f3888378771b2be26b3dc69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::filesystem::path</type>
      <name>m_nodePath</name>
      <anchorfile>classWsNodeProperties.html</anchorfile>
      <anchor>aac75a6e33c1aa35c7b6e28eb4b3ee8d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Type</type>
      <name>m_type</name>
      <anchorfile>classWsNodeProperties.html</anchorfile>
      <anchor>a85a6cef175ccb208c338e0892a434016</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::mutex</type>
      <name>m_mutex</name>
      <anchorfile>classWsNodeProperties.html</anchorfile>
      <anchor>a5622398184fabe43073adceaf9ce0c2d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsNodeResources</name>
    <filename>classWsNodeResources.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classWsNodeResources.html</anchorfile>
      <anchor>a7b047e8a513961d62d7ed2773df852d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Icones</name>
      <anchorfile>classWsNodeResources.html</anchorfile>
      <anchor>a7b047e8a513961d62d7ed2773df852d5a50afce7afde5653372cf5edf5e8fdebe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Images</name>
      <anchorfile>classWsNodeResources.html</anchorfile>
      <anchor>a7b047e8a513961d62d7ed2773df852d5af8c13c8093a8e79ee0d4b59f60eb0e41</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Templates</name>
      <anchorfile>classWsNodeResources.html</anchorfile>
      <anchor>a7b047e8a513961d62d7ed2773df852d5a2ca321842ae82091714882a172ab618f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsNodeResources</name>
      <anchorfile>classWsNodeResources.html</anchorfile>
      <anchor>a2db39b421be6ce07e154fd2377288e28</anchor>
      <arglist>(boost::filesystem::path nodePath)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; std::string &gt; &amp;</type>
      <name>get</name>
      <anchorfile>classWsNodeResources.html</anchorfile>
      <anchor>a41236bf3c852db44476a7973187f9442</anchor>
      <arglist>(Type t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classWsNodeResources.html</anchorfile>
      <anchor>a57d673d80223322f5203f3f9b4185381</anchor>
      <arglist>(Type, const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>createResourcesDirectories</name>
      <anchorfile>classWsNodeResources.html</anchorfile>
      <anchor>a756c51413ff1d8144966b1a8f59beb2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>m_iconesUrl</name>
      <anchorfile>classWsNodeResources.html</anchorfile>
      <anchor>a541a87e61c186175706680ce41be3421</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>m_imagesUrl</name>
      <anchorfile>classWsNodeResources.html</anchorfile>
      <anchor>ae72e0f9aea0324f04d3adb35a78c1754</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>m_templatesUrl</name>
      <anchorfile>classWsNodeResources.html</anchorfile>
      <anchor>aa85c54cf78c3bd90d79cb178c703d264</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::filesystem::path</type>
      <name>m_nodePath</name>
      <anchorfile>classWsNodeResources.html</anchorfile>
      <anchor>af226e956a033e84b1b5c78bac8f57594</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsOdf</name>
    <filename>classWsOdf.html</filename>
    <base>WsOptions</base>
    <member kind="function">
      <type></type>
      <name>WsOdf</name>
      <anchorfile>classWsOdf.html</anchorfile>
      <anchor>a92c30a800d0217d1328e9e49b9b1475d</anchor>
      <arglist>(Wt::WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsOdf</name>
      <anchorfile>classWsOdf.html</anchorfile>
      <anchor>af8f9110f703d18c7b7bbeca6093447a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDiffPath</name>
      <anchorfile>classWsOdf.html</anchorfile>
      <anchor>a5529a8119158fa1fb7dda5772515ff1e</anchor>
      <arglist>(const std::string &amp;diffPath)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>load</name>
      <anchorfile>classWsOdf.html</anchorfile>
      <anchor>a2303ba4e47ffd0b784f96c5f12ba08a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_sDiffPath</name>
      <anchorfile>classWsOdf.html</anchorfile>
      <anchor>a6ecaf6b6fcbfdd2055e074b007a9e65b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsOption</name>
    <filename>classWsOption.html</filename>
    <member kind="function">
      <type></type>
      <name>WsOption</name>
      <anchorfile>classWsOption.html</anchorfile>
      <anchor>a61a932fc9d7c7b9663cf9067fad6c872</anchor>
      <arglist>(const std::string &amp;attribute, const boost::any value)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>attribute</name>
      <anchorfile>classWsOption.html</anchorfile>
      <anchor>ac710c524c5958a1661789769f54153f9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classWsOption.html</anchorfile>
      <anchor>a7f1c87637e06f38fb7e7fa13ac851e52</anchor>
      <arglist>(const boost::any &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>const boost::any &amp;</type>
      <name>value</name>
      <anchorfile>classWsOption.html</anchorfile>
      <anchor>aea4485f8db933b42c8bb4bfa58ad7169</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_sAttribute</name>
      <anchorfile>classWsOption.html</anchorfile>
      <anchor>a8a81cc774e89575afa2b4cf8d6a460ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::any</type>
      <name>m_value</name>
      <anchorfile>classWsOption.html</anchorfile>
      <anchor>a514adb38cee8035bbe50fb5cf7862184</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsOptions</name>
    <filename>classWsOptions.html</filename>
    <member kind="function">
      <type></type>
      <name>WsOptions</name>
      <anchorfile>classWsOptions.html</anchorfile>
      <anchor>ad90389a56335022a6d50ba300119b459</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsOptions</name>
      <anchorfile>classWsOptions.html</anchorfile>
      <anchor>a6160afdb0d78d1a5eb33d6ca038d1d04</anchor>
      <arglist>(const std::vector&lt; WsOption &gt; &amp;vOptions)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsOptions</name>
      <anchorfile>classWsOptions.html</anchorfile>
      <anchor>ac376bda539d37b1866377dd8778b0b06</anchor>
      <arglist>(const WsOptions &amp;src)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; WsOption &gt;</type>
      <name>m_vOptions</name>
      <anchorfile>classWsOptions.html</anchorfile>
      <anchor>a5dd97e7bdb88ceb42bc705c3c9663fea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::any</type>
      <name>m_noOptions</name>
      <anchorfile>classWsOptions.html</anchorfile>
      <anchor>a4a33648c45eb6847006107986b175ebe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsPdf</name>
    <filename>classWsPdf.html</filename>
    <base>WsOptions</base>
    <member kind="function">
      <type></type>
      <name>WsPdf</name>
      <anchorfile>classWsPdf.html</anchorfile>
      <anchor>a345afbe338930fe126bd2a8a4670da3e</anchor>
      <arglist>(Wt::WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsPdf</name>
      <anchorfile>classWsPdf.html</anchorfile>
      <anchor>a0a7ed916b0952a43b5f368884ea227fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDiffPath</name>
      <anchorfile>classWsPdf.html</anchorfile>
      <anchor>a596001a7d9e267704b0a2f680600a10e</anchor>
      <arglist>(const std::string &amp;diffPath)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>load</name>
      <anchorfile>classWsPdf.html</anchorfile>
      <anchor>a39a4eb77163776c039de240c5c76f307</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_sDiffPath</name>
      <anchorfile>classWsPdf.html</anchorfile>
      <anchor>a6d3035ddd737e6b11df5fc40139df67f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsResultItem</name>
    <filename>classWsResultItem.html</filename>
    <base>WsFileNode</base>
    <member kind="function">
      <type></type>
      <name>WsResultItem</name>
      <anchorfile>classWsResultItem.html</anchorfile>
      <anchor>a9cd948201d4c47df835d5af13d734a32</anchor>
      <arglist>(const path &amp;fullPath, const path &amp;rootPath, std::string body, std::string type, int size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsResultItem</name>
      <anchorfile>classWsResultItem.html</anchorfile>
      <anchor>a7c53779f5d7b2e9e2a21d96d45b67a7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>getBody</name>
      <anchorfile>classWsResultItem.html</anchorfile>
      <anchor>a9eb85c14d77282d7269721ab21765d4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>getType</name>
      <anchorfile>classWsResultItem.html</anchorfile>
      <anchor>a6486c89251be0526a29eea98158e35a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_type</name>
      <anchorfile>classWsResultItem.html</anchorfile>
      <anchor>afb1f8bd75b961ea4aecc550c88accd33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_body</name>
      <anchorfile>classWsResultItem.html</anchorfile>
      <anchor>aaa2cac2073bd6dc743b9a3c495a5a36c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsRSS</name>
    <filename>classWsRSS.html</filename>
    <base>WsOptions</base>
    <member kind="slot">
      <type>void</type>
      <name>buildRSS</name>
      <anchorfile>classWsRSS.html</anchorfile>
      <anchor>a6d0043db0f876f8e5821da35436d0a68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsRSS</name>
      <anchorfile>classWsRSS.html</anchorfile>
      <anchor>a991e9db889e8edf769410975c1b3b2bb</anchor>
      <arglist>(Wt::WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsRSS</name>
      <anchorfile>classWsRSS.html</anchorfile>
      <anchor>a44f6bede15a77afd92354a7812a67f3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classWsRSS.html</anchorfile>
      <anchor>a13cae72308fe524115de3366f3de1634</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsSearch</name>
    <filename>classWsSearch.html</filename>
    <member kind="function">
      <type></type>
      <name>WsSearch</name>
      <anchorfile>classWsSearch.html</anchorfile>
      <anchor>a7cabaadea2022f8f6c912986815b67bb</anchor>
      <arglist>(FileSystemTreePtr fst, const std::string &amp;query)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsSearch</name>
      <anchorfile>classWsSearch.html</anchorfile>
      <anchor>adb71e3404adeae08e6047da225cbe5bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>load</name>
      <anchorfile>classWsSearch.html</anchorfile>
      <anchor>a73f996997cd5995aa905c47b33e9f1c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSize</name>
      <anchorfile>classWsSearch.html</anchorfile>
      <anchor>a3e491568b2d8d8422cfc8b5c50af3836</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>vector&lt; WsResultItem &gt;</type>
      <name>getResults</name>
      <anchorfile>classWsSearch.html</anchorfile>
      <anchor>a215497ff7118f83996b7d79368b4fe2c</anchor>
      <arglist>(const std::set&lt; std::string &gt; &amp;groups)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadModule</name>
      <anchorfile>classWsSearch.html</anchorfile>
      <anchor>a8c14f724c47c05125ab527c88960c393</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WsAbstractSearch *</type>
      <name>m_searchImpl</name>
      <anchorfile>classWsSearch.html</anchorfile>
      <anchor>aa0a3495f663147ed74af32f2bd2e0882</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>FileSystemTreePtr</type>
      <name>m_fst</name>
      <anchorfile>classWsSearch.html</anchorfile>
      <anchor>a50dfa9ec301e68b5498401dcb08e4728</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>string</type>
      <name>m_query</name>
      <anchorfile>classWsSearch.html</anchorfile>
      <anchor>adccc3214e0efa75fc03daa6eac85db11</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsSearchItem</name>
    <filename>classWsSearchItem.html</filename>
    <member kind="function">
      <type></type>
      <name>WsSearchItem</name>
      <anchorfile>classWsSearchItem.html</anchorfile>
      <anchor>afae06c11a4746feeba5d45cc8ba266a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsSearchItem</name>
      <anchorfile>classWsSearchItem.html</anchorfile>
      <anchor>aee11640fdf7fd69d36145dbc56dfe74d</anchor>
      <arglist>(const Wt::WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNode</name>
      <anchorfile>classWsSearchItem.html</anchorfile>
      <anchor>a1b87e8aa0f2fa2823b1c267fe0c8005d</anchor>
      <arglist>(WsAbstractNode *pNode)</arglist>
    </member>
    <member kind="function">
      <type>WsAbstractNode *</type>
      <name>node</name>
      <anchorfile>classWsSearchItem.html</anchorfile>
      <anchor>aa16580416e5eca72b316a4598f63cbad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WsAbstractNode *</type>
      <name>m_node</name>
      <anchorfile>classWsSearchItem.html</anchorfile>
      <anchor>ac2e042aa6349840a9da50dd5607c5c3a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsSearchObject</name>
    <filename>classWsSearchObject.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>doSearch</name>
      <anchorfile>classWsSearchObject.html</anchorfile>
      <anchor>a5c9476b7aad626e11ec7b892e2e2d2bb</anchor>
      <arglist>(Wt::WString sSearch)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>doFocussed</name>
      <anchorfile>classWsSearchObject.html</anchorfile>
      <anchor>a86d44563b9defc4ef9fe3bff07dfb872</anchor>
      <arglist>(Wt::WString sSearch)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>doBlurred</name>
      <anchorfile>classWsSearchObject.html</anchorfile>
      <anchor>a6c8bf34973bd65818e9c3c0c58c3301a</anchor>
      <arglist>(Wt::WString sSearch)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsSearchObject</name>
      <anchorfile>classWsSearchObject.html</anchorfile>
      <anchor>aa27e140c2f69d8e941b9b3b60c2d1641</anchor>
      <arglist>(Wt::WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsSearchObject</name>
      <anchorfile>classWsSearchObject.html</anchorfile>
      <anchor>ad0585133736f89bf3c77553d8b1b97e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_searchPath</name>
      <anchorfile>classWsSearchObject.html</anchorfile>
      <anchor>ac7cc115d6c0bfdd8cb7a7feddb2e5bad</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsSearchRSS</name>
    <filename>classWsSearchRSS.html</filename>
    <base>WsTreeTraversal</base>
    <member kind="function">
      <type></type>
      <name>WsSearchRSS</name>
      <anchorfile>classWsSearchRSS.html</anchorfile>
      <anchor>a49583af22e7261eb20a829a08e971a71</anchor>
      <arglist>(NodePtr mt)</arglist>
    </member>
    <member kind="function">
      <type>vector&lt; NodePtr &gt;</type>
      <name>getRSS</name>
      <anchorfile>classWsSearchRSS.html</anchorfile>
      <anchor>a304f31fdc6b2546b9351b3779f7afc01</anchor>
      <arglist>(int nb)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>beginTraverseDir</name>
      <anchorfile>classWsSearchRSS.html</anchorfile>
      <anchor>af64aad399125c24b665ecd8cbd456987</anchor>
      <arglist>(NodePtr n)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>endTraverseDir</name>
      <anchorfile>classWsSearchRSS.html</anchorfile>
      <anchor>a790c21084776faebaecdf24341fdd3e2</anchor>
      <arglist>(NodePtr n)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>traverseFile</name>
      <anchorfile>classWsSearchRSS.html</anchorfile>
      <anchor>aa10dc332f6ab2a9cbaffc6af0e62a107</anchor>
      <arglist>(NodePtr n)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; NodePtr &gt;</type>
      <name>m_vect</name>
      <anchorfile>classWsSearchRSS.html</anchorfile>
      <anchor>a20e3eb9b329ca42a171474d364df7585</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>m_maxSize</name>
      <anchorfile>classWsSearchRSS.html</anchorfile>
      <anchor>ab4ff3b1a112d5d9c089d76762d4c2590</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsSearchView</name>
    <filename>classWsSearchView.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>onViewSelectionChanged</name>
      <anchorfile>classWsSearchView.html</anchorfile>
      <anchor>a679527172b31b2a4e89b32eb03b8d774</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>onViewDblClick</name>
      <anchorfile>classWsSearchView.html</anchorfile>
      <anchor>ac0bf9ec08623fb2fc6365901f99c0d1d</anchor>
      <arglist>(Wt::WModelIndex, Wt::WMouseEvent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsSearchView</name>
      <anchorfile>classWsSearchView.html</anchorfile>
      <anchor>a0d100a44e19f4cfc237366d978cf1dc8</anchor>
      <arglist>(std::string sSearch, Wt::WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsSearchView</name>
      <anchorfile>classWsSearchView.html</anchorfile>
      <anchor>a1e981242f75f0451381b9978f44166bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>navBar</name>
      <anchorfile>classWsSearchView.html</anchorfile>
      <anchor>af78874917813a7381c02a2907ac6e343</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WStandardItemModel *</type>
      <name>m_pModelView</name>
      <anchorfile>classWsSearchView.html</anchorfile>
      <anchor>afcc99a861cd43d923c0891eea4c2d605</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_sRootPath</name>
      <anchorfile>classWsSearchView.html</anchorfile>
      <anchor>a467c0286ff3a35787c5b3c1cc24df973</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_bLogSearch</name>
      <anchorfile>classWsSearchView.html</anchorfile>
      <anchor>a75745f8efe43918545835a14e23b835b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WWidget *</type>
      <name>m_wNavBar</name>
      <anchorfile>classWsSearchView.html</anchorfile>
      <anchor>a1fe6b50e2fdc72707243f19e6beb527f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsSiteMap</name>
    <filename>classWsSiteMap.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>doSiteMapClicked</name>
      <anchorfile>classWsSiteMap.html</anchorfile>
      <anchor>ae99abb496d2f73fb9121e9ef9907adea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsSiteMap</name>
      <anchorfile>classWsSiteMap.html</anchorfile>
      <anchor>af15021d739a0438fb590fdcd461087cd</anchor>
      <arglist>(Wt::WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsSiteMap</name>
      <anchorfile>classWsSiteMap.html</anchorfile>
      <anchor>a05341aa4665f7015887bc349ff9c4a74</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsSiteMapItem</name>
    <filename>classWsSiteMapItem.html</filename>
    <member kind="function">
      <type></type>
      <name>WsSiteMapItem</name>
      <anchorfile>classWsSiteMapItem.html</anchorfile>
      <anchor>aaccb083484cd151e8a6eaac6b0d49019</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsSiteMapItem</name>
      <anchorfile>classWsSiteMapItem.html</anchorfile>
      <anchor>a4512e9aee38f893ed6a85dade2bd1dc7</anchor>
      <arglist>(const Wt::WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNode</name>
      <anchorfile>classWsSiteMapItem.html</anchorfile>
      <anchor>a0a4b0ad1b0f5335ebe1f474ac714819a</anchor>
      <arglist>(NodePtr pNode)</arglist>
    </member>
    <member kind="function">
      <type>NodePtr</type>
      <name>node</name>
      <anchorfile>classWsSiteMapItem.html</anchorfile>
      <anchor>a753e74818bb05cd567c255c5c149869d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>NodePtr</type>
      <name>m_node</name>
      <anchorfile>classWsSiteMapItem.html</anchorfile>
      <anchor>ae1a187e8a93a105b68eebe7f04be7a5b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsSiteMapView</name>
    <filename>classWsSiteMapView.html</filename>
    <base>WsOptions</base>
    <member kind="slot">
      <type>void</type>
      <name>onViewDblClick</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>a016194d400cc98d8f6873a48c31845bd</anchor>
      <arglist>(Wt::WModelIndex idx, Wt::WMouseEvent mouseEvent)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>onTreeSelectionChanged</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>acf11ed3c01c93c2bdfde100baa439b9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>onTreeExpanded</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>a9db194eeb759bc3902d6a8d4025d4598</anchor>
      <arglist>(Wt::WModelIndex idx)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>onViewSelectionChanged</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>a67390beccd8c76a563efc08720c1592c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>onViewExpanded</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>abd2d51841f4d6446c1b8bfbb109fa0c7</anchor>
      <arglist>(Wt::WModelIndex idx)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>doRename</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>a9f2d66c94232be461436bee206923be9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>doConfirmDelete</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>aac60ad275a96c896c4626338152cb174</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>doDelete</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>acc1003159da3b0899c228a247530e3bb</anchor>
      <arglist>(Wt::StandardButton button)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>doNewFolder</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>a3de282b95698f38ff9b08ac1b74a4607</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>onDirectoryNameChanged</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>afe8b0ff22e05999c413221a54f994cbc</anchor>
      <arglist>(Wt::WStandardItem *pItem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsSiteMapView</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>a3a2f641712fc0af372d3c0e09884cf84</anchor>
      <arglist>(gdwtcore::viewType dlgType, gdWFileView::tbFlags flags=gdWFileView::tbDefault, Wt::WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsSiteMapView</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>aad83eb9b9793a5de16f20c124768cdc9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>load</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>a3aa162ad769f4a68d077757f526bf523</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>path2SiteMapPath</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>ad8fb71212de0db6f2917ce57a4888d0f</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>SiteMapPath2path</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>ac1b52b79dc03faa5c8e9a9314bada449</anchor>
      <arglist>(const std::string &amp;siteMapPath)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRelativePath</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>ad11a0cec8caff8283ec4beea83a6660a</anchor>
      <arglist>(const std::string &amp;relativePath)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>a4318768239b75649856c784312efc30d</anchor>
      <arglist>(NodePtr pNode)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>treeTraverse</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>a794ff22bf5e0af852e27c033678d7479</anchor>
      <arglist>(Wt::WStandardItem *rootItem, const std::vector&lt; std::string &gt; &amp;vPath, int nLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>treeMatchPath</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>abf37285091e189d3d83c0aa4a09e88f3</anchor>
      <arglist>(NodePtr pNode)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadTree</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>a1f7d324cadbc132aead6aa8ed68e5dac</anchor>
      <arglist>(Wt::WStandardItem *currentItem, NodePtr pNode, gdWFileView::skipMode skipParentDir=gdWFileView::noSkipParent)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadFolder</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>a7191e0dd440983e3090d3433f8b5d209</anchor>
      <arglist>(Wt::WStandardItem *currentItem, const std::string &amp;newPath, NodePtr curNode, bool bEdit=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadFile</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>a6dfd3f46a185aa8ba19ee996050d400b</anchor>
      <arglist>(Wt::WStandardItem *currentItem, const std::string &amp;currentPath, NodePtr curNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentPath</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>a1781fef014adf4bfde406dd0818c4915</anchor>
      <arglist>(const std::string &amp;currentPath)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>selectedDirectory</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>a7087594f8cea43b85211ad16ee7d9bff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>selectedFile</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>a3030cabb0e422fa0c1f83e52b8196886</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>selectedPath</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>af8af356239e1cfb40753f4d12a6b3d36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>currentFolderPath</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>a10b1af4aba90f3d1da198a62c2f3c9cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>makeToolbar</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>a679ed21bb02616e04961785c15eec9bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signal&lt; gdWFileView::signalType, std::string &gt; &amp;</type>
      <name>fileSelected</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>aeeb8d769c5b9dc2a01cea03520a58c2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::Signal&lt; gdWFileView::signalType, std::string &gt;</type>
      <name>fileSelected_</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>aa187b8d48574b98b5b51fac44e7cece1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>gdwtcore::viewType</type>
      <name>m_viewType</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>a3d792f5b897ec2d2cf43e9cab73c03d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>gdWFileView::tbFlags</type>
      <name>m_tbFlags</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>ad220b917f02aaa619a3367cdd01a9e36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WStandardItemModel *</type>
      <name>m_pModelTree</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>ae49d8c35cb30731a1bd7bd95a97119cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WStandardItemModel *</type>
      <name>m_pModelView</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>a14370ca811d2bc531c21d1e87b0f1298</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WTreeView *</type>
      <name>m_pTVTree</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>a957dbb9a78eb073fca9fec2c186cd69e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WTreeView *</type>
      <name>m_pTVView</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>a16b6dff3b1e86e3ddd51dd4978ea2f89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>gdToolbar *</type>
      <name>m_pTb</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>a96faacf80f7cb5b999c7d907ae7db23d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_bOnTreeSelect</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>a12c3c80ef763922492c5ca4aff4a2d69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_bOnDataChanged</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>a7e4a93e1ed3c1da0b5c36f51d19d7d44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WMenu *</type>
      <name>m_pMenu</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>a44313ab0b84e760529fa38b39f257904</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_bOnRename</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>a414694cbb797245f5a15e76ca2b45c90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>NodePtr</type>
      <name>m_pTreecurNode</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>aa07dc50ae7949be3116bd6769dd41c44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>gdToolbarItem *</type>
      <name>m_tbiDelete</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>a99c2758fab9878ed5ae0c380204672cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>gdToolbarItem *</type>
      <name>m_tbiNewFolder</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>a8a6377c758c204e85e343727c981e09a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>gdToolbarItem *</type>
      <name>m_tbiRename</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>ada7d3f2ffe75d1bbf6f7d8d7e10a27b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_selectedFile</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>a1f08cf1e24a6846d846eaa67e622b0be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_selectedDirectory</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>acd90db4642c6dd44962c81d93b79ef52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_sRootPath</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>ae4efc90c39989c4e2adf22efd040b0b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_sSiteMap</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>a0d9161de6cdd824372c26e2f42c8e1bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_sRootSiteMap</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>a58d8207e1fc7412dd391cf91f2b22e0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WMessageBox *</type>
      <name>m_pMb</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>a127c834f9a08ee01dbe42c5d8807a921</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_bLogSiteMap</name>
      <anchorfile>classWsSiteMapView.html</anchorfile>
      <anchor>af203885301a2c9c27aac32e2cfab0bcc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsTemplate</name>
    <filename>classWsTemplate.html</filename>
    <member kind="function">
      <type></type>
      <name>WsTemplate</name>
      <anchorfile>classWsTemplate.html</anchorfile>
      <anchor>a57c6a7e56907ca0b40f990c0d5e9c1b2</anchor>
      <arglist>(const std::string &amp;templateFile, const std::string &amp;initialPath=std::string(), Wt::WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsTemplate</name>
      <anchorfile>classWsTemplate.html</anchorfile>
      <anchor>a63b070a3c8f0f376806b0df96ee4d223</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>matchTemplate</name>
      <anchorfile>classWsTemplate.html</anchorfile>
      <anchor>a976fb4b4dc3d1f41aba4269cdf84442d</anchor>
      <arglist>(const std::string &amp;templateFile)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resolveString</name>
      <anchorfile>classWsTemplate.html</anchorfile>
      <anchor>aa52e76936f048579c3f30cbd8e89e56e</anchor>
      <arglist>(const std::string &amp;varName, const std::vector&lt; Wt::WString &gt; &amp;args, std::ostream &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>resolveWidget</name>
      <anchorfile>classWsTemplate.html</anchorfile>
      <anchor>ae6c16eb722b302dca89c254a45a90cb4</anchor>
      <arglist>(const std::string &amp;varName)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_sInitialPath</name>
      <anchorfile>classWsTemplate.html</anchorfile>
      <anchor>ab2d59642d9fb2d6ead262fd28ed6d2dc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsTopBanner</name>
    <filename>classWsTopBanner.html</filename>
    <member kind="function">
      <type></type>
      <name>WsTopBanner</name>
      <anchorfile>classWsTopBanner.html</anchorfile>
      <anchor>a7ff9bacb89a7d89a195c799aecbfa7a7</anchor>
      <arglist>(Wt::WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsTopBanner</name>
      <anchorfile>classWsTopBanner.html</anchorfile>
      <anchor>ab3e04b2b61d594a080bdf54c6685a52f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsTreeDeserializer</name>
    <filename>classWsTreeDeserializer.html</filename>
    <member kind="function">
      <type></type>
      <name>WsTreeDeserializer</name>
      <anchorfile>classWsTreeDeserializer.html</anchorfile>
      <anchor>a08aca28058f62b29e49d41d4b125225d</anchor>
      <arglist>(const std::string &amp;contents)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>deserialize</name>
      <anchorfile>classWsTreeDeserializer.html</anchorfile>
      <anchor>a7a7828b23e9c5e62d642ff9d1395b86a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NodePtr</type>
      <name>getMenuRoot</name>
      <anchorfile>classWsTreeDeserializer.html</anchorfile>
      <anchor>aaa3977c1208534b7223798945ec3609d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getStamp</name>
      <anchorfile>classWsTreeDeserializer.html</anchorfile>
      <anchor>a255fc6552c8de637d0c06faefa0a59a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>parse</name>
      <anchorfile>classWsTreeDeserializer.html</anchorfile>
      <anchor>a9899cfd077d4b0ae662901cf36b1c6e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>addSub</name>
      <anchorfile>classWsTreeDeserializer.html</anchorfile>
      <anchor>a6cb359f52e88ab74ac3a679fd9ffbc70</anchor>
      <arglist>(const Json::Value &amp;v, NodePtr n)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>NodePtr</type>
      <name>m_rootNode</name>
      <anchorfile>classWsTreeDeserializer.html</anchorfile>
      <anchor>aa6ea02f11f86eab8fb8056a87f1a208c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Json::Value</type>
      <name>m_root</name>
      <anchorfile>classWsTreeDeserializer.html</anchorfile>
      <anchor>aa06bb18a38206f65e5962d55fa6e2b03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Json::Reader</type>
      <name>m_reader</name>
      <anchorfile>classWsTreeDeserializer.html</anchorfile>
      <anchor>a188a2c2ddeb616662e669db10666cff2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_stamp</name>
      <anchorfile>classWsTreeDeserializer.html</anchorfile>
      <anchor>ae23c446075c7c6480d26e4bd5857443c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_contents</name>
      <anchorfile>classWsTreeDeserializer.html</anchorfile>
      <anchor>ac7cf76a48865bfe66111f23704fe61d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::filesystem::path</type>
      <name>m_rootPath</name>
      <anchorfile>classWsTreeDeserializer.html</anchorfile>
      <anchor>ac80c01cc67124d6778ae3aea41e288de</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsTreeSerializer</name>
    <filename>classWsTreeSerializer.html</filename>
    <member kind="function">
      <type></type>
      <name>WsTreeSerializer</name>
      <anchorfile>classWsTreeSerializer.html</anchorfile>
      <anchor>abe0294091febc7d384434c3a4a9b7b72</anchor>
      <arglist>(WsMenuTree *tree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsTreeSerializer</name>
      <anchorfile>classWsTreeSerializer.html</anchorfile>
      <anchor>af77ce304259f21cf0dd22a78f7a7bf95</anchor>
      <arglist>(WsAccessTree *tree)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>serialize</name>
      <anchorfile>classWsTreeSerializer.html</anchorfile>
      <anchor>ab872a2e213e5e9c6388f06d4ff234549</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>getSerializedForm</name>
      <anchorfile>classWsTreeSerializer.html</anchorfile>
      <anchor>a0f64335108b8fefbfc8416c119d9f3c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>addSub</name>
      <anchorfile>classWsTreeSerializer.html</anchorfile>
      <anchor>a5e848c3baf94d741437b3c55489eab12</anchor>
      <arglist>(Json::Value &amp;v, NodePtr n)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>NodePtr</type>
      <name>m_rootNode</name>
      <anchorfile>classWsTreeSerializer.html</anchorfile>
      <anchor>a5a8bd7f2c1ac4ac8a02e2738f5b0f742</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Json::Value</type>
      <name>m_root</name>
      <anchorfile>classWsTreeSerializer.html</anchorfile>
      <anchor>ab4a35df594695e5eee2306d6befe9c93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Json::Value</type>
      <name>m_current</name>
      <anchorfile>classWsTreeSerializer.html</anchorfile>
      <anchor>a88e293914a94ef35aada9b70b8ef1179</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::filesystem::path</type>
      <name>m_rootPath</name>
      <anchorfile>classWsTreeSerializer.html</anchorfile>
      <anchor>ae8e0c6a21896eed83cb3f65cff1a72f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_stamp</name>
      <anchorfile>classWsTreeSerializer.html</anchorfile>
      <anchor>a5bf4ded0e9c8b4eeeeded0521487bbf2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsTreeTraversal</name>
    <filename>classWsTreeTraversal.html</filename>
    <member kind="function">
      <type></type>
      <name>WsTreeTraversal</name>
      <anchorfile>classWsTreeTraversal.html</anchorfile>
      <anchor>a0d79f7a5bdcb7982cad1bd8bdffeba82</anchor>
      <arglist>(NodePtr root)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>traverse</name>
      <anchorfile>classWsTreeTraversal.html</anchorfile>
      <anchor>a2325ff603a9eadcb6e2eacf63ad2fe1b</anchor>
      <arglist>(NodePtr n)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>traverseDirNodes</name>
      <anchorfile>classWsTreeTraversal.html</anchorfile>
      <anchor>a3a31ed8b8e898c03bb608d4633af1c1b</anchor>
      <arglist>(std::vector&lt; NodePtr &gt; l)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>traverseFileNodes</name>
      <anchorfile>classWsTreeTraversal.html</anchorfile>
      <anchor>afd9db306d1b77ae7e3d3a630afc03abb</anchor>
      <arglist>(std::vector&lt; NodePtr &gt; l)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual int</type>
      <name>beginTraverseDir</name>
      <anchorfile>classWsTreeTraversal.html</anchorfile>
      <anchor>a70db8a7ce31fa3542c6bfc31ac3e64ba</anchor>
      <arglist>(NodePtr n)=0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual int</type>
      <name>endTraverseDir</name>
      <anchorfile>classWsTreeTraversal.html</anchorfile>
      <anchor>a7c0efbef419d3a672e9ef2d66f542822</anchor>
      <arglist>(NodePtr n)=0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual int</type>
      <name>traverseFile</name>
      <anchorfile>classWsTreeTraversal.html</anchorfile>
      <anchor>a5ecb2a97a931a65208df91b18909e8c6</anchor>
      <arglist>(NodePtr n)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsTreeView</name>
    <filename>classWsTreeView.html</filename>
    <member kind="function">
      <type></type>
      <name>WsTreeView</name>
      <anchorfile>classWsTreeView.html</anchorfile>
      <anchor>a44e3b824ea254142b65be4fb9628479a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>layoutSizeChanged</name>
      <anchorfile>classWsTreeView.html</anchorfile>
      <anchor>adfa579fcd9bb60fdf7d851bc8d88a17e</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsTwitterEditorWidget</name>
    <filename>classWsTwitterEditorWidget.html</filename>
    <base>WsEditorWidget</base>
    <member kind="function">
      <type></type>
      <name>WsTwitterEditorWidget</name>
      <anchorfile>classWsTwitterEditorWidget.html</anchorfile>
      <anchor>a9b98f64065f500d7ee100a412f621be4</anchor>
      <arglist>(Wt::WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsTwitterEditorWidget</name>
      <anchorfile>classWsTwitterEditorWidget.html</anchorfile>
      <anchor>a91da0092a63196edc904c3396bc51292</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>load</name>
      <anchorfile>classWsTwitterEditorWidget.html</anchorfile>
      <anchor>ae562cfff70374e79a2524c682de050fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>saveEditor</name>
      <anchorfile>classWsTwitterEditorWidget.html</anchorfile>
      <anchor>ae473434ccb6d4e35f182cf202c7c3053</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WCheckBox *</type>
      <name>m_cb</name>
      <anchorfile>classWsTwitterEditorWidget.html</anchorfile>
      <anchor>a21c6d1ce1a596109a255f471e299e415</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_cbState</name>
      <anchorfile>classWsTwitterEditorWidget.html</anchorfile>
      <anchor>a2e89ba26452cec5115c677598f654a75</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsUser</name>
    <filename>classWsUser.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>NodeType</name>
      <anchorfile>classWsUser.html</anchorfile>
      <anchor>a29250a6a6300c8ae01ba76e464ebce46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>File</name>
      <anchorfile>classWsUser.html</anchorfile>
      <anchor>a29250a6a6300c8ae01ba76e464ebce46a59ce32a61d84b5c2f90f592b9b2bafa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Directory</name>
      <anchorfile>classWsUser.html</anchorfile>
      <anchor>a29250a6a6300c8ae01ba76e464ebce46afc586a81a6a97eb7544d656c374728f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WsUser</name>
      <anchorfile>classWsUser.html</anchorfile>
      <anchor>aa3dd767b3af9300ab3c6ca258239341e</anchor>
      <arglist>(const std::string &amp;strUid, const std::string &amp;pass=&quot;&quot;, const std::string &amp;ip=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsUser</name>
      <anchorfile>classWsUser.html</anchorfile>
      <anchor>ad2ebb78696cde08df6eaec2e348521c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>load</name>
      <anchorfile>classWsUser.html</anchorfile>
      <anchor>aa539c2c57b6aa2b1a546d022e6941aeb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>getHomePage</name>
      <anchorfile>classWsUser.html</anchorfile>
      <anchor>a3e281ca95ef35404ef1ac82001c07206</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NodePtr</type>
      <name>getAccessRoot</name>
      <anchorfile>classWsUser.html</anchorfile>
      <anchor>a23c765166b9396b722bd102b1a248284</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>getRootPath</name>
      <anchorfile>classWsUser.html</anchorfile>
      <anchor>a008fe764930d51045895197a7e0a94bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getSurname</name>
      <anchorfile>classWsUser.html</anchorfile>
      <anchor>a59bb917b5c4ef4f2ebb1b3305e43d1c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getFirstName</name>
      <anchorfile>classWsUser.html</anchorfile>
      <anchor>a73f8533863784a014d9d73e4f537aa1a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getEmail</name>
      <anchorfile>classWsUser.html</anchorfile>
      <anchor>ab8a53490d3d63ec24b5adf5ceb6c97a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>NodePtr</type>
      <name>getMenuRoot</name>
      <anchorfile>classWsUser.html</anchorfile>
      <anchor>a345063e68aa1e62da9855511f04f2645</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NodePtr</type>
      <name>getMenuRoot</name>
      <anchorfile>classWsUser.html</anchorfile>
      <anchor>a1a74834655b82d9004df7ec38edb9288</anchor>
      <arglist>(const std::set&lt; std::string &gt; &amp;exclNames, const std::set&lt; std::string &gt; &amp;exclExt)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPermissions</name>
      <anchorfile>classWsUser.html</anchorfile>
      <anchor>a05cfb8bb3068579822d364039c554c63</anchor>
      <arglist>(const std::string &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>const WsNodeProperties *</type>
      <name>getProperties</name>
      <anchorfile>classWsUser.html</anchorfile>
      <anchor>a3db62a6ebabd781e28f358a4f8bbe78c</anchor>
      <arglist>(const std::string &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getProperty</name>
      <anchorfile>classWsUser.html</anchorfile>
      <anchor>afe040f584e7c2eda8d34a75ad5579152</anchor>
      <arglist>(const std::string &amp;path, const std::string &amp;section, const string &amp;attr, const std::string &amp;def)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; WsResultItem &gt;</type>
      <name>getSearchResults</name>
      <anchorfile>classWsUser.html</anchorfile>
      <anchor>a911c4ac5d3c3e8318ac472e5d14632d2</anchor>
      <arglist>(const std::string &amp;terms)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; std::string &gt;</type>
      <name>getAllGroups</name>
      <anchorfile>classWsUser.html</anchorfile>
      <anchor>a1ce8140495d91abea5a1fd2bc40ab887</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>saveProperties</name>
      <anchorfile>classWsUser.html</anchorfile>
      <anchor>a0e164dbcc4a0640ade32c9cd823fd68a</anchor>
      <arglist>(WsNodeProperties *props, const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>saveProperty</name>
      <anchorfile>classWsUser.html</anchorfile>
      <anchor>a699c0af0e62846ec16333fc528bc707a</anchor>
      <arglist>(const std::string &amp;path, const std::string &amp;section, const std::string &amp;attr, const std::string &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>createNode</name>
      <anchorfile>classWsUser.html</anchorfile>
      <anchor>a65d7695786549ef2019f977f3f1d8018</anchor>
      <arglist>(const string &amp;path, NodeType type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>deleteNode</name>
      <anchorfile>classWsUser.html</anchorfile>
      <anchor>ae351a08451e5b9aeb3ebd6ac3f2e5298</anchor>
      <arglist>(const string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>renameNode</name>
      <anchorfile>classWsUser.html</anchorfile>
      <anchor>ae3b1bb8d074b3ec3dfd3601a3e35631c</anchor>
      <arglist>(const string &amp;path, const string &amp;newPath)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAdministrator</name>
      <anchorfile>classWsUser.html</anchorfile>
      <anchor>a24992f478eacf012bef6aa04018dab3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEditor</name>
      <anchorfile>classWsUser.html</anchorfile>
      <anchor>aec1d48fdef3f51e8f0975ec2ea38f504</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>getTemplatesList</name>
      <anchorfile>classWsUser.html</anchorfile>
      <anchor>a5eb2b52221e3f1a06dec7589a994da89</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WsAbstractFsClient *</type>
      <name>m_client</name>
      <anchorfile>classWsUser.html</anchorfile>
      <anchor>aba7ce57db2b2b1f160d2ee936360c3b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>m_isDaemon</name>
      <anchorfile>classWsUser.html</anchorfile>
      <anchor>a4406e947c34023b0e10e2f3a42dffd73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_uid</name>
      <anchorfile>classWsUser.html</anchorfile>
      <anchor>a90f60490a7a0ba66604890a8076dc1cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_pass</name>
      <anchorfile>classWsUser.html</anchorfile>
      <anchor>af12da82f33aa0b7f3d995c07c08a8b08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_ip</name>
      <anchorfile>classWsUser.html</anchorfile>
      <anchor>a595b1448f3984742cfaecc54af7b8269</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WsGlobalProperties *</type>
      <name>m_conf</name>
      <anchorfile>classWsUser.html</anchorfile>
      <anchor>aeb08bcaca80c2cf1de70d1e7a0fb3839</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsUserSession</name>
    <filename>classWsUserSession.html</filename>
    <member kind="function">
      <type></type>
      <name>WsUserSession</name>
      <anchorfile>classWsUserSession.html</anchorfile>
      <anchor>a12be1f64516e2661a987df364467eb6d</anchor>
      <arglist>(const std::string &amp;uid, const std::string &amp;pass=&quot;&quot;, const std::string &amp;ip=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>const std::set&lt; std::string &gt; &amp;</type>
      <name>getGroups</name>
      <anchorfile>classWsUserSession.html</anchorfile>
      <anchor>a2e1666c331e969aa50886ee12bd8c475</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classWsUserSession.html</anchorfile>
      <anchor>a0ff4ad17e5fad31a99b18b14373de4e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getSurname</name>
      <anchorfile>classWsUserSession.html</anchorfile>
      <anchor>a812c4f6413df42290f2614fc15b3f3b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getEmail</name>
      <anchorfile>classWsUserSession.html</anchorfile>
      <anchor>ac00ca7722d2d7db5a608b5c97755e2a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGroups</name>
      <anchorfile>classWsUserSession.html</anchorfile>
      <anchor>a7a337736da48712a8da99396c7f561ee</anchor>
      <arglist>(const std::set&lt; std::string &gt; &amp;groups)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classWsUserSession.html</anchorfile>
      <anchor>aa100dc0b2b1630af172e29729096d4fc</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSurname</name>
      <anchorfile>classWsUserSession.html</anchorfile>
      <anchor>ab2e27c102b808723847b642c7df01182</anchor>
      <arglist>(const std::string &amp;surname)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEmail</name>
      <anchorfile>classWsUserSession.html</anchorfile>
      <anchor>a508d579556e679c89d76a2eddd5f4e7b</anchor>
      <arglist>(const std::string &amp;email)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValidSession</name>
      <anchorfile>classWsUserSession.html</anchorfile>
      <anchor>a08b592f2a8ca0552fddd05f02deaf083</anchor>
      <arglist>(const std::string &amp;uid, const std::string &amp;pass, const std::string &amp;ip)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>m_uid</name>
      <anchorfile>classWsUserSession.html</anchorfile>
      <anchor>a485afc2579439ddb53e82b86bb8c0aba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>m_pass</name>
      <anchorfile>classWsUserSession.html</anchorfile>
      <anchor>a25b1a4520e36bd32f4ebfa48eb46d999</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>m_ip</name>
      <anchorfile>classWsUserSession.html</anchorfile>
      <anchor>a7866a4874ccd1b64c44b814b34e9fe28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>m_name</name>
      <anchorfile>classWsUserSession.html</anchorfile>
      <anchor>a9c22afe0ea9323b82601bf90210fea26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>m_surname</name>
      <anchorfile>classWsUserSession.html</anchorfile>
      <anchor>a346cec330c61bdb446fb6bd2734d5e1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>m_email</name>
      <anchorfile>classWsUserSession.html</anchorfile>
      <anchor>a7f4e9225d6867695e4d3b58c3938a44d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; std::string &gt;</type>
      <name>m_groups</name>
      <anchorfile>classWsUserSession.html</anchorfile>
      <anchor>a4d3969f8157c56daccc3c28409c552f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>long</type>
      <name>m_timestamp</name>
      <anchorfile>classWsUserSession.html</anchorfile>
      <anchor>afcc2c49714c216ad891680e037bc9c2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>long</type>
      <name>getNowTimestamp</name>
      <anchorfile>classWsUserSession.html</anchorfile>
      <anchor>a4579962eb7189b29f5c60fa0923e7a49</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsVideo</name>
    <filename>classWsVideo.html</filename>
    <base>WsOptions</base>
    <member kind="function">
      <type></type>
      <name>WsVideo</name>
      <anchorfile>classWsVideo.html</anchorfile>
      <anchor>aea749aad1f15e7d98a0d81dcd63454b9</anchor>
      <arglist>(Wt::WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsVideo</name>
      <anchorfile>classWsVideo.html</anchorfile>
      <anchor>a28560e835d971e6a7afa9746c93bae20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classWsVideo.html</anchorfile>
      <anchor>a0c536114ecc25429a7914b1e09215cf5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WsZipEditorWidget</name>
    <filename>classWsZipEditorWidget.html</filename>
    <base>WsEditorWidget</base>
    <member kind="function">
      <type></type>
      <name>WsZipEditorWidget</name>
      <anchorfile>classWsZipEditorWidget.html</anchorfile>
      <anchor>a0bb8d6440dcf416a5e12ed53fd981e51</anchor>
      <arglist>(Wt::WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WsZipEditorWidget</name>
      <anchorfile>classWsZipEditorWidget.html</anchorfile>
      <anchor>af3342657e5997a477ce2f4838cc25ac2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>load</name>
      <anchorfile>classWsZipEditorWidget.html</anchorfile>
      <anchor>a1077db146aec9662710d5fc71b2ae00a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>saveEditor</name>
      <anchorfile>classWsZipEditorWidget.html</anchorfile>
      <anchor>ae50bab30cf767931698613bc8ad9c400</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Wt::WCheckBox *</type>
      <name>m_cb</name>
      <anchorfile>classWsZipEditorWidget.html</anchorfile>
      <anchor>af52e37df2b9837ce7ba8e52e1db3cea7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_bState</name>
      <anchorfile>classWsZipEditorWidget.html</anchorfile>
      <anchor>affb0cff2636873fe8055374f85467880</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>GlobalConfig</name>
    <filename>namespaceGlobalConfig.html</filename>
    <member kind="variable">
      <type>const int</type>
      <name>Read</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>ad0334f42b9da85806722f60ed2193504</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ReadWrite</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>a7d9c2d79cab9231d3198996f0c9f7ce9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>NotAvail</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>a78272c8708d2bf38760ceafc20ea038b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>NotFound</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>a30ad0ae0c9f9f20ad0e9d27089578f02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>NoAccess</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>a5174d03fbc8d6b5a0fa7c38649fc1be4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>NotLogged</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>a89e47c27f0fbbaa60bbb6d6494ef06b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>On</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>a50ff3a907f583b0f1a03f9c37429f2ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>Off</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>ae0d1426ab77211aa29cc02f4547c11bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>Delay</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>aa2762044086d8e1dfe61f0a73ac8af81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>StdOut</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>a9d566a3d40bd230feabb8f04dded50a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>StdErr</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>acfec0aa50a3ec5d2814d27c9cbac3e6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>GlobalPropertiesPath</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>a047094c41ccc0da7974b6538b0de3eea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>LayoutPropertiesPath</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>ade511ba4601469ed45973b045437bd86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>PluginsPropertiesPath</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>abbb8a23252e85c38c2833f165cee3967</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>CrashLogPath</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>ac7649cfebb3630cc6e17424350aca1e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>PathToLockFile</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>aa55d6671e3be073fd2b687849e7cfd7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>PathToConfig</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>a2b3fccaa38bb6bd2fc6f648af097b2dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>PathToNodeProperties</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>a90651fd6716206d88cae710653ae1f88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>PathToDirProperties</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>a58b5971229720815e347f643289bfd7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>PathToImages</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>afe9f4739ba1e9c004d1263fc2c6a0515</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>PathToTemplates</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>ac87179bfd9c32d45093b561df41c4bb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>PathToIcones</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>a5afd0c8e3678386849980c2ac0819487</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>ConfExt</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>abd4379c6dcb682c8501558b3c3d4c854</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>NbItems</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>a0331d64b3cff91765cecc477d2bd731b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>SubFolders</name>
      <anchorfile>namespaceGlobalConfig.html</anchorfile>
      <anchor>a467a18efdd8e47450b80d910d4796ecb</anchor>
      <arglist>[NbItems]</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>RequestField</name>
    <filename>namespaceRequestField.html</filename>
    <member kind="variable">
      <type>const std::string</type>
      <name>Type</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a8930f5674a8509c86600ed9ca54347c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>Uid</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a6b3ac60003ddbc738816e271d52a12c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>Ip</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a0baea78bfd6fd3093103f62ea5dbc17f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>Pass</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a7d6bd089dd52b717c430f8dbc7c5f9c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>Name</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a20464a96ef8f80579ced0313a554dd0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>Surname</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a2a4d0ead112436210f7f4c6d1442481f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>Email</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a5255a13d2cc2b611128c141c7e0d047b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>ExclNames</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a6c7d9fb0eb379ac0e7ba33b1bbadef74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>ExclExt</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a6a7d250be13f7c64cad0ff7db0b3530b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>Path</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a10a822957a8ee52c26d357308a08d8ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>Section</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>acb204751e1a0b287efdc289b443760f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>Property</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a1e917138cd1abb3602387fef6e358b40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>NewPath</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a48390b677eb6de8e6bf8de049e61ea04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>Success</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a5deafe05b289714ecd75a98844196aac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>Failure</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a0cdea02a49390c7967404daf0716f750</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>Terms</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a0511633c97bd79c4f9f8fa7840202e90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>Body</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a2667f456e4f646bdd52f8b8ef5bacce1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>Size</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a40dd96206debae4205c85371caf42967</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>ModifyDate</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>ab22966b83b567e4d05b6304082db30a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>Key</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>afe032d68e9fb2b0771e1af2ad35437f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>Value</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a4ed7e6971871084424b93bc1eea297f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>NodeType</name>
      <anchorfile>namespaceRequestField.html</anchorfile>
      <anchor>a05a49fd15a931c22fecfff34bf161561</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="dir">
    <name>src/Auth</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Auth/</path>
    <filename>dir_4251ef8c9595f96623c6c73f24a0b3bd.html</filename>
    <file>WsAbstractAuth.cpp</file>
    <file>WsAbstractAuth.h</file>
    <file>WsAuthenticator.cpp</file>
    <file>WsAuthenticator.h</file>
  </compound>
  <compound kind="dir">
    <name>src/WsAuthModules/BasicAuth</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsAuthModules/BasicAuth/</path>
    <filename>dir_59106ea291a345bc8888f0f33a26cc05.html</filename>
    <dir>src/WsAuthModules/BasicAuth/src</dir>
  </compound>
  <compound kind="dir">
    <name>src/Compression</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Compression/</path>
    <filename>dir_02ea687c1fd6f1aa3dd8e76bd9c79f38.html</filename>
    <file>WsCompressor.cpp</file>
    <file>WsCompressor.h</file>
    <file>WsDecompressor.cpp</file>
    <file>WsDecompressor.h</file>
  </compound>
  <compound kind="dir">
    <name>src/ConfigManager</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/ConfigManager/</path>
    <filename>dir_042212ccaecd4066819d1e18daaf06b9.html</filename>
    <file>WsAbstractProperties.cpp</file>
    <file>WsAbstractProperties.h</file>
    <file>WsGlobalProperties.cpp</file>
    <file>WsGlobalProperties.h</file>
    <file>WsLayoutProperties.cpp</file>
    <file>WsLayoutProperties.h</file>
    <file>WsNodeProperties.cpp</file>
    <file>WsNodeProperties.h</file>
    <file>WsNodeResources.cpp</file>
    <file>WsNodeResources.h</file>
  </compound>
  <compound kind="dir">
    <name>src/DirCrawler</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/DirCrawler/</path>
    <filename>dir_cf8767e2946153fe6181e140fa5c4087.html</filename>
    <file>WsDirectoryCrawler.cpp</file>
    <file>WsDirectoryCrawler.h</file>
  </compound>
  <compound kind="dir">
    <name>src/FhtmlEditor</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/FhtmlEditor/</path>
    <filename>dir_667d0df62fc4232c005d3cbd75d1b88c.html</filename>
    <dir>src/FhtmlEditor/src</dir>
  </compound>
  <compound kind="dir">
    <name>src/FileSystemTree</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/FileSystemTree/</path>
    <filename>dir_b4b095f087b8d3a63097cec6fda995e6.html</filename>
    <file>WsAbstractNode.cpp</file>
    <file>WsAbstractNode.h</file>
    <file>WsDirNode.cpp</file>
    <file>WsDirNode.h</file>
    <file>WsFileNode.cpp</file>
    <file>WsFileNode.h</file>
    <file>WsFileSystemTree.cpp</file>
    <file>WsFileSystemTree.h</file>
    <file>WsNode.cpp</file>
    <file>WsNode.h</file>
  </compound>
  <compound kind="dir">
    <name>src/FsClient</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/FsClient/</path>
    <filename>dir_d6adfa300cde5024e10ec99c21090e9c.html</filename>
    <file>WsAbstractFsClient.cpp</file>
    <file>WsAbstractFsClient.h</file>
    <file>WsFsDaemonClient.cpp</file>
    <file>WsFsDaemonClient.h</file>
    <file>WsFsTreeClient.cpp</file>
    <file>WsFsTreeClient.h</file>
  </compound>
  <compound kind="dir">
    <name>src/FsDaemon</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/FsDaemon/</path>
    <filename>dir_dd5bd9ca9a1db210ee34669cf1431be6.html</filename>
    <file>WsFsDaemon.cpp</file>
    <file>WsFsDaemon.h</file>
    <file>WsFsDaemonLoader.cpp</file>
    <file>WsFsDaemonLoader.h</file>
    <file>WsUserSession.cpp</file>
    <file>WsUserSession.h</file>
  </compound>
  <compound kind="dir">
    <name>src/FsTreeOp</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/FsTreeOp/</path>
    <filename>dir_2865c7ca0e06a93ad7db437c920ef0ed.html</filename>
    <file>WsFsTreeConsultation.cpp</file>
    <file>WsFsTreeConsultation.h</file>
    <file>WsFsTreeModification.cpp</file>
    <file>WsFsTreeModification.h</file>
    <file>WsFsTreeOperations.cpp</file>
    <file>WsFsTreeOperations.h</file>
  </compound>
  <compound kind="dir">
    <name>src/Include</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Include/</path>
    <filename>dir_5ee0edab4fbf36cc7e28fbed4f17b370.html</filename>
    <file>WsGlobalConfig.h</file>
    <file>WsRequestType.h</file>
  </compound>
  <compound kind="dir">
    <name>src/WsAuthModules/Ldap</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsAuthModules/Ldap/</path>
    <filename>dir_234320975d08e0d506e74057a9c1c5db.html</filename>
    <dir>src/WsAuthModules/Ldap/src</dir>
  </compound>
  <compound kind="dir">
    <name>src/Logger</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Logger/</path>
    <filename>dir_ce44ad55c7286bf5a6cd8cf01717cab8.html</filename>
    <file>WsCrashLogger.cpp</file>
    <file>WsCrashLogger.h</file>
    <file>WsLogger.cpp</file>
    <file>WsLogger.h</file>
    <file>WsLogWriter.cpp</file>
    <file>WsLogWriter.h</file>
  </compound>
  <compound kind="dir">
    <name>src/Main</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Main/</path>
    <filename>dir_4bb77202a85366e5a69049a6555c5ad7.html</filename>
    <file>main.cpp</file>
    <file>WsApplication.cpp</file>
    <file>WsApplication.h</file>
    <file>WsBottomBanner.cpp</file>
    <file>WsBottomBanner.h</file>
    <file>WsContent.cpp</file>
    <file>WsContent.h</file>
    <file>WsContentButtonsBar.cpp</file>
    <file>WsContentButtonsBar.h</file>
    <file>WsFileResource.cpp</file>
    <file>WsFileResource.h</file>
    <file>WsFormConfig.cpp</file>
    <file>WsFormConfig.h</file>
    <file>WsFunctionnalities.cpp</file>
    <file>WsFunctionnalities.h</file>
    <file>WsLogo.cpp</file>
    <file>WsLogo.h</file>
    <file>WsModulesLoader.cpp</file>
    <file>WsModulesLoader.h</file>
    <file>WsSearchObject.cpp</file>
    <file>WsSearchObject.h</file>
    <file>WsSearchView.cpp</file>
    <file>WsSearchView.h</file>
    <file>WsSiteMap.cpp</file>
    <file>WsSiteMap.h</file>
    <file>WsSiteMapView.cpp</file>
    <file>WsSiteMapView.h</file>
    <file>WsTemplate.cpp</file>
    <file>WsTemplate.h</file>
    <file>WsTopBanner.cpp</file>
    <file>WsTopBanner.h</file>
  </compound>
  <compound kind="dir">
    <name>src/WsSearchModules/MnoGoSearch</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsSearchModules/MnoGoSearch/</path>
    <filename>dir_ff3abbb3bdac679af2de1761731f91c4.html</filename>
    <dir>src/WsSearchModules/MnoGoSearch/src</dir>
  </compound>
  <compound kind="dir">
    <name>src/Search</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Search/</path>
    <filename>dir_70e93d5f73d17e38da1bb1bce028d630.html</filename>
    <file>WsAbstractSearch.cpp</file>
    <file>WsAbstractSearch.h</file>
    <file>WsResultItem.cpp</file>
    <file>WsResultItem.h</file>
    <file>WsSearch.cpp</file>
    <file>WsSearch.h</file>
  </compound>
  <compound kind="dir">
    <name>src/Serializer</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Serializer/</path>
    <filename>dir_8f4f72bc87c7945978f61b8a7e865afb.html</filename>
    <file>WsArrayDeserializer.cpp</file>
    <file>WsArrayDeserializer.h</file>
    <file>WsArraySerializer.cpp</file>
    <file>WsArraySerializer.h</file>
    <file>WsTreeDeserializer.cpp</file>
    <file>WsTreeDeserializer.h</file>
    <file>WsTreeSerializer.cpp</file>
    <file>WsTreeSerializer.h</file>
  </compound>
  <compound kind="dir">
    <name>src/WsSearchModules/MnoGoSearch/src</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsSearchModules/MnoGoSearch/src/</path>
    <filename>dir_47a4f64010a342041e0f424871a050a1.html</filename>
    <file>WsMnoGoSearch.cpp</file>
    <file>WsMnoGoSearch.h</file>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModZip/src</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModZip/src/</path>
    <filename>dir_0cd92142028fab74d1db39d270ba3c77.html</filename>
    <file>WsModZip.cpp</file>
    <file>WsModZip.h</file>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModVideo/src</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModVideo/src/</path>
    <filename>dir_edd09c6175e5696cf78beb1a45cbedb0.html</filename>
    <file>WsModVideo.cpp</file>
    <file>WsModVideo.h</file>
    <file>WsVideo.cpp</file>
    <file>WsVideo.h</file>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModTwitter/src</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModTwitter/src/</path>
    <filename>dir_4ab1631935d30845f6fc44421c68928c.html</filename>
    <file>WsModTwitter.cpp</file>
    <file>WsModTwitter.h</file>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModRSS/src</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModRSS/src/</path>
    <filename>dir_c61808cc0c4c178ae985213ca0bb7399.html</filename>
    <file>WsModRSS.cpp</file>
    <file>WsModRSS.h</file>
    <file>WsRSS.cpp</file>
    <file>WsRSS.h</file>
    <file>WsSearchRSS.cpp</file>
    <file>WsSearchRSS.h</file>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModPdf/src</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModPdf/src/</path>
    <filename>dir_25232bf4e9bb103bed239a194ce5844d.html</filename>
    <file>WsModPdf.cpp</file>
    <file>WsModPdf.h</file>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModOdf/src</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModOdf/src/</path>
    <filename>dir_3408f81525a3aa51fe9b527b40796f46.html</filename>
    <file>WsModOdf.cpp</file>
    <file>WsModOdf.h</file>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModNewsLetter/src</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModNewsLetter/src/</path>
    <filename>dir_324cca1a902b8cd348f8e3ed305aa8e8.html</filename>
    <file>EmailToken.h</file>
    <file>WsConfirmEmail.h</file>
    <file>WsModNewsLetter.cpp</file>
    <file>WsModNewsLetter.h</file>
    <file>WsNewsLetter.cpp</file>
    <file>WsNewsLetter.h</file>
    <file>WsNewsLetterEm.h</file>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModMenuImages/src</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModMenuImages/src/</path>
    <filename>dir_2799acc2505f5011b7fefacf8a215f2d.html</filename>
    <file>WsModMenuImages.cpp</file>
    <file>WsModMenuImages.h</file>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModMenu/src</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModMenu/src/</path>
    <filename>dir_4b3d8a64e566a193c6dbbb85389d93a5.html</filename>
    <file>WsMenu.cpp</file>
    <file>WsMenu.h</file>
    <file>WsModMenu.cpp</file>
    <file>WsModMenu.h</file>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModMeetingView/src</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModMeetingView/src/</path>
    <filename>dir_f27e573d26fa4df0b29eec343a417412.html</filename>
    <file>WsModMeetingView.cpp</file>
    <file>WsModMeetingView.h</file>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModLinksList/src</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModLinksList/src/</path>
    <filename>dir_a27fbd2af1f63522d9f75a5fd48179f7.html</filename>
    <file>WsModLinksList.cpp</file>
    <file>WsModLinksList.h</file>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModLatestNews2/src</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModLatestNews2/src/</path>
    <filename>dir_01e4cc67e014ac013ad568d19ddd4133.html</filename>
    <file>WsLatestNews.cpp</file>
    <file>WsLatestNews.h</file>
    <file>WsLatestNews2.cpp</file>
    <file>WsLatestNews2.h</file>
    <file>WsModLatestNews2.cpp</file>
    <file>WsModLatestNews2.h</file>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModImagesGallery/src</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModImagesGallery/src/</path>
    <filename>dir_70dbe2d4e2132e08b79a39ef0735aac0.html</filename>
    <file>WsModImagesGallery.cpp</file>
    <file>WsModImagesGallery.h</file>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModImages2/src</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModImages2/src/</path>
    <filename>dir_138fe8c514176a0a580562926ffb1348.html</filename>
    <file>WsImages2.cpp</file>
    <file>WsImages2.h</file>
    <file>WsModImages2.cpp</file>
    <file>WsModImages2.h</file>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModGalleria/src</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModGalleria/src/</path>
    <filename>dir_8506fe582c1e72008c3151f40e3c6a72.html</filename>
    <file>WsModGalleria.cpp</file>
    <file>WsModGalleria.h</file>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModFollowUs/src</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModFollowUs/src/</path>
    <filename>dir_7bf9b717fd524746955f6d870d94dd46.html</filename>
    <file>WsModFollowUs.cpp</file>
    <file>WsModFollowUs.h</file>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModFileUpload/src</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModFileUpload/src/</path>
    <filename>dir_40129c9353c8c2584912beb2740cbba6.html</filename>
    <file>WsModFileUpload.cpp</file>
    <file>WsModFileUpload.h</file>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModEditor/src</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModEditor/src/</path>
    <filename>dir_4f9be40f11fc1ea55bc3cf18ab75afed.html</filename>
    <file>WsModEditor.cpp</file>
    <file>WsModEditor.h</file>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModDirectoryView2/src</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModDirectoryView2/src/</path>
    <filename>dir_b506a1d2f2a5eb987895970c09434462.html</filename>
    <file>WsModDirectoryView2.cpp</file>
    <file>WsModDirectoryView2.h</file>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModBreadCrumb/src</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModBreadCrumb/src/</path>
    <filename>dir_99c8eb3ee5a0da558fe351f2967f961b.html</filename>
    <file>WsBreadCrumb.cpp</file>
    <file>WsBreadCrumb.h</file>
    <file>WsModBreadCrumb.cpp</file>
    <file>WsModBreadCrumb.h</file>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModBanners/src</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModBanners/src/</path>
    <filename>dir_a838df1943e507a787a0439ed4080db7.html</filename>
    <file>WsBanners.cpp</file>
    <file>WsBanners.h</file>
    <file>WsModBanners.cpp</file>
    <file>WsModBanners.h</file>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModAnchor/src</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModAnchor/src/</path>
    <filename>dir_c998ffc7f5db5afebe57dcda676be273.html</filename>
    <file>WsAnchor.cpp</file>
    <file>WsAnchor.h</file>
    <file>WsModAnchor.cpp</file>
    <file>WsModAnchor.h</file>
  </compound>
  <compound kind="dir">
    <name>src/WsModule/src</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModule/src/</path>
    <filename>dir_d35bbac2df74db31acd8fb4540781f81.html</filename>
    <file>WsModule.cpp</file>
    <file>WsModule.h</file>
  </compound>
  <compound kind="dir">
    <name>src/WsAuthModules/Ldap/src</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsAuthModules/Ldap/src/</path>
    <filename>dir_a7758e2ff1d33d22d3afa207313712fc.html</filename>
    <file>WsLdapAuth.cpp</file>
    <file>WsLdapAuth.h</file>
  </compound>
  <compound kind="dir">
    <name>src/WsAuthModules/BasicAuth/src</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsAuthModules/BasicAuth/src/</path>
    <filename>dir_28a4faa5c81d694afc6b34f19cdfd54d.html</filename>
    <file>WsBasicAuth.cpp</file>
    <file>WsBasicAuth.h</file>
  </compound>
  <compound kind="dir">
    <name>src/FhtmlEditor/src</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/FhtmlEditor/src/</path>
    <filename>dir_42e438407347edf8924d5f89bce15e8d.html</filename>
    <file>main.cpp</file>
  </compound>
  <compound kind="dir">
    <name>src</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/</path>
    <filename>dir_68267d1309a1af8e8297ef4c3efbcdba.html</filename>
    <dir>src/Auth</dir>
    <dir>src/Compression</dir>
    <dir>src/ConfigManager</dir>
    <dir>src/DirCrawler</dir>
    <dir>src/FhtmlEditor</dir>
    <dir>src/FileSystemTree</dir>
    <dir>src/FsClient</dir>
    <dir>src/FsDaemon</dir>
    <dir>src/FsTreeOp</dir>
    <dir>src/Include</dir>
    <dir>src/Logger</dir>
    <dir>src/Main</dir>
    <dir>src/Search</dir>
    <dir>src/Serializer</dir>
    <dir>src/Tree</dir>
    <dir>src/TreeTraversal</dir>
    <dir>src/Updater</dir>
    <dir>src/User</dir>
    <dir>src/WsAuthModules</dir>
    <dir>src/WsModule</dir>
    <dir>src/WsModules</dir>
    <dir>src/WsSearchModules</dir>
  </compound>
  <compound kind="dir">
    <name>src/Tree</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Tree/</path>
    <filename>dir_444de096c71e35dbd129afb39e56cbea.html</filename>
    <file>WsAbstractTree.cpp</file>
    <file>WsAbstractTree.h</file>
    <file>WsAccessTree.cpp</file>
    <file>WsAccessTree.h</file>
    <file>WsMenuTree.cpp</file>
    <file>WsMenuTree.h</file>
  </compound>
  <compound kind="dir">
    <name>src/TreeTraversal</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/TreeTraversal/</path>
    <filename>dir_7264935bcb55b3e2ec885b14c011734b.html</filename>
    <file>WsTreeTraversal.cpp</file>
    <file>WsTreeTraversal.h</file>
  </compound>
  <compound kind="dir">
    <name>src/Updater</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/Updater/</path>
    <filename>dir_9801d1fbd51f19eb2683e7975fd8eef0.html</filename>
    <file>WsAbstractMonitor.cpp</file>
    <file>WsAbstractMonitor.h</file>
    <file>WsFsTreeUpdater.cpp</file>
    <file>WsFsTreeUpdater.h</file>
    <file>WsMonitor.cpp</file>
    <file>WsMonitor.h</file>
  </compound>
  <compound kind="dir">
    <name>src/User</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/User/</path>
    <filename>dir_33184d9f279d0a35335ee75c08157afa.html</filename>
    <file>WsUser.cpp</file>
    <file>WsUser.h</file>
  </compound>
  <compound kind="dir">
    <name>src/WsAuthModules</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsAuthModules/</path>
    <filename>dir_b125deb23671df1ac9f24d90954c4c9e.html</filename>
    <dir>src/WsAuthModules/BasicAuth</dir>
    <dir>src/WsAuthModules/Ldap</dir>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModAnchor</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModAnchor/</path>
    <filename>dir_9cc32549f906592543429cac4d5ebd46.html</filename>
    <dir>src/WsModules/WsModAnchor/src</dir>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModBanners</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModBanners/</path>
    <filename>dir_cf309d830ece5408ac4abe7d95545d8b.html</filename>
    <dir>src/WsModules/WsModBanners/src</dir>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModBreadCrumb</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModBreadCrumb/</path>
    <filename>dir_5115d82346545a49b07f201abdeb97f3.html</filename>
    <dir>src/WsModules/WsModBreadCrumb/src</dir>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModDirectoryView2</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModDirectoryView2/</path>
    <filename>dir_e6c18ee58bd294cef2f7b4dffce64229.html</filename>
    <dir>src/WsModules/WsModDirectoryView2/src</dir>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModEditor</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModEditor/</path>
    <filename>dir_9f6b9cf6b42c4aded48b2e0540e21516.html</filename>
    <dir>src/WsModules/WsModEditor/src</dir>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModFileUpload</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModFileUpload/</path>
    <filename>dir_1cb15f5f325a1a3cf96fe855c6ea08ee.html</filename>
    <dir>src/WsModules/WsModFileUpload/src</dir>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModFollowUs</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModFollowUs/</path>
    <filename>dir_a883162836f1a275488e246ac49670e3.html</filename>
    <dir>src/WsModules/WsModFollowUs/src</dir>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModGalleria</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModGalleria/</path>
    <filename>dir_62876e4e54d0846b31678273b63dbc98.html</filename>
    <dir>src/WsModules/WsModGalleria/src</dir>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModImages2</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModImages2/</path>
    <filename>dir_d7076de5bfa473e124d0c78279c39095.html</filename>
    <dir>src/WsModules/WsModImages2/src</dir>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModImagesGallery</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModImagesGallery/</path>
    <filename>dir_9e612a80eb540adde31891348f59a217.html</filename>
    <dir>src/WsModules/WsModImagesGallery/src</dir>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModLatestNews2</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModLatestNews2/</path>
    <filename>dir_a8b06a498a69b2071f01df785eb9b992.html</filename>
    <dir>src/WsModules/WsModLatestNews2/src</dir>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModLinksList</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModLinksList/</path>
    <filename>dir_c6b210053fe9d700228801b40bd2cf40.html</filename>
    <dir>src/WsModules/WsModLinksList/src</dir>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModMeetingView</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModMeetingView/</path>
    <filename>dir_584fbb9f84c5ff598763bdb45e6391b1.html</filename>
    <dir>src/WsModules/WsModMeetingView/src</dir>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModMenu</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModMenu/</path>
    <filename>dir_ed58e671e3ba162f60d407d5bb23e166.html</filename>
    <dir>src/WsModules/WsModMenu/src</dir>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModMenuImages</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModMenuImages/</path>
    <filename>dir_106f712c863a5e5e8f35c93ccdf4fc6d.html</filename>
    <dir>src/WsModules/WsModMenuImages/src</dir>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModNewsLetter</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModNewsLetter/</path>
    <filename>dir_aae5dd8a108aa9555402777ceed5d997.html</filename>
    <dir>src/WsModules/WsModNewsLetter/src</dir>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModOdf</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModOdf/</path>
    <filename>dir_b391919a87b3e3e8ac827771a3009217.html</filename>
    <dir>src/WsModules/WsModOdf/src</dir>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModPdf</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModPdf/</path>
    <filename>dir_abff5bfd8d5e6ba18175e9f6f2f152f4.html</filename>
    <dir>src/WsModules/WsModPdf/src</dir>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModRSS</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModRSS/</path>
    <filename>dir_1eef092cc999352ed9b1574838f38f4f.html</filename>
    <dir>src/WsModules/WsModRSS/src</dir>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModTwitter</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModTwitter/</path>
    <filename>dir_9cd1932fabbc6962a10b86f7c6330bb0.html</filename>
    <dir>src/WsModules/WsModTwitter/src</dir>
  </compound>
  <compound kind="dir">
    <name>src/WsModule</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModule/</path>
    <filename>dir_f288f2bb6ba995c8a016ff0461ccf88d.html</filename>
    <dir>src/WsModule/src</dir>
  </compound>
  <compound kind="dir">
    <name>src/WsModules</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/</path>
    <filename>dir_aaf19c9503b1b9eb45b29cf92fc93337.html</filename>
    <dir>src/WsModules/WsModAnchor</dir>
    <dir>src/WsModules/WsModBanners</dir>
    <dir>src/WsModules/WsModBreadCrumb</dir>
    <dir>src/WsModules/WsModDirectoryView2</dir>
    <dir>src/WsModules/WsModEditor</dir>
    <dir>src/WsModules/WsModFileUpload</dir>
    <dir>src/WsModules/WsModFollowUs</dir>
    <dir>src/WsModules/WsModGalleria</dir>
    <dir>src/WsModules/WsModImages2</dir>
    <dir>src/WsModules/WsModImagesGallery</dir>
    <dir>src/WsModules/WsModLatestNews2</dir>
    <dir>src/WsModules/WsModLinksList</dir>
    <dir>src/WsModules/WsModMeetingView</dir>
    <dir>src/WsModules/WsModMenu</dir>
    <dir>src/WsModules/WsModMenuImages</dir>
    <dir>src/WsModules/WsModNewsLetter</dir>
    <dir>src/WsModules/WsModOdf</dir>
    <dir>src/WsModules/WsModPdf</dir>
    <dir>src/WsModules/WsModRSS</dir>
    <dir>src/WsModules/WsModTwitter</dir>
    <dir>src/WsModules/WsModVideo</dir>
    <dir>src/WsModules/WsModZip</dir>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModVideo</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModVideo/</path>
    <filename>dir_001dc66af218eae8bcf21cc85d5612b8.html</filename>
    <dir>src/WsModules/WsModVideo/src</dir>
  </compound>
  <compound kind="dir">
    <name>src/WsModules/WsModZip</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsModules/WsModZip/</path>
    <filename>dir_9b27cfd55fff7996a161901750da5935.html</filename>
    <dir>src/WsModules/WsModZip/src</dir>
  </compound>
  <compound kind="dir">
    <name>src/WsSearchModules</name>
    <path>/home/ben/Programming/C++/Wittyshare/wittyshare/src/WsSearchModules/</path>
    <filename>dir_7d4bbc1383454c5820252d73d78d10c2.html</filename>
    <dir>src/WsSearchModules/MnoGoSearch</dir>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>Wittyshare Documentation</title>
    <filename>index</filename>
  </compound>
</tagfile>
